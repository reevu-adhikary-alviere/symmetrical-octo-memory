openapi: 3.0.2
info:
  version: '2.0'
  title: The HIVE APIs
  contact:
    email: support@alviere.com
    url: https://alviere.com/
  x-logo:
    url: img/alviere-logo.svg
  description: |
    # Introduction                

    Welcome to The HIVE API documentation!

    This page provides developer API documentation for integrating into the Alviere HIVE platform.

    ### Notes

    * All times are in UTC time standard
    * All date fields use the RFC 3339 version of the ISO-8601 standard format
servers:
  - url: https://api.snd.alviere.com
    description: Alviere API
tags:
  - name: Accounts
  - name: Authentication
  - name: Wallets
  - name: Transactions
  - name: Payment methods
  - name: Dossiers
  - name: Beneficiaries
  - name: Card issuance
  - name: Check Deposits
  - name: Global payments
  - name: Treasury management
  - name: Service fees
  - name: Rewards and Incentives
paths:
  /auth/realms/customers/protocol/openid-connect/token:
    servers:
      - url: https://auth.snd.alviere.com
        description: Authentication API
    post:
      tags:
        - Authentication
      summary: Request an access token
      description: Authenticates the user and returns an access token to be used in every subsequent API request.
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                client_id:
                  type: string
                  description: Your unique Client ID in the Alviere platform
                  example: your_client_id
                client_secret:
                  type: string
                  description: The API key for authentication in the Alviere platform
                  example: your_client_secret
                grant_type:
                  type: string
                  description: |
                    To authenticate to the API *always* use `client_credentials` in this field
                  example: client_credentials
              required:
                - client_id
                - client_secret
                - grant_type
      responses:
        '200':
          description: |
            The request was successful and the user is authenticated.

            The `JWT` token that is returned should be used in every subsequent call to the API.
          content:
            application/json:
              schema:
                type: object
                required:
                  - access_token
                  - expires_in
                  - refresh_expires_in
                  - refresh_token
                  - token_type
                  - not-before-policy
                  - session_state
                  - scope
                properties:
                  access_token:
                    type: string
                    description: The JWT token to be used for every API request.
                    example: eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUI...
                  expires_in:
                    type: integer
                    description: The expiration time for the token, in seconds.
                    example: 300
                  refresh_expires_in:
                    type: integer
                    description: The expiration time for the refresh token, in seconds.
                    example: 1800
                  refresh_token:
                    type: string
                    description: The refresh token that can be used to refresh a session token.
                    example: eyJhbGciOiJIUzI1NiIsInR5cCIgOiAiSldUrw...
                  token_type:
                    type: string
                    description: The type of token returned by the authentication server. In this version of the API this property will always return `bearer`
                    example: bearer
                  not-before-policy:
                    type: integer
                    description: The not before policy for the JWT token. Defaults to 0
                    example: 0
                  session_state:
                    type: string
                    description: Unique identifier of the session state
                    example: 8c573816-96b1-4dc3-bce8-e59fd2bf9dec
                  scope:
                    type: string
                    description: The scope of the session.
                    example: 'null'
        '400':
          description: |
            The request for authentication was denied.
            The provided credentials are not valid for system access.
      operationId: request-access-token
      parameters:
        - schema:
            type: string
          in: header
          name: User-Agent
          description: Header intended to identify the user agent responsible for making a given HTTP request
          required: true
  /sdk/auth/generate/pds/token:
    post:
      tags:
        - Authentication
      summary: Request a payroll deposit switch token
      description: This service generates a token under your account to be used with the payroll deposit switch provider
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                wallet_uuid:
                  type: string
                  format: uuid
                  title: Account UUID
                  description: ID of the wallet to which the payroll deposit switch provider should send funds to
              required:
                - wallet_uuid
        description: ''
      responses:
        '201':
          description: |
            OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  pds_sdk_token:
                    type: string
                    description: The retrieved SDK token
                  pds_sdk_token_expires_at:
                    type: string
                    format: date-time
                    description: The SDK token expiration date
                required:
                  - pds_sdk_token
                  - pds_sdk_token_expires_at
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '404':
          $ref: '#/components/responses/404-Error'
        '503':
          description: Service Unavailable
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    title: The unique error code
                    description: This error indicates that the server failed to retrieve the mobile token.
                    type: string
                    example: '110003'
                  error_description:
                    title: A description of the error that occurred
                    description: Description of the error in plain english
                    type: string
                    example: failed to retrieve plaid sdk token from gateway
      operationId: AUTH-05
    parameters: []
  /sdk/auth/generate/mobile/token:
    post:
      tags:
        - Authentication
      summary: Request a mobile token
      description: This service generates a secure and authenticated token under your account to be used with Alviere's Android or iOS Mobile SDK
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - account_uuid
              properties:
                account_uuid:
                  type: string
                  format: uuid
                  title: Account UUID
                with_plaid_sdk_token:
                  type: string
                  enum:
                    - ANDROID
                    - IOS
      responses:
        '201':
          description: |
            The request was successful and the user is authenticated.
            The `JWT` token that is returned should be used to instantiate Alviere's iOS and Android Mobile SDK's.
          content:
            application/json:
              schema:
                type: object
                required:
                  - auth_token
                properties:
                  auth_token:
                    type: string
                    description: The newly generated authentication token
                  plaid_sdk_token:
                    type: string
                    description: The retrieved Plaid SDK token which corresponds to the `link_token` on Plaid.
                  plaid_sdk_token_expires_at:
                    type: string
                    format: date-time
                    description: The Plaid SDK token expiration date.
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '404':
          $ref: '#/components/responses/404-Error'
        '503':
          description: Service Unavailable
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    title: The unique error code
                    description: This error indicates that the server failed to retrieve the mobile token.
                    type: string
                    example: '110003'
                  error_description:
                    title: A description of the error that occurred
                    description: Description of the error in plain english
                    type: string
                    example: failed to retrieve plaid sdk token from gateway
      operationId: generate-mobile-token
  /sdk/auth/generate/plaid/token:
    post:
      tags:
        - Authentication
      summary: Request a plaid token
      description: This service generates a token under your account to be used with Plaid
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                account_uuid:
                  type: string
                  format: uuid
                  title: Account UUID
                  description: ID of the account
                platform:
                  type: string
                  enum:
                    - IOS
                    - ANDROID
                    - WEB
                  description: The platform on which Plaid is going to be used
                payment_method_uuid:
                  type: string
                  description: The UUID of the related payment method
              required:
                - account_uuid
                - platform
      responses:
        '201':
          description: |
            OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  plaid_sdk_token:
                    type: string
                    description: The retrieved Plaid SDK token which corresponds to the `link_token` on Plaid.
                  plaid_sdk_token_expires_at:
                    type: string
                    format: date-time
                    description: The Plaid SDK token expiration date.
                required:
                  - plaid_sdk_token
                  - plaid_sdk_token_expires_at
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
        '503':
          description: Service Unavailable
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    title: The unique error code
                    description: This error indicates that the server failed to retrieve the mobile token.
                    type: string
                    example: '110003'
                  error_description:
                    title: A description of the error that occurred
                    description: Description of the error in plain english
                    type: string
                    example: failed to retrieve plaid sdk token from gateway
      operationId: AUTH-04
    parameters: []
  /sdk/auth/generate/web/session:
    post:
      tags:
        - Authentication
      summary: Request a web session
      description: This service generates a secure and authenticated session under your account to be used with the Web SDK.
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - account_uuid
              properties:
                account_uuid:
                  type: string
                  format: uuid
                  title: Account UUID
      responses:
        '201':
          description: |
            The request was successful and the user is authenticated.
            The `Session ID` that is returned should be used to instantiate our WEB SDK's.
          content:
            application/json:
              schema:
                type: object
                required:
                  - session_id
                properties:
                  session_id:
                    type: string
                    description: The newly created session ID
                    format: uuid
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '404':
          $ref: '#/components/responses/404-Error'
      operationId: generate-web-session
  /accounts:
    get:
      summary: List accounts
      operationId: ACC-11
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  accounts:
                    type: array
                    description: List of accounts
                    items:
                      $ref: '#/components/schemas/account-response-list'
          headers:
            Alv-Request-Id:
              schema:
                type: string
              description: Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case and serves solely for the purpose of technical debugging and troubleshooting.
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
      description: List all accounts that are part of your Alviere program
      parameters:
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/Authorization'
        - name: external_id
          in: query
          required: false
          schema:
            type: string
          description: Filter accounts by external ID
        - name: phone_number
          in: query
          required: false
          schema:
            type: string
          description: Filter accounts by phone number
        - name: email_address
          in: query
          required: false
          schema:
            type: string
          description: Filter accounts by email address
        - schema:
            type: string
            enum:
              - CREATED
              - ACTIVE
              - INACTIVE
              - PROCESSING
              - PENDING_USER
              - MANUAL_REVIEW
              - REJECTED
              - DELETED
          in: query
          name: status
          description: Account status
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/start_date'
        - $ref: '#/components/parameters/end_date'
        - schema:
            type: string
            enum:
              - CONSUMER
              - BUSINESS
              - STAKEHOLDER
          in: query
          name: type
          description: Account type
        - schema:
            type: string
            enum:
              - IDENTITY
              - ADDRESS
              - SANCTIONS
              - FRAUD
              - DOCUMENTS_OPTIONAL_FULL_SSN
              - DOCUMENTS
              - IDENTITY_OPTIONAL_SSN
          in: query
          name: stage
          description: Account stage
        - schema:
            type: string
          in: query
          name: parent_account_uuid
          description: UUID of parent account
      tags:
        - Accounts
    post:
      operationId: accounts
      summary: Create account
      tags:
        - Accounts
      description: |-
        Creates an account in the system. Accounts can be of type `CONSUMER`, `BUSINESS` , `STAKEHOLDER` or `CARDHOLDER`

        This service will automatically trigger the KYC/KYB and Identity Management process relevant to the account type.  

        Please note that an account cannot be duplicated within the same parent program account; an account is considered duplicated when the same `external_id` is provided.

        **Note**: For consumer accounts, if you do not set the `primary_address` property, you have to add an address separately to initiate the KYC process.
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                external_id:
                  type: string
                  description: |
                    The ID of this account in your own platform. This will be associated with this account and can
                    be used to identify the account as well as protect our API against duplicate accounts.

                    NOTE: This field MUST be unique. Any subsequent Create Account with same `external_id` will fail with a HTTP 409.
                account_type:
                  type: string
                  enum:
                    - CONSUMER
                    - BUSINESS
                    - STAKEHOLDER
                    - CARDHOLDER
                profile:
                  type: string
                  description: The Profile that this Account should be created with. If not sent, the account will be created with the Profile set as default in your program configuration
                  example: "default"
                information:
                  $ref: '#/components/schemas/account-information-request'
                primary_address:
                  $ref: '#/components/schemas/address-request'
                metadata:
                  description: Allows for any number of custom metadata keys and values to be stored with a given account
                  type: object
              required:
                - external_id
                - account_type
                - information
      responses:
        '201':
          $ref: '#/components/responses/account-response-success'
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
        '409':
          $ref: '#/components/responses/account-response-idempotency'
  /accounts/{account_uuid}:
    get:
      tags:
        - Accounts
      summary: Get account
      description: Gets the account details, in its current status.
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/account_uuid'
        - $ref: '#/components/parameters/Version'
      responses:
        '200':
          description: |
            The account was successfully returned.
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  account:
                    $ref: '#/components/schemas/account-response'
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
      operationId: ACC-02
    patch:
      tags:
        - Accounts
      operationId: accounts-account_uuid-patch
      summary: Update account
      description: |
        Updates an existing account in the system.

        How this service works:
          - Only the properties that are present on the request body will be updated.
          - Properties not present on the request body will remain unchanged in the system.
          - To update a property to an empty string or `null` you need to put the correct value on the request.
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/account_uuid'
        - $ref: '#/components/parameters/Version'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                profile:
                  type: string
                  description: The Profile that this Account should be updated to
                information:
                  $ref: '#/components/schemas/account-information-update'
                metadata:
                  description: Allows for any number of custom metadata keys and values to be stored with a given account
                  type: object
                external_id:
                  type: string
                  description: The external account id of your platform
      responses:
        '200':
          description: |
            The account was successfully updated.
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  account:
                    $ref: '#/components/schemas/account-response'
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
    delete:
      tags:
        - Accounts
      operationId: accounts-account_uuid-delete
      summary: Delete account
      description: |
        Removes an account from the system.

        Note: For historical purposes, an account is never deleted, but rather its status is set to `DELETED`.
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/account_uuid'
      responses:
        '204':
          description: |
            Account successfully deleted.
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
        '409':
          description: Conflict on the field `external_id`. Entity has already been deleted.
  /payment-methods/cards/{payment_method_uuid}:
    
    patch:
      summary: Update card
      tags:
        - Payment methods
      responses:
        '200':
          description: Card was successfully updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  card:
                    $ref: '#/components/schemas/card-pm-response'
          headers:
            Alv-Request-Id:
              schema:
                type: string
              description: Alviere's internal unique identifier for the request. This ID is automatically generated by our API service andspans across our entire infrastructure allowing tech ops to trace a request. This id has no business use caseand serves solely for the purpose of technical debugging and troubleshooting.
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/404-Error'
      operationId: PM-12
      description: Updates a card payment method properties
      parameters:
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/payment_method_uuid'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/card-pm-update'
  /accounts/{account_uuid}/deactivate:
    put:
      tags:
        - Accounts
      summary: Deactivate consumer account
      description: |
        Deactivates a consumer account.
        Only accounts in `ACTIVE` status can be de-activated
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/account_uuid'
        - $ref: '#/components/parameters/Version'
      responses:
        '204':
          description: Consumer account inactivated successfully
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
        '409':
          description: Conflict. User account already INACTIVE
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    title: The unique error code
                    description: This error indicates a request conflict with current status of the target resource.
                    type: string
                    example: '50010'
                  error_description:
                    title: A description of the error that occurred
                    description: Description of the error in plain english
                    type: string
                    example: account being processed
      operationId: accounts-account_uuid-inactivate-put
  /accounts/{account_uuid}/activate:
    put:
      tags:
        - Accounts
      summary: Activate consumer account
      description: |
        Activates a consumer account.
        Only accounts in `INACTIVE` status can ba activated.
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/account_uuid'
        - $ref: '#/components/parameters/Version'
      responses:
        '204':
          description: Consumer account activated successfully
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
        '409':
          description: Conflict. User account already ACTIVE
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    title: The unique error code
                    description: This error indicates a request conflict with current status of the target resource.
                    type: string
                    example: '50010'
                  error_description:
                    title: A description of the error that occurred
                    description: Description of the error in plain english
                    type: string
                    example: account being processed
      operationId: accounts-account_uuid-activate-put

  /accounts/{account_uuid}/onboarding:
    put:
      tags:
        - Accounts
      summary: Manage onboarding process
      description: Manage the KYC onboarding process for an account. This endpoint is used when the account profile is configured with manual onboarding trigger. The account must have all required fields populated according to its profile requirements.
      operationId: accounts-account_uuid-onboarding-put
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/account_uuid'
        - $ref: '#/components/parameters/Version'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - action
              properties:
                action:
                  type: string
                  enum:
                    - START_ONBOARDING
                  description: The action to perform on the onboarding process
                  example: START_ONBOARDING
      responses:
        '204':
          description: Onboarding action completed successfully
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
        '409':
          description: Conflict - onboarding already in progress
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    title: The unique error code
                    description: This error indicates a request conflict with current status of the target resource.
                    type: string
                    example: '50010'
                  error_description:
                    title: A description of the error that occurred
                    description: Description of the error in plain english
                    type: string
                    example: account being processed
  /accounts/{account_uuid}/addresses:
    post:
      tags:
        - Accounts
      summary: Create address
      description: Creates an address and adds it to the account.
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/account_uuid'
        - $ref: '#/components/parameters/Version'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/address-request'
      responses:
        '201':
          description: |
            The address was successfully created and added to the respective account
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  address:
                    $ref: '#/components/schemas/address-response'
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
        '409':
          description: Conflict on the field `label` or `external_id`
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  address:
                    $ref: '#/components/schemas/address-response'
      operationId: accounts-account_uuid-addresses-post
    get:
      tags:
        - Accounts
      summary: List addresses
      description: |-
        Gets the list of addresses associated with the account.
        The `primary` address is used for Identity Verification processes.
      parameters:
        - in: header
          name: Authorization
          required: true
          description: The access token.
          example: Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUI...
          schema:
            type: string
        - $ref: '#/components/parameters/account_uuid'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: |
            The addresses were returned for the account
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  addresses:
                    title: List of addresses
                    type: array
                    items:
                      $ref: '#/components/schemas/address-response'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
      operationId: accounts-account_uuid-addresses-get
  /accounts/{account_uuid}/addresses/{address_uuid}:
    patch:
      tags:
        - Accounts
      summary: Update address
      description: |-
        Updates an existing address in the account.

        Note: if the primary address is updated, the Identity Verification process is resumed.
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/account_uuid'
        - $ref: '#/components/parameters/address_uuid'
        - $ref: '#/components/parameters/Version'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/address-update'
      responses:
        '200':
          description: |
            The address was updated
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  address:
                    $ref: '#/components/schemas/address-response'
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
      operationId: accounts-account_uuid-addresses-address_uuid-path
    delete:
      tags:
        - Accounts
      summary: Delete address
      description: |
        Deletes an address from the account. 

        *Note:* A primary address of an account cannot be deleted. If the primary address has changed the original record needs to be updated.
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/account_uuid'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/address_uuid'
      responses:
        '204':
          description: |
            Address deleted
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
        '409':
          description: Conflict on the field `external_id`. Entity has already been deleted.
      operationId: accounts-account_uuid-addresses-address_uuid-delete

  /accounts/{account_uuid}/dossiers/{dossier_uuid}:
    get:
      tags:
        - Dossiers
      summary: Get dossier
      description: |
        Gets a specific dossier from the account, including the uploaded documents.
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/account_uuid'
        - $ref: '#/components/parameters/dossier_uuid'
        - $ref: '#/components/parameters/Version'
      responses:
        '200':
          description: |
            The dossier was returned for the account
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  dossier:
                    $ref: '#/components/schemas/dossier-response'
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
      operationId: accounts-account_uuid-dossiers-dossier_uuid-get
    patch:
      tags:
        - Dossiers
      summary: Update dossier
      description: Updates an existing dossier in the system.
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/account_uuid'
        - $ref: '#/components/parameters/dossier_uuid'
        - $ref: '#/components/parameters/Version'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dossier-update'
      responses:
        '200':
          description: |
            The dossier was updated.

            The actual files of the dossier are not returned in this response. To access the files you must call `/accounts/{account_uuid}/dossiers/{dossier_uuid}`
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  dossier:
                    $ref: '#/components/schemas/dossier-response'
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
      operationId: accounts-account_uuid-dossiers-dossier_uuid-patch
    put:
      tags:
        - Dossiers
      summary: Replace dossier
      description: Replaces an existing dossier in the system.
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/account_uuid'
        - $ref: '#/components/parameters/dossier_uuid'
        - $ref: '#/components/parameters/Version'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dossier-replace'
        description: ''
      responses:
        '201':
          description: |
            The dossier was replaced.

            The actual files of the dossier are not returned in this response. To access the files you must call `/accounts/{account_uuid}/dossiers/{dossier_uuid}`
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  dossier:
                    $ref: '#/components/schemas/dossier-response'
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
      operationId: accounts-account_uuid-dossiers-dossier_uuid-put
    delete:
      tags:
        - Dossiers
      summary: Delete dossier
      description: Deletes a dossier from the system
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/account_uuid'
        - $ref: '#/components/parameters/dossier_uuid'
        - $ref: '#/components/parameters/Version'
      responses:
        '204':
          description: |
            Dossier deleted
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
        '409':
          description: Conflict on the field `external_id`. Entity has already been deleted.
      operationId: accounts-account_uuid-dossiers-dossier_uuid-delete

  /accounts/{account_uuid}/dossiers:
    post:
      tags:
        - Dossiers
      summary: Create dossier
      description: Upload Dossier documents to the account
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/account_uuid'
        - $ref: '#/components/parameters/Version'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dossier-request'
      responses:
        '201':
          description: |
            The user account dossier was successfully created in the system and the KYC and Identity Management processes might have been kicked off.

            The actual files of the dossier are not returned in this response. To access the files you must call `/accounts/{account_uuid}/dossiers/{dossier_uuid}`
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  dossier:
                    $ref: '#/components/schemas/dossier-response'
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
        '409':
          description: Idempotency detected - Conflict on the field `external_id`
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  dossier:
                    $ref: '#/components/schemas/dossier-response'
      operationId: accounts-account_uuid-dossiers-post
    get:
      tags:
        - Dossiers
      summary: List dossiers
      description: |-
        Gets the account dossiers, including all documents that have been uploaded to this account.

        The actual files of the dossier are not returned in this response. To access the files you must call `Get dossier`.
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/account_uuid'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: |
            The dossiers were returned for the account
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  dossiers:
                    type: array
                    items:
                      $ref: '#/components/schemas/dossier-response-list'
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
      operationId: accounts-account_uuid-dossiers-get
  /accounts/{account_uuid}/wallets/{wallet_uuid}:
    get:
      summary: Get wallet
      description: Gets a wallet that belongs to an account
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/account_uuid'
        - $ref: '#/components/parameters/wallet_uuid'
        - $ref: '#/components/parameters/Version'
      responses:
        '200':
          description: |
            The requested wallet
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                description: 'A wallet '
                properties:
                  wallet:
                    $ref: '#/components/schemas/wallet'
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
      operationId: wallet-account_uuid-wallet_uuid-get
      tags:
        - Wallets
    
  /wallets/{wallet_uuid}/transactions/statement:
    get:
      summary: Get wallet statement 
      description: |-
        Gets aggregated wallet transaction data required to build a monthly transaction statement for an account wallet.

        Data is only available for months that have ended or that are in the past.
      parameters:
        
        - in: query
          name: scope
          schema:
            enum:
              - DEBITS
              - CREDITS
              - FEES
              - ALL
            default: ALL
          description: Whether to perform an operation on all debits, credits or fees
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/wallet_uuid'
        - schema:
            type: string
            example: 03-2022
          in: query
          name: month_year
          description: The month and year for which the aggregated data is required
          required: true
      responses:
        '200':
          description: |
            The transactions for the user account wallet
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                description: The transactions list
                required:
                  - start_date
                  - end_date
                  - currency
                properties:
                  debits:
                    type: object
                    description: Debits related data
                    required:
                      - amount
                    properties:
                      amount:
                        type: integer
                        description: 'The total debit amount to the wallet in the currency of the transaction, defined in cents. e.g. 1 USD will be represented as amount: 100'
                      transactions:
                        type: array
                        items:
                          $ref: '#/components/schemas/wallet-transaction-statement'
                  credits:
                    type: object
                    description: Credits related data
                    required:
                      - amount
                    properties:
                      amount:
                        type: integer
                        description: 'The total credit amount on the wallet in the currency of the transaction, defined in cents. e.g. 1 USD will be represented as amount: 100'
                      transactions:
                        type: array
                        items:
                          $ref: '#/components/schemas/wallet-transaction-statement'
                  fees:
                    type: object
                    description: Fees related data
                    required:
                      - amount
                    properties:
                      amount:
                        type: integer
                        description: 'The total amount of fees charged to the wallet in the currency of the transaction, defined in cents. e.g. 1 USD will be represented as amount: 100'
                      transactions:
                        type: array
                        items:
                          $ref: '#/components/schemas/wallet-transaction-statement'
                  start_date:
                    type: string
                    description: The start date of the period considered
                  start_date_funds:
                    $ref: '#/components/schemas/funds'
                  end_date:
                    type: string
                    description: The end date of the period considered
                  end_date_funds:
                    $ref: '#/components/schemas/funds'
                  currency:
                    type: string
                    description: The currency code in ISO-4217 format
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
      operationId: get-wallets-wallet_uuid-transactions-statement
      tags:
        - Wallets
  /accounts/{account_uuid}/wallets:
    get:
      summary: List wallets
      description: Gets all wallets that belong to an account
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/account_uuid'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: |
            All wallets that belong to an account
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                description: The ledger for this user account.
                properties:
                  wallets:
                    type: array
                    items:
                      $ref: '#/components/schemas/wallet'
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
      operationId: wallet-account_uuid-get
      tags:
        - Wallets
    
  /transactions/release:
    post:
      operationId: TRN-07
      summary: Release funds
      description: This service allows clients to release a transaction amount prior to its settlement in the system.
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                external_id:
                  type: string
                  description: |
                    The external id of this request in your own platform. This value is used for idempotency purposes.
                  example: 1AS245CHK
                transaction_uuid:
                  type: string
                  format: uuid
                  description: The unique ID of the transaction
                release_amount:
                  description: |
                    The amount to be released from this transaction prior to settlement, in cents. 
                    e.g. If you want to debit 1 USD the value must be `amount: 100`
                  type: integer
                  minimum: 1
                  maximum: 99999999
                service_fees:
                  type: array
                  items:
                    $ref: '#/components/schemas/service-fee-release'
              required:
                - external_id
                - transaction_uuid
                - release_amount
      responses:
        '200':
          description: The funds were successfully released
          content:
            application/json:
              schema:
                type: object
                properties:
                  transaction:
                    $ref: '#/components/schemas/transaction'
                required:
                  - transaction
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
        '409':
          description: Idempotency detected - conflict with `external_id` field.
          content:
            application/json:
              schema:
                type: object
                properties:
                  transaction:
                    $ref: '#/components/schemas/transaction'
                required:
                  - transaction
      tags:
        - Transactions
    parameters: []
  /transactions/{transaction_uuid}:
    get:
      summary: Get transaction details
      description: Gets the details of a transaction
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/transaction_uuid'
        - $ref: '#/components/parameters/Version'
      responses:
        '200':
          description: |
            The transaction from the account wallet
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  transaction:
                    $ref: '#/components/schemas/transaction'
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
      operationId: TRN-01
      tags:
        - Transactions

  /transactions/{transaction_uuid}/reverse:
    post:
      summary: Reverse transaction
      description: Trigger the reversal of a transaction. Only applicable to `SERVICE_FEE`, `CASHBACK`, `CARD_ISSUED_INITIAL` or `LOAD_FUNDS` with card transaction types
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/transaction_uuid'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                  description: A short description of the reason the transaction was reversed
                amount:
                  description: |
                    The amount to reverse, in cents. If not provided, the full transaction amount will be reversed.
                    e.g. If you want to reverse 1 USD the value must be `amount: 100`
                  type: integer
                  minimum: 1
                  maximum: 99999999
                refund_reason:
                  enum:
                    - DUPLICATE
                    - FRAUD
                    - CUSTOMER_REQUEST
                    - OTHER
                  description: The reason why the transaction was reversed
      responses:
        '201':
          description: The reversal transaction has been created.
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  transaction_uuid:
                    title: Child transaction
                    description: The field will contain the UUID of the reversal or refund transaction that was generated as part of this operation.
                    type: string
                    format: uuid
                    example: 798ee7f3-bb75-4a4c-9a2a-06cb697ddb5e
                required:
                  - transaction_uuid
        '204':
          description: Transaction successfully canceled or Voided
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
        '409':
          description: Conflict on provided transaction UUID. Original transaction has already been reversed
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  transaction_uuid:
                    title: Child transaction
                    description: The field will contain the UUID of the reversal transaction that was generated as part of this operation.
                    type: string
                    format: uuid
                    example: 798ee7f3-bb75-4a4c-9a2a-06cb697ddb5e
                required:
                  - transaction_uuid
      operationId: TRN-05
      tags:
        - Transactions

  /wallets/{wallet_uuid}/transactions:
    get:
      summary: List wallet transactions
      description: Gets a list of transactions associated to this wallet
      parameters:
        - in: header
          name: Authorization
          required: true
          description: The access token.
          example: Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUI...
          schema:
            type: string
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/wallet_transaction_type'
        - $ref: '#/components/parameters/transaction-status'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/start_date'
        - $ref: '#/components/parameters/end_date'
        - $ref: '#/components/parameters/wallet_uuid'
        - schema:
            type: string
          in: query
          name: beneficiary_uuid
          description: The unique ID of the Beneficiary that is associated with the transactions
        - schema:
            type: string
          in: query
          name: issued_card_uuid
          description: The unique ID of the issued card that is associated with the transactions
        - schema:
            type: string
          in: query
          name: payment_method_uuid
          description: The unique ID of the payment method that is associated with the transactions
      responses:
        '200':
          description: |
            The transactions for the user account wallet
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                description: The transactions list
                required:
                  - records
                  - transactions
                properties:
                  records:
                    type: integer
                    title: Number of records
                    description: The number of transaction records returned
                  transactions:
                    type: array
                    title: transactions
                    description: The transactions in the user account wallet
                    items:
                      $ref: '#/components/schemas/wallet-transaction-list'
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
      operationId: wallet-account_uuid-wallet_uuid-transactions-get
      tags:
        - Wallets

  /transactions:
    get:
      summary: List Transactions
      description: Gets a list of Transactions associated to an Account
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/wallet_transaction_type'
        - $ref: '#/components/parameters/transaction-status'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/start_date'
        - $ref: '#/components/parameters/end_date'
        - schema:
            type: string
          in: query
          name: account_uuid
          description: The unique ID of the Account
        - schema:
            type: string
          in: query
          name: wallet_uuid
          description: The unique ID of the Wallet
        - schema:
            type: string
          in: query
          name: beneficiary_uuid
          description: The unique ID of a Beneficiary
        - schema:
            type: string
          in: query
          name: issued_card_uuid
          description: The unique ID of the issued card that is associated with the transactions
        - schema:
            type: string
          in: query
          name: payment_method_uuid
          description: The unique ID of the payment method that is associated with the transactions
      responses:
        '200':
          description: |
            The transactions for the user account wallet
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                description: The transactions list
                properties:
                  records:
                    type: integer
                    title: Number of records
                    description: The number of transaction records returned
                  transactions:
                    type: array
                    title: transactions
                    description: The transactions related to this account
                    items:
                      $ref: '#/components/schemas/wallet-transaction'
                required:
                  - records
                  - transactions
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
      operationId: TRN-06
      tags:
        - Transactions
  /transactions/{transaction_uuid}/cancel:

    put:
      summary: Cancel transaction
      operationId: put-transactions-transaction_uuid---copy
      responses:
        '204':
          description: Transaction successfully canceled
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
        '409':
          description: Transaction is already in a `CANCELED` status
      description: Cancel transaction
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/transaction_uuid'
      tags:
        - Transactions
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                  description: A small description indicating why the transaction was canceled
                refund_method:
                  enum:
                    - CASH
                    - CHECK
                  description: The refund method. Only applicable for transactions funded with cash
  /transactions/{transaction_uuid}/refund:

    put:
      summary: Update Refund transaction
      tags:
        - Transactions
      responses:
        '204':
          description: Refund method set
          headers:
            Alv-Request-Id:
              schema:
                type: string
              description: Alviere's internal unique identifier for the request. This ID is automatically generated by our API service andspans across our entire infrastructure allowing tech ops to trace a request. This id has no business use caseand serves solely for the purpose of technical debugging and troubleshooting.
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
      operationId: TRN-09
      parameters:
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/transaction_uuid'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - refund_method
              properties:
                refund_method:
                  description: The refund method
                  enum:
                    - CASH
                    - CHECK
      description: Indicates the refund method for a `REFUND` transaction that is in `PENDING` status

  /transactions/{transaction_uuid}/child_transactions:
    get:
      summary: List child transactions
      description: Gets a list of child transactions associated to this transaction
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/transaction-type'
        - $ref: '#/components/parameters/transaction-status'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/transaction_uuid'
      responses:
        '200':
          description: |
            The transactions for the user account wallet
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                description: The transactions list
                required:
                  - records
                  - transactions
                properties:
                  records:
                    type: integer
                    title: Number of records
                    description: The number of transaction records returned
                  transactions:
                    type: array
                    title: transactions
                    description: The transactions in the user account wallet
                    items:
                      $ref: '#/components/schemas/transaction'
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
      operationId: transactions-child-get
      tags:
        - Transactions

  /wallets/{wallet_uuid}/load:
    post:
      summary: Load funds
      description: |
        Loads funds to a wallet.

        In order to load funds into the wallet, the user account needs to have a valid payment method, tokenized in the system through the payment methods services.

        Once funds are loaded in the user account, the account wallet will have the corresponding amount in the `transit` or `pending` bucket depending on the prefunding setting. This means that the loading of funds transaction has been accepted, but the funds are not settled yet. Funds will be settled according to the selected payment method settlement times.
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/wallet_uuid'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - payment_method_uuid
                - amount
                - external_id
              properties:
                payment_method_uuid:
                  type: string
                  description: The token corresponding to the payment method being used.
                  format: uuid
                amount:
                  description: |
                    The amount is the value associated with the request, in cents. 
                    e.g. If you want to debit 1 USD the value must be `amount: 100`
                  type: integer
                  minimum: 1
                  maximum: 9999999999
                service_fees:
                  type: array
                  title: service fees
                  description: Service fees to be applied to this transaction.
                  items:
                    $ref: '#/components/schemas/service-fee-transaction'
                external_id:
                  title: The unique order ID in the external system
                  description: |
                    This value is used for idempotency purposes.

                    NOTE: This field MUST be unique. Any subsequent transactions with the same value will be discarded.
                  type: string
                  minimum: 8
                  maximum: 64
                transaction_options:
                  type: object
                  description: Options related to transaction handling
                  properties:
                    payment_options:
                      type: object
                      description: Options related to payment processing
                      properties:
                        ACH_type:
                          type: string
                          enum:
                            - SAME_DAY
                            - NEXT_DAY
                          description: Whether the ACH transfer should be done on the same day or next day window batches
                        prefund:
                          type: boolean
                          description: Whether this transaction should be prefunded
                metadata:
                  type: object
                  description: Allows for any number of custom metadata keys and values to be stored with a given transaction
      responses:
        '201':
          $ref: '#/components/responses/wallet-transaction-response-success'
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
        '409':
          $ref: '#/components/responses/wallet-transaction-response-idempotency'
      operationId: wallets-load-funds-post
      tags:
        - Wallets

  /wallets/spend-management/set:
    post:
      summary: Set spend budget
      description: Load/adjust funds of a Spend Budget
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - title: Single setting
                  required:
                    - target_wallet_uuid
                    - mode
                  properties:
                    target_wallet_uuid:
                      type: string
                      description: The unique ID of the wallet where the funds should be allocated
                    funding_wallet_uuid:
                      type: string
                      description: The unique ID of the source of the funds
                    external_id:
                      title: The unique order ID in the external system
                      description: |
                        This value is used for idempotency purposes.

                        NOTE: This field MUST be unique. Any subsequent transactions with the same value will be discarded.
                      type: string
                      minimum: 8
                      maximum: 64
                    mode:
                      enum:
                        - LOAD
                        - ADJUST
                      description: If `LOAD`, the `amount` will be added to the spend budget. If `ADJUST` the existing budget will be replaced with the `amount`
                    spend_budget:
                      $ref: '#/components/schemas/spend-budget-request'
                    metadata:
                      type: object
                      description: Allows for any number of custom metadata keys and values to be stored with a given transaction
                - title: Bulk setting
                  required:
                    - instructions_file
                  properties:
                    instructions_file:
                      type: string
                      format: binary
                      description: A file containing instructions to perform a bulk load
              type: object
      responses:
        '201':
          $ref: '#/components/responses/wallet-transaction-response-success'
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
        '409':
          $ref: '#/components/responses/wallet-transaction-response-idempotency'
      operationId: wallets-spend-management-set-post
      tags:
        - Wallets
    parameters: []
  /bulk-operations/template:
    parameters: []
    get:
      summary: Download bulk operation template
      tags:
        - Wallets
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - instructions_template
                properties:
                  instructions_template:
                    type: string
                    format: binary
                    description: Bulk operation template
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
      operationId: get-wallets-spend-management-download-template
      parameters:
        - schema:
            type: string
            enum:
              - CSV
              - XLS
            default: CSV
          in: query
          name: file_type
          description: The required filetype
          required: true
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/Authorization'
        - schema:
            type: string
            enum:
              - SPEND_MANAGEMENT
          in: query
          name: operation
          description: The type of bulk operation
          required: true
  /wallets/{wallet_uuid}/withdraw:
    post:
      summary: Withdraw funds
      description: |
        Alviere supports withdrawing funds from the user account's wallet to an external funding destination using this service.

        In order to withdraw funds from the account wallet, the user account needs to have a valid payment method, tokenized in the system through the payment methods services.
        Note that withdrawing funds to a Card requires that the push-to-debit service is active and the card supports this feature over the debit card rails of the network schemes.

        Once funds are withdrawn from the user account, the account wallet will have the corresponding amount in the `captive` bucket. This means that the withdrawing of funds transaction has been accepted, but the funds are not available in the destination source yet. Funds will be settled according to the selected payment method settlement times.

        **Important Note**: Although withdrawing of funds returns structure of the underlying payment transaction, account wallet operations can only be cancelled using the unique `transaction_uuid`.
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/wallet_uuid'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - payment_method_uuid
                - amount
                - external_id
              properties:
                payment_method_uuid:
                  type: string
                  description: The token corresponding to the payment method being used.
                  format: uuid
                amount:
                  description: |
                    The amount is the value associated with the request, in cents. 
                    e.g. If you want to debit 1 USD the value must be `amount: 100`
                  type: integer
                  minimum: 1
                  maximum: 9999999999
                service_fees:
                  type: array
                  title: service fees
                  description: Service fees associated with the withdraw funds transaction.
                  items:
                    $ref: '#/components/schemas/service-fee-transaction'
                external_id:
                  title: The unique order ID in the external system
                  description: |
                    This value is used for idempotency purposes.

                    NOTE: This field MUST be unique. Any subsequent transactions with the same value will be discarded.
                  type: string
                  minimum: 8
                  maximum: 64
                transaction_options:
                  type: object
                  description: Options related to transaction handling
                  properties:
                    payment_options:
                      type: object
                      description: Options related to payment processing
                      properties:
                        ACH_type:
                          type: string
                          enum:
                            - SAME_DAY
                            - NEXT_DAY
                          description: Whether the ACH transfer should be done on the same day or next day window batches
                metadata:
                  type: object
                  description: Allows for any number of custom metadata keys and values to be stored with a given transaction
      responses:
        '201':
          $ref: '#/components/responses/wallet-transaction-response-success'
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
        '409':
          $ref: '#/components/responses/wallet-transaction-response-idempotency'
      operationId: wallets-account_uuid-wallet_uuid-withdraw-post
      tags:
        - Wallets
  /wallets/{wallet_uuid}/send:
    post:
      summary: Send to Wallet
      description: |-
        Alviere provides the ability to send funds to another user wallet.
        This feature is only available for customers subscribed to a P2P
        program.
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/wallet_uuid'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                destination_wallet_uuid:
                  type: string
                  description: The uuid of the wallet to send the funds to
                  format: uuid
                external_id:
                  title: The unique order ID in the external system
                  description: |
                    This value is used for idempotency purposes.

                    NOTE: This field MUST be unique. Any subsequent transactions with the same value will be discarded.
                  type: string
                  minimum: 8
                  maximum: 64
                amount:
                  description: |
                    The amount is the value associated with the request, in cents. 
                    e.g. If you want to debit 1 USD the value must be `amount: 100`
                  type: integer
                  minimum: 1
                  maximum: 99999999
                service_fees:
                  type: array
                  description: Array of service fees
                  items:
                    $ref: '#/components/schemas/service-fee-transaction'
                description:
                  type: string
                  description: A small description to identify the transaction
                metadata:
                  type: object
                  description: Allows for any number of custom metadata keys and values to be stored with a given transaction
              required:
                - destination_wallet_uuid
                - external_id
                - amount
      responses:
        '201':
          $ref: '#/components/responses/wallet-transaction-response-success'
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
        '409':
          $ref: '#/components/responses/wallet-transaction-response-idempotency'
      operationId: account-account_uuid-wallet_uuid-send-post
      tags:
        - Wallets

  /wallets/{wallet_uuid}/transfer:
    post:
      summary: Transfer to Beneficiary
      description: Alviere provides the ability to transfer funds to a local beneficiary. Funds can only be sent from/to accounts that are in ACTIVE status.
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/wallet_uuid'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                beneficiary_uuid:
                  type: string
                  description: The uuid of the beneficiary account to send the funds to
                  format: uuid
                payout_method_uuid:
                  type: string
                  description: The ID of the payout method that the transfer should be paid to. If none is provided, the primary payout method will be used
                amount:
                  description: |
                    The amount is the value associated with the request, in cents. 
                    e.g. If you want to debit 1 USD the value must be `amount: 100`
                  type: integer
                  minimum: 1
                  maximum: 99999999
                service_fees:
                  type: array
                  items:
                    $ref: '#/components/schemas/service-fee-transaction'
                description:
                  type: string
                  description: A small description to identify the transaction
                  example: Birthday gift
                external_id:
                  title: The unique order ID in the external system
                  description: |
                    This value is used for idempotency purposes.

                    NOTE: This field MUST be unique. Any subsequent transactions with the same value will be discarded.
                  type: string
                  minimum: 8
                  maximum: 64
                metadata:
                  type: object
                  description: |
                    Allows for any number of custom metadata keys and values to be stored with a given transaction
              required:
                - beneficiary_uuid
                - amount
                - external_id
      responses:
        '201':
          $ref: '#/components/responses/wallet-transaction-response-success'
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
        '409':
          $ref: '#/components/responses/wallet-transaction-response-idempotency'
      operationId: account-account_uuid-wallet_uuid-transfer-post
      tags:
        - Wallets
  /transactions/{transaction_uuid}/receipt:
    get:
      summary: Get receipt
      description: |-
        Get the specific receipt for a transaction.

        Notes: Receipts are a regulatory requirement to be shown to consumers on every inbound or outbound transaction from a wallet.
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/transaction_uuid'
        - $ref: '#/components/parameters/Version'
      responses:
        '200':
          description: |
            The receipt from a specific transaction
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                description: Get the specific receipt for this user account wallet
                required:
                  - receipt_uuid
                  - receipt_date
                  - receipt_number
                  - transaction
                properties:
                  receipt_uuid:
                    description: Receipt identifier for a given transaction
                    type: string
                    format: uuid
                  receipt_date:
                    title: Receipt date
                    format: date-time
                    example: '2021-09-21T23:00:13.89358407Z'
                  receipt_number:
                    title: Receipt number
                    format: string
                    example: US-000000012
                  transaction:
                    type: object
                    title: Transaction details for receipt
                    description: The transaction
                    required:
                      - transaction_uuid
                      - external_id
                      - type
                      - description
                      - exchange_rate
                      - transaction_date
                      - service_fees
                      - amount
                      - currency
                    properties:
                      transaction_uuid:
                        description: This field is Alviere's internal unique transaction identifier
                        type: string
                        format: uuid
                      external_id:
                        type: string
                        description: The ID of this transaction in your own platform. This ID can be used to identify the transaction as well as protect our API against duplicate transactions.
                        format: uuid
                      type:
                        type: string
                        description: |
                          The payment transaction type details either the direction of funds flow such as debits or credits, or other types such as refunds.
                        enum:
                          - LOAD_FUNDS
                          - WITHDRAW_FUNDS
                          - INTERNATIONAL_TRANFER
                          - BANK_DEBIT
                          - CASH_LOADING
                          - CHECK_DEPOSIT
                          - CARD_ISSUED_ATM_DEBIT
                          - CARD_ISSUED_OTC_DEBIT
                          - WALLET_TRANSFER
                          - REFUND
                      origin:
                        type: object
                        description: Origin of the receipt
                        required:
                          - first_name
                          - last_name
                          - email_address
                          - address
                        properties:
                          first_name:
                            type: string
                            title: First name
                          last_name:
                            type: string
                            title: Last name
                          email_address:
                            type: string
                            title: Email Address
                            format: email
                          address:
                            title: Address
                            type: object
                            required:
                              - line_1
                              - postal_code
                              - city
                              - state
                              - country
                            properties:
                              line_1:
                                title: Address Line One
                                description: Address line 1 (e.g., street, PO Box, or company name - NOTE that newline characters are not accepted)
                                type: string
                                pattern: ^.{2,128}$
                                example: 101 Avenue of the Americas
                              line_2:
                                title: Address Line Two
                                description: Address line 2 (e.g., apartment, suite, unit, or building - NOTE that newline characters are not accepted)
                                type: string
                                pattern: ^.{1,128}$
                                example: Suite 936
                              postal_code:
                                title: Postal Code
                                description: ZIP or postal code
                                type: string
                                pattern: ^.{5,9}$
                                example: '10013'
                              city:
                                title: City
                                description: City, district, suburb, town, or village
                                type: string
                                pattern: ^.{2,128}$
                                example: New York
                              state:
                                title: State
                                description: State, county, province, or region
                                type: string
                                pattern: ^[A-Z]{2}$
                                example: NY
                              country:
                                title: Country
                                description: Three-letter country code (ISO 3166-1 alpha-3).
                                type: string
                                pattern: ^[A-Z]{3}$
                                example: USA
                      destination:
                        type: object
                        description: Destination of the receipt
                        properties:
                          first_name:
                            title: First name
                            type: string
                          last_name:
                            title: Last name
                            type: string
                          address:
                            $ref: '#/components/schemas/beneficiary-address'
                          payout_method:
                            type: object
                            description: If a payout method exists for this transaction, information pertaining to it will be returned in this object
                            properties:
                              payout_method_uuid:
                                title: Payment Method UUID
                                description: The unique identifier for the payout method used in this transaction
                                type: string
                                format: uuid
                              payout_method_type:
                                type: string
                                description: The payout method type used in this transaction, e.g. card, bank
                                example: bank
                              payout_method_last_4:
                                type: string
                                description: The last 4 digits
                                example: '1234'
                          destination_amount:
                            type: integer
                            description: The amount is the value associated with the request, in cents. This field is only available for `INTERNATIONAL_TRANSFER` type transactions
                          destination_currency:
                            type: string
                            description: The currency code in ISO-4217 format. This field is only available for `INTERNATIONAL_TRANSFER` type transactions
                      description:
                        type: string
                        description: A short description about the transaction.
                      exchange_rate:
                        type: string
                        description: The exchange rate set for the transaction
                        example: '1.14'
                      transaction_date:
                        type: string
                        description: The transaction date
                        format: date
                      payment_method:
                        type: object
                        description: If a payment method exists for this transaction, information pertaining to it will be returned in this object.
                        required:
                          - payment_method_uuid
                          - payment_method_type
                          - payment_method_last_4
                        properties:
                          payment_method_uuid:
                            title: Payment Method UUID
                            description: The unique identifier for the payment method used in this transaction, e.g. card, bank...
                            type: string
                            format: uuid
                          payment_method_type:
                            type: string
                            description: The payment type used in this transaction, e.g. card, bank...
                            example: bank
                          payment_method_last_4:
                            type: string
                            description: The lasy 4 digits
                            example: '1234'
                      service_fees:
                        type: array
                        title: Service Fees
                        description: Service fees associated with the transaction.
                        items:
                          type: object
                          description: The structure containing service fees to be applied to a transaction.
                          required:
                            - utx_uuid
                            - amount
                            - currency
                            - description
                          properties:
                            utx_uuid:
                              type: string
                              description: The `uuid` of the resulting `SERVICE_FEE` transaction.
                              format: uuid
                            amount:
                              description: |
                                The amount is the value associated with the request, in cents. 
                                e.g. If you want to debit 1 USD the value must be `amount: 100`
                              type: integer
                              minimum: 1
                              maximum: 99999999
                            currency:
                              description: The currency code in ISO-4217 format.
                              type: string
                              example: USD
                            description:
                              type: string
                              description: |
                                The description can be any descriptive text provided by the user to accompany the service fee transaction.
                              minimum: 1
                              maximum: 255
                      amount:
                        description: |
                          The amount is the value associated with the request, in cents.
                        type: integer
                        minimum: 1
                        maximum: 99999999
                      currency:
                        description: The currency code in ISO-4217 format.
                        type: string
                        example: USD
                      type_details:
                        type: object
                        properties:
                          issued_card_details:
                            type: object
                            properties:
                              terminal_id:
                                type: string
                                description: The ID for the device that acquired the card information
                                example: '00010102'
                          global_payments_details:
                            type: object
                            properties:
                              estimated_time_of_delivery:
                                type: string
                                description: The time the transaction is estimated to be available for pickup
                                format: date-time
                              transaction_reference:
                                type: string
                                description: A reference for the Beneficiary to provide to the cash pickup location on pickup
                          cash_loading:
                            type: object
                            properties:
                              cash_loading_location:
                                type: object
                                required:
                                  - store_network_id
                                  - terminal_id
                                properties:
                                  store_network_id:
                                    type: string
                                    description: Unique identifier of the store
                                  terminal_id:
                                    type: string
                                    description: Unique identifier of the terminal
                                  barcode_data:
                                    type: string
                                    description: Barcode data for the cash loading location
                                    example: '1234567890'
                      metadata:
                        type: object
                        description: Allows for any number of custom metadata keys and values to be stored with a given transaction
                  disclosures:
                    type: object
                    description: Disclosure language that is required to be shown the receipt. Only applicable to transactions of type INTERNATIONAL_TRANSFER
                    required:
                      - template_text
                    properties:
                      template_text:
                        type: object
                        description: Templated text to be displayed on receipt
                        properties:
                          en:
                            type: string
                            description: Templated text in English
                          es:
                            type: string
                            description: Templated text in Spanish (if applicable to Program)
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
      operationId: account-account_uuid-transactions-transaction_uuid-receipt-get
      tags:
        - Transactions

  /wallets/{wallet_uuid}/promo:
    post:
      summary: Credit promotional funds
      description: |-
        Alviere provides the ability to credit a wallet with promotional funds.
        Funds can only be sent to accounts that are in `ACTIVE` status

        The funds will be sent from your program's treasury vault Promotional Funds `PROMO_FUNDS`
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/wallet_uuid'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  description: |
                    The amount is the value associated with the request, in cents. 
                    e.g. If you want to debit 1 USD the value must be `amount: 100`
                  type: integer
                  minimum: 1
                  maximum: 99999999
                external_id:
                  title: The unique order ID in your internal system system
                  description: |
                    This value is also used for idempotency purposes.

                    NOTE: This field MUST be unique. Any subsequent transactions with the same value will be discarded.
                  type: string
                  minimum: 8
                  maximum: 64
                description:
                  type: string
                  description: A small description to identify the transaction
                metadata:
                  type: object
                  description: |
                    Allows for any number of custom metadata keys and values to be stored with a given transaction
              required:
                - external_id
      responses:
        '201':
          $ref: '#/components/responses/wallet-transaction-response-success'
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
        '409':
          $ref: '#/components/responses/wallet-transaction-response-idempotency'
      operationId: ledger-promo
      tags:
        - Wallets

  /wallets/{wallet_uuid}/credit:
    post:
      summary: Credit funds
      description: |
        Credits a specified transaction amount to the provided wallet
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/wallet_uuid'
        - $ref: '#/components/parameters/Version'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - amount
                - currency
                - external_id
              properties:
                amount:
                  description: |
                    The amount is the value associated with the request, in cents. 
                    e.g. If you want to debit 1 USD the value must be `amount: 100`
                  type: integer
                  minimum: 1
                vault_name:
                  type: string
                  enum:
                    - OPERATIONS
                    - PROMO_FUNDS
                    - PROVIDERS
                  default: OPERATIONS
                  description: |
                    The vault from to move the funds from. If not provided the Operations vault will be used
                currency:
                  description: The currency code in ISO-4217 format.
                  type: string
                  example: USD
                description:
                  type: string
                external_id:
                  title: The unique order ID in your internal system
                  description: |
                    This value is also used for idempotency purposes.

                    NOTE: This field MUST be unique. Any subsequent transactions with the same value will be discarded.
                  type: string
                metadata:
                  type: object
                  description: |
                    Allows for any number of custom metadata keys and values to be stored with a given transaction
        description: ''
      responses:
        '201':
          $ref: '#/components/responses/wallet-transaction-response-success'
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
        '409':
          $ref: '#/components/responses/wallet-transaction-response-idempotency'
      operationId: ledger-transfer-credit
      tags:
        - Wallets

  /wallets/{wallet_uuid}/debit:
    post:
      summary: Debit funds
      description: Debits a specified transaction amount to the provided wallet
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/wallet_uuid'
        - $ref: '#/components/parameters/Version'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - amount
                - currency
                - external_id
              properties:
                amount:
                  description: |
                    The amount is the value associated with the request, in cents. 
                    e.g. If you want to debit 1 USD the value must be `amount: 100`
                  type: integer
                  minimum: 1
                vault_name:
                  type: string
                  enum:
                    - OPERATIONS
                    - PROMO_FUNDS
                    - PROVIDERS
                  default: OPERATIONS
                  description: |
                    The vault from to move the funds to. If not provided the Operations vault will be used
                currency:
                  description: The currency code in ISO-4217 format.
                  type: string
                  example: USD
                transaction_purpose:
                  description: The purpose to be given to the debited funds
                  enum:
                    - LOAN_PAYMENT
                    - BILL_PAYMENT
                    - SERVICE_PREPAYMENT
                    - OTHER
                description:
                  type: string
                  description: A small description to identify the transaction. Mandatory if `transaction_purpose` is `OTHER`
                external_id:
                  title: The unique order ID in your internal system
                  description: |
                    This value is also used for idempotency purposes.

                    NOTE: This field MUST be unique. Any subsequent transactions with the same value will be discarded.
                  type: string
                metadata:
                  type: object
                  description: Allows for any number of custom metadata keys and values to be stored with a given transaction
      responses:
        '201':
          $ref: '#/components/responses/wallet-transaction-response-success'
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
        '409':
          $ref: '#/components/responses/wallet-transaction-response-idempotency'
      operationId: ledger-transfer-debit-post
      tags:
        - Wallets

  /beneficiaries/{beneficiary_uuid}/payout-methods:
    post:
      summary: Create payout method
      description: |
        Adds a Payout Method to a Beneficiary
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/beneficiary_uuid'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/payout-method-request'
        description: ''
      responses:
        '201':
          description: The request was successful
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  payout_method:
                    $ref: '#/components/schemas/payout-method-response'
                required:
                  - payout_method
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '409':
          description: Conflict on the field `external_id`
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                required:
                  - result
                  - card
                properties:
                  result:
                    title: Result of the operation
                    type: string
                    enum:
                      - ACCEPTED
                      - DENIED
                  card:
                    type: object
                    title: The card object
                    required:
                      - token
                      - external_id
                      - brand
                      - type
                      - country
                      - last_4
                      - status
                      - flags
                    properties:
                      token:
                        type: string
                        description: The unique token for this card. This is how you will identify this card in the future throughout the API
                        format: uuid
                      external_id:
                        type: string
                        description: The unique identifier of the card in your own system.
                      brand:
                        type: string
                        description: The card network to which this card belongs
                        enum:
                          - VISA
                          - MASTERCARD
                          - AMEX
                          - DINERS
                          - DISCOVER
                          - JCB
                          - UNIONPAY
                          - UNKNOWN
                      type:
                        type: string
                        description: The type of card
                        enum:
                          - CREDIT
                          - DEBIT
                          - PREPAID
                          - UNKNOWN
                      country:
                        type: string
                        description: The 3-letter code of the country of issuance of the card
                        example: USA
                      last_4:
                        type: string
                        description: The last 4 digits of the card
                        pattern: ^[0-9]{4}$
                        example: '0000'
                      status:
                        type: string
                        description: The status of the card
                        enum:
                          - CREATED
                          - ACTIVE
                          - FAILED
                          - EXPIRED
                          - REJECTED
                          - DELETED
                      flags:
                        type: object
                        description: Types of transactions supported by this card
                        required:
                          - debit
                          - push_to_card
                        properties:
                          debit:
                            type: boolean
                            default: true
                            description: If the card supports debit authorization
                          push_to_card:
                            type: boolean
                            default: false
                            description: If the card supports the push-to-card transaction type
                  validation:
                    type: object
                    title: Card Validation Object
                    description: |
                      The card validation schema contains optional fields which will be present when appropriate.

                      - For card token creation, the fields `cvv_result` and `avs_result` will always be present.
                      The other fields are only returned if there is an error with the request.
                      - For payment transactions, `card-validation` will only be present in the event of an error
                      along with the fields `error_code` and `error_description`.
                    properties:
                      error_code:
                        type: string
                        example: ''
                      error_description:
                        type: string
                        example: ''
                      cvv_result:
                        type: string
                        enum:
                          - M
                          - 'N'
                          - P
                          - S
                          - U
                          - X
                          - (empty)
                        description: For further details see [CVV Response Codes](#tag/Tokenization)
                      avs_result:
                        type: string
                        enum:
                          - A
                          - B
                          - D
                          - E
                          - F
                          - G
                          - H
                          - I
                          - J
                          - L
                          - M
                          - O
                        description: For further details see [AVS Match Response Codes](#tag/Tokens)
      operationId: BEN-06
      tags:
        - Beneficiaries
    get:
      summary: List payout methods
      description: List Payout Methods that belong to a Beneficiary
      parameters:
        - in: header
          name: Authorization
          required: true
          description: The access token.
          example: Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUI...
          schema:
            type: string
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/beneficiary_uuid'
      responses:
        '200':
          description: OK
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  records:
                    type: integer
                    title: Number of records
                    description: The number of records returned
                  payout_methods:
                    title: List of card entities
                    type: array
                    description: An array of payout method records
                    items:
                      $ref: '#/components/schemas/payout-method-response'
                required:
                  - records
                  - payout_methods
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
      operationId: BEN-08
      tags:
        - Beneficiaries
    parameters:
      - $ref: '#/components/parameters/beneficiary_uuid'
  /payout-methods/{payout_method_uuid}:
    get:
      summary: Get payout method
      description: Get Payout Method details
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/payout_method_uuid'
      responses:
        '200':
          description: OK
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              schema:
                type: string
                example: 8944355f-342d-42df-9ec9-5b12e619d504
          content:
            application/json:
              schema:
                type: object
                properties:
                  payout_method:
                    $ref: '#/components/schemas/payout-method-response'
                required:
                  - payout_method
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
      operationId: BEN-07
      tags:
        - Beneficiaries
    parameters:
      - $ref: '#/components/parameters/payout_method_uuid'
    delete:
      summary: Delete payout method
      operationId: BEN-09
      responses:
        '200':
          description: Payout Method deleted successfully
          headers:
            Alv-Request-Id:
              schema:
                type: string
                example: 8944355f-342d-42df-9ec9-5b12e619d504
              description: Alviere's internal unique identifier for the request. This ID is automatically generated by our API service andspans across our entire infrastructure allowing tech ops to trace a request. This id has no business use caseand serves solely for the purpose of technical debugging and troubleshooting.
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
        '409':
          description: Entity has already been deleted
      description: Deletes a payout method
      parameters:
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/payout_method_uuid'
      tags:
        - Beneficiaries
    patch:
      summary: Update payout method
      operationId: BEN-10
      responses:
        '200':
          description: Payout method updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  payout_method:
                    $ref: '#/components/schemas/payout-method-response'
          headers:
            Alv-Request-Id:
              schema:
                type: string
                example: 8944355f-342d-42df-9ec9-5b12e619d504
              description: Alviere's internal unique identifier for the request. This ID is automatically generated by our API service andspans across our entire infrastructure allowing tech ops to trace a request. This id has no business use caseand serves solely for the purpose of technical debugging and troubleshooting.
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
      description: Updates the payout method
      parameters:
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/payout_method_uuid'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                external_id:
                  type: string
                  description: The ID of the Payout Method in your own system
                primary:
                  type: boolean
                  description: Whether this is the primary Payout Method of the Beneficiary
                label:
                  type: string
                  description: A free-text label to identify the Payout Method
      tags:
        - Beneficiaries
  /accounts/{account_uuid}/payment-methods/cards:
    post:
      summary: Create card
      description: |
        Adds a payment method of type card to an account.

        Billing address rules:
        - If the account does not have a primary address on file, the request must include `billing_address` with all fields present (`line_1`, `city`, `state`, `country`, `postal_code`).

        Requests that do not meet these rules return 400 Bad Request with details about the missing fields.
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/account_uuid'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/card-pm-request'
      responses:
        '201':
          description: |
            The request was successful and the Card Token was created.

            We will always create the card entity in our system. Please check the payload to determine the result status as the card might have failed our internal checks and returned a code 201 with the FAILED status.
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  card:
                    $ref: '#/components/schemas/card-pm-response'
                  validation:
                    type: object
                    title: Card Validation Object
                    description: |
                      The card validation schema contains optional fields which will be present when appropriate.

                      - For card token creation, the fields `cvv_result` and `avs_result` will always be present.
                      The other fields are only returned if there is an error with the request.
                      - For payment transactions, `card-validation` will only be present in the event of an error
                      along with the fields `error_code` and `error_description`.
                    properties:
                      error_code:
                        type: string
                        example: ''
                      error_description:
                        type: string
                        example: ''
                      cvv_result:
                        type: string
                        enum:
                          - M
                          - 'N'
                          - P
                          - S
                          - U
                          - X
                          - (empty)
                        description: For further details see [CVV Response Codes](#tag/Tokenization)
                      avs_result:
                        type: string
                        enum:
                          - A
                          - B
                          - D
                          - E
                          - F
                          - G
                          - H
                          - I
                          - J
                          - L
                          - M
                          - O
                        description: For further details see [AVS Match Response Codes](#tag/Tokens)
                required:
                  - card
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '409':
          description: Conflict on the field `external_id`
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                required:
                  - result
                  - card
                properties:
                  result:
                    title: Result of the operation
                    type: string
                    enum:
                      - ACCEPTED
                      - DENIED
                  card:
                    type: object
                    title: The card object
                    required:
                      - token
                      - external_id
                      - brand
                      - type
                      - country
                      - last_4
                      - status
                      - flags
                    properties:
                      token:
                        type: string
                        description: The unique token for this card. This is how you will identify this card in the future throughout the API
                        format: uuid
                      external_id:
                        type: string
                        description: The unique identifier of the card in your own system.
                      brand:
                        type: string
                        description: The card network to which this card belongs
                        enum:
                          - VISA
                          - MASTERCARD
                          - AMEX
                          - DINERS
                          - DISCOVER
                          - JCB
                          - UNIONPAY
                          - UNKNOWN
                      type:
                        type: string
                        description: The type of card
                        enum:
                          - CREDIT
                          - DEBIT
                          - PREPAID
                          - UNKNOWN
                      country:
                        type: string
                        description: The 3-letter code of the country of issuance of the card
                        example: USA
                      last_4:
                        type: string
                        description: The last 4 digits of the card
                        pattern: ^[0-9]{4}$
                        example: '0000'
                      status:
                        type: string
                        description: The status of the card
                        enum:
                          - CREATED
                          - ACTIVE
                          - FAILED
                          - EXPIRED
                          - REJECTED
                          - DELETED
                      flags:
                        type: object
                        description: Types of transactions supported by this card
                        required:
                          - debit
                          - push_to_card
                        properties:
                          debit:
                            type: boolean
                            default: true
                            description: If the card supports debit authorization
                          push_to_card:
                            type: boolean
                            default: false
                            description: If the card supports the push-to-card transaction type
                  validation:
                    type: object
                    title: Card Validation Object
                    description: |
                      The card validation schema contains optional fields which will be present when appropriate.

                      - For card token creation, the fields `cvv_result` and `avs_result` will always be present.
                      The other fields are only returned if there is an error with the request.
                      - For payment transactions, `card-validation` will only be present in the event of an error
                      along with the fields `error_code` and `error_description`.
                    properties:
                      error_code:
                        type: string
                        example: ''
                      error_description:
                        type: string
                        example: ''
                      cvv_result:
                        type: string
                        enum:
                          - M
                          - 'N'
                          - P
                          - S
                          - U
                          - X
                          - (empty)
                        description: For further details see [CVV Response Codes](#tag/Tokenization)
                      avs_result:
                        type: string
                        enum:
                          - A
                          - B
                          - D
                          - E
                          - F
                          - G
                          - H
                          - I
                          - J
                          - L
                          - M
                          - O
                        description: For further details see [AVS Match Response Codes](#tag/Tokens)
      operationId: paymentmethods-card-post
      tags:
        - Payment methods
    get:
      summary: List cards
      description: Show cards that have been added as payment methods for this account.
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/account_uuid'
      responses:
        '200':
          description: OK
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  records:
                    type: integer
                    title: Number of records
                    description: The number of card records returned
                  cards:
                    title: List of card entities
                    type: array
                    description: An array of card records
                    items:
                      $ref: '#/components/schemas/card-pm-response'
                required:
                  - records
                  - cards
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
      operationId: paymentmethods-card-get
      tags:
        - Payment methods

  /accounts/{account_uuid}/payment-methods/bank-accounts:
    post:
      tags:
        - Payment methods
      summary: Create bank account
      description: Adds a payment method of type bank account to an account.
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/account_uuid'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bank-account-pm-request'
      responses:
        '201':
          description: |
            Bank account was successfully added to the system
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  bank_account:
                    $ref: '#/components/schemas/bank-account-pm-response'
                required:
                  - bank_account
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '404':
          $ref: '#/components/responses/404-Error'
        '409':
          description: Conflict on the field `external_id`
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                required:
                  - bank_account
                properties:
                  bank_account:
                    type: object
                    description: The bank account details.
                    required:
                      - token
                      - external_id
                      - type
                      - last_4
                      - country
                      - currency
                      - is_plaid
                      - flags
                      - status
                      - bank_account_details
                      - created_at
                      - updated_at
                    properties:
                      token:
                        type: string
                        description: The unique ID of the bank account in the Alviere system
                        format: uuid
                      external_id:
                        type: string
                        description: The unique identifier of the bank account in your own system.
                      status:
                        type: string
                        description: The status of the bank account in the Alviere system
                        enum:
                          - CREATED
                          - ACTIVE
                          - PROCESSING
                          - FAILED
                          - DELETED
                          - REJECTED
                      type:
                        type: string
                        enum:
                          - CHECKING
                          - SAVINGS
                          - DDA_CHECKING
                          - UNKNOWN
                      last_4:
                        type: string
                      country:
                        title: Country
                        description: Three-letter country code (ISO 3166-1 alpha-3).
                        type: string
                        pattern: ^[A-Z]{3}$
                        example: USA
                      currency:
                        description: The bank's currency code in ISO-4217 format.
                        type: string
                      is_plaid:
                        type: boolean
                        description: Specifies if the bank account is configured with Plaid.
                      flags:
                        type: object
                        description: Types of transactions supported by this bank account
                        properties:
                          debit:
                            type: boolean
                            description: Specifies if the bank account can be debited
                          credit:
                            type: boolean
                            description: Specifies if the bank account can be credited
                      bank_account_details:
                        type: object
                        description: |
                          The bank account details need to be one of the structures, either `ach` or `eft` or `iban` or `swift` or `clabe`.

                          Note: Use only one of below. Which structure to use ties with the `type` of bank account above.
                        properties:
                          ach:
                            type: object
                            title: ach
                            description: Structure for the bank account details for the U.S.
                            required:
                              - account_number_last_4
                              - routing_number
                            properties:
                              routing_number:
                                type: string
                                description: The ACH Routing Number for this bank account
                                example: '213423001'
                              account_number_last_4:
                                type: string
                                description: The account number last four digits for this bank account.
                                example: '9012'
                          eft:
                            type: object
                            title: eft
                            description: Structure for the bank account details for Canada.
                            required:
                              - account_number_last_4
                              - transit_number
                              - institution_code
                            properties:
                              account_number_last_4:
                                type: string
                                description: The account number last four digits for this bank account.
                                example: '9012'
                              transit_number:
                                type: string
                                description: The transit number
                                example: '4112349012'
                              institution_code:
                                type: string
                                description: The unique institution code
                                example: '2134340017'
                          swift:
                            type: object
                            title: Account of type BIC/SWIFT
                            description: Structure for the bank account details for International BIC/SWIFT.
                            required:
                              - account_number_last_4
                              - bic_code
                            properties:
                              bic_code:
                                type: string
                                description: The account SWIFT/BIC code for this bank account.
                                example: R233R2343XXX
                              account_number_last_4:
                                type: string
                                description: The account number last four digits this bank account.
                                example: '9012'
                          clabe:
                            type: object
                            title: Account of type CLABE
                            description: Structure for the bank account details for International transaction into Mexico CLABE account.
                            required:
                              - bic_code
                              - clabe_number_last_4
                            properties:
                              bic_code:
                                type: string
                                description: The account SWIFT/BIC code for this bank account.
                                example: R233R2343XXX
                              clabe_number_last_4:
                                type: string
                                description: The last four digits of this CLABE bank account.
                                example: '9012'
                          iban:
                            type: object
                            title: Account of type IBAN
                            description: Structure for the bank account details for International IBAN.
                            required:
                              - iban_number_last_4
                            properties:
                              iban_number_last_4:
                                type: string
                                description: The account IBAN code last four digits.
                                example: '5555'
                      fail_reason:
                        type: string
                        description: Status fail reason
                      created_at:
                        type: string
                        description: The banks creation date
                        example: '2021-06-17T11:02:08.143Z'
                      updated_at:
                        type: string
                        description: The banks modification date
                        example: '2021-08-02T05:32:11.345Z'
      operationId: paymentmethods-bankaccount-post
    get:
      summary: List bank accounts
      description: Show bank accounts that have been added as payment methods for this account.
      parameters:
        - in: header
          name: Authorization
          required: true
          description: The access token.
          example: Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUI...
          schema:
            type: string
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/account_uuid'
      responses:
        '200':
          description: |
            Bank accounts successfully retrieved
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  bank_accounts:
                    type: array
                    description: An array of bank account records
                    items:
                      $ref: '#/components/schemas/bank-account-pm-response'
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
      operationId: paymentmethods-bankaccounts-get
      tags:
        - Payment methods
  /accounts/{account_uuid}/payment-methods/cards/{payment_method_uuid}:
    get:
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/account_uuid'
        - $ref: '#/components/parameters/payment_method_uuid'
      summary: Get card
      description: Retrieves card payment method details.
      responses:
        '200':
          description: OK
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  card:
                    $ref: '#/components/schemas/card-pm-response'
                required:
                  - card
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
      operationId: paymentmethods-card-token-get
      tags:
        - Payment methods
    delete:
      tags:
        - Payment methods
      summary: Delete card
      description: |
        Deletes a card payment method from the system.

        ### Notes

        Cards in `FAILED` status can't be deleted.
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/account_uuid'
        - $ref: '#/components/parameters/payment_method_uuid'
      responses:
        '204':
          description: Card deleted successfully
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
        '409':
          description: Conflict on the field `external_id`. Entity has already been deleted.
      operationId: paymentmethods-card-token-delete

  /accounts/{account_uuid}/payment-methods/bank-accounts/{payment_method_uuid}:
    get:
      summary: Get bank account
      description: Retrieves bank account payment method details.
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/account_uuid'
        - $ref: '#/components/parameters/payment_method_uuid'
      responses:
        '200':
          description: |
            Bank account was succesfully retrieved
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  bank_account:
                    $ref: '#/components/schemas/bank-account-pm-response'
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
      operationId: paymentmethods-bankaccount-token-get
      tags:
        - Payment methods
    delete:
      summary: Delete a bank account
      description: |
        Deletes a bank account from the system.

        ### Notes

        Banks in `CREATED`, `FAILED` or `REJECTED` statuses can't be deleted.
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/account_uuid'
        - $ref: '#/components/parameters/payment_method_uuid'
        - $ref: '#/components/parameters/Version'
      responses:
        '204':
          description: |
            The Bank Account was successfully deleted.
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
        '409':
          description: Conflict on the field `external_id`. Entity has already been deleted.
      operationId: paymentmethods-bank-token-delete
      tags:
        - Payment methods
  /accounts/{account_uuid}/payment-methods/plaid-bank-accounts:
    post:
      tags:
        - Payment methods
      summary: Create Plaid bank account
      description: Adds a payment method of type bank account via Plaid to an account.
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/account_uuid'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: The plaid bank account details
              properties:
                external_id:
                  title: Plaid bank identification
                  description: |
                    This is a value that identifies the bank in your own system. This field MUST be unique per account and it is
                    used to validate against duplicate records (e.g. if you send two cards with same `external_id` the system
                    will return an HTTP status code 409 - conflict)
                  type: string
                  maximum: 128
                  minimum: 1
                country:
                  title: Country
                  description: Three-letter country code (ISO 3166-1 alpha-3).
                  type: string
                  pattern: ^[A-Z]{3}$
                  example: USA
                currency:
                  description: The bank's currency code in ISO-4217 format.
                  type: string
                plaid_public_token:
                  title: Plaid public token
                  description: Plaid public token
                  type: string
                plaid_account_id:
                  title: Plaid account id
                  description: Plaid account id
                  type: string
                metadata:
                  type: object
                  description: Allows for any number of custom metadata keys and values to be stored with a given entity
              required:
                - external_id
                - country
                - currency
                - plaid_public_token
                - plaid_account_id
      responses:
        '201':
          description: |
            Plaid bank account was successfully added to the system
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  bank_account:
                    $ref: '#/components/schemas/bank-account-pm-response'
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '404':
          $ref: '#/components/responses/404-Error'
        '409':
          description: Conflict on the field `external_id`
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  bank_account:
                    $ref: '#/components/schemas/bank-account-pm-response'
      operationId: paymentmethods-plaid-bankaccount-post
  /accounts/{account_uuid}/payment-methods/plaid-bank-accounts/{payment_method_uuid}/activate:
    put:
      summary: Activate Plaid bank account
      operationId: PM-11
      responses:
        '204':
          description: The bank account was successfully activated
        '400':
          description: Bad Request
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
      description: Activates a Plaid bank account payment method in the Alviere system after an update in authentication credentials
      parameters:
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/account_uuid'
        - $ref: '#/components/parameters/payment_method_uuid'
      tags:
        - Payment methods
  /wallets/{wallet_uuid}/service-fees:
    post:
      summary: Create service fee
      description: Create a service fee
      parameters:
        - in: header
          name: Authorization
          required: true
          description: The access token.
          example: Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSlTBD...
          schema:
            type: string
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/wallet_uuid'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                service_fee:
                  $ref: '#/components/schemas/service-fee-transaction'
              required:
                - service_fee
            examples: {}
      responses:
        '201':
          description: The service fee transaction has been created
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  service_fee_transaction_uuid:
                    type: string
                    description: UUID of created transaction
                required:
                  - service_fee_transaction_uuid
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
        '409':
          description: Conflict on `external_id`
          content:
            application/json:
              schema:
                type: object
                properties:
                  parent_transaction_uuid:
                    type: string
                    example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    format: uuid
                  service_fee_transaction_uuid:
                    type: string
                    example: 798ee7f3-bb75-4a4c-9a2a-06cb697ddb5e
                    format: uuid
                required:
                  - service_fee_transaction_uuid
      operationId: FEE-01
      tags:
        - Service fees

  /wallets/{wallet_uuid}/service-fees/{transaction_uuid}/reverse:
    post:
      summary: Create service fee reversal
      description: Trigger the reversal of a service fee
      parameters:
        - in: header
          name: Authorization
          required: true
          description: The access token.
          example: Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUI...
          schema:
            type: string
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/wallet_uuid'
        - $ref: '#/components/parameters/transaction_uuid'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                  description: A short description of the reason the service fee was reversed
      responses:
        '201':
          description: The reversal transaction has been created.
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  service_fee_transaction_uuid:
                    title: transaction uuid
                    description: The original transaction uuid that was sent to this API endpoint
                    example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    format: uuid
                    type: string
                  reversal_transaction_uuid:
                    title: Child transaction
                    description: The field will contain the new transaction that was generated as part of this operation.
                    type: string
                    format: uuid
                    example: 798ee7f3-bb75-4a4c-9a2a-06cb697ddb5e
                required:
                  - service_fee_transaction_uuid
                  - reversal_transaction_uuid
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
        '409':
          description: Conflict on provided transaction UUID. Original transaction has already been reversed
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  service_fee_transaction_uuid:
                    title: transaction uuid
                    description: The original transaction uuid that was sent to this API endpoint
                    example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    format: uuid
                    type: string
                  reversal_transaction_uuid:
                    title: Child transaction
                    description: The field will contain the new transaction that was generated as part of this operation.
                    type: string
                    format: uuid
                    example: 798ee7f3-bb75-4a4c-9a2a-06cb697ddb5e
                required:
                  - service_fee_transaction_uuid
                  - reversal_transaction_uuid
      operationId: accounts-account_uuid-servicefee-reverse1
      tags:
        - Service fees
  /payments/payment-instruments:
    post:
      summary: Create Payment Instrument
      description: |
        Creates a payment instrument
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/payment-instrument-request'
      responses:
        '201':
          description: |
            Payment Instrument created
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  payment_instrument:
                    $ref: '#/components/schemas/payment-instrument-response'
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '409':
          description: Conflict on the field `external_id`
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    title: Result of the operation
                    type: string
                    enum:
                      - ACCEPTED
                      - DENIED
                  card:
                    $ref: '#/components/schemas/card-token-response'
                  validation:
                    type: object
                    title: Card Validation Object
                    description: |
                      The card validation schema contains optional fields which will be present when appropriate.

                      - For card token creation, the fields `cvv_result` and `avs_result` will always be present.
                      The other fields are only returned if there is an error with the request.
                      - For payment transactions, `card-validation` will only be present in the event of an error
                      along with the fields `error_code` and `error_description`.
                    properties:
                      error_code:
                        type: string
                        example: ''
                      error_description:
                        type: string
                        example: ''
                      cvv_result:
                        type: string
                        enum:
                          - M
                          - 'N'
                          - P
                          - S
                          - U
                          - X
                          - (empty)
                        description: For further details see [CVV Response Codes](#tag/Tokenization)
                      avs_result:
                        type: string
                        enum:
                          - A
                          - B
                          - D
                          - E
                          - F
                          - G
                          - H
                          - I
                          - J
                          - L
                          - M
                          - O
                        description: For further details see [AVS Match Response Codes](#tag/Tokens)
                required:
                  - result
                  - card
      operationId: PPAY-01
      tags:
        - Payment processing
    parameters: []
  /payments/payment-instruments/{payment_instrument_uuid}:
    get:
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/payment_instrument_uuid'
      summary: Get Payment Instrument
      description: Returns Payment Instrument details
      responses:
        '200':
          description: OK
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  payment_instrument:
                    $ref: '#/components/schemas/payment-instrument-response'
                required:
                  - payment_instrument
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
      operationId: PPAY-03
      tags:
        - Payment processing
    delete:
      summary: Delete Payment Instrument
      description: |
        Deletes a Payment Instrument from the system
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/payment_instrument_uuid'
      responses:
        '204':
          description: Payment Instrument deleted successfully
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
        '409':
          description: Conflict on the field `external_id`. Entity has already been deleted.
      operationId: PPAY-04
      tags:
        - Payment processing
    parameters:
      - $ref: '#/components/parameters/payment_instrument_uuid'
  /payments/debit:
    post:
      summary: Debit funds
      description: Debit funds from a Payment Instrument
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                wallet_uuid:
                  type: string
                  description: The UUID of the wallet where the funds should settle
                external_id:
                  title: Merchant payment order ID
                  description: |
                    This field is the Merchant's payment order ID that will be associated with this transaction and can
                    be used to cross reference transactions as well as protect API against duplicate orders.

                    NOTE: This field MUST be unique. Any subsequent transactions with same `external_id` will fail.
                  type: string
                  minimum: 8
                  maximum: 64
                amount:
                  description: |
                    The amount is the value associated with the request, in cents. 
                    e.g. If you want to debit 1 USD the value must be `amount: 100`
                  type: integer
                  minimum: 1
                  maximum: 99999999
                currency:
                  description: The currency code in ISO-4217 format.
                  type: string
                  example: USD
                auth_type:
                  description: |
                    Currently, Alviere supports AUTHCAP authorization type only.

                    `AUTHCAP`: This type of operation will attempt to authorize and capture the provided amount in a single request 
                    and, if successful, the funds are captured from the cardholder’s account, and the payment is considered successful.
                  type: string
                  enum:
                    - AUTHCAP
                payment_instrument_uuid:
                  type: string
                  description: Unique identifier of the Payment Instrument
                payment_instrument:
                  $ref: '#/components/schemas/payment-instrument-request-adhoc'
                description:
                  type: string
                  description: A short description of the payment transaction
                merchant_details:
                  $ref: '#/components/schemas/merchant-details'
                3ds_options:
                  type: object
                  properties:
                    3ds_preference:
                      type: string
                      enum:
                        - DISABLED
                        - ENABLED
                        - DOWNGRADE_ALLOWED
                metadata:
                  type: object
                  description: Allows for any number of custom metadata keys and values to be stored with a given transaction
              required:
                - wallet_uuid
                - external_id
                - amount
                - currency
                - auth_type
      responses:
        '201':
          description: |
            The transaction was created successfully.
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  transaction:
                    $ref: '#/components/schemas/wallet-transaction'
                required:
                  - transaction
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
        '409':
          description: Conflict on `external_id`
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  transaction:
                    $ref: '#/components/schemas/wallet-transaction'
      operationId: PPAY-05
      tags:
        - Payment processing
    parameters: []
  /payments/refund:
    post:
      summary: Refund payment transaction
      description: Refunds a payment transaction
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                transaction_uuid:
                  type: string
                  description: The UUID of the transaction that should be refunded
                external_id:
                  title: Merchant payment order ID
                  description: |
                    This field is the Merchant's payment order ID that will be associated with this transaction and can
                    be used to cross reference transactions as well as protect API against duplicate orders.

                    NOTE: This field MUST be unique. Any subsequent transactions with same `external_id` will fail.
                  type: string
                  minimum: 8
                  maximum: 64
                amount:
                  description: |
                    The amount is the value associated with the request, in cents. 
                    e.g. If you want to debit 1 USD the value must be `amount: 100`
                  type: integer
                  minimum: 1
                  maximum: 99999999
                refund_reason:
                  enum:
                    - DUPLICATE
                    - FRAUD
                    - CUSTOMER_REQUEST
                    - OTHER
                  description: The reason why the transaction was refunded
                description:
                  type: string
                  description: A small description to identify the transaction
                metadata:
                  type: object
                  description: Allows for any number of custom metadata keys and values to be stored with a given transaction
              required:
                - transaction_uuid
                - external_id
                - amount
                - refund_reason
      responses:
        '201':
          description: |
            The transaction was created successfully.
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  transaction:
                    $ref: '#/components/schemas/wallet-transaction'
                required:
                  - transaction
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
        '409':
          description: Conflict on `external_id`
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  transaction:
                    $ref: '#/components/schemas/wallet-transaction'
                required:
                  - transaction
      operationId: PPAY-02
      tags:
        - Payment processing
    parameters: []
  /accounts/{account_uuid}/issued-cards/non-reloadable:
    post:
      summary: Create non-reloadable prepaid Card
      description: |
        Creates a new non-reloadable prepaid card for the selected account
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/account_uuid'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - external_id
                - product_id
                - initial_balance
                - funds_source
              properties:
                external_id:
                  title: Your unique identification of the card in your system
                  description: |
                    This is your unique ID for this card. This field is used to guarantee idempotency.
                  type: string
                product_id:
                  title: The product id corresponding to the card being created
                  example: '885'
                  description: |
                    This product ID is assigned to you by the Alviere team when you setup your card issuance service.
                  type: string
                initial_balance:
                  title: The initial balance this card will have
                  example: 30000
                  description: |
                    This is the initial balance that the card being issued will have, in cents (100 = 1$)
                  type: integer
                  minimum: 1
                funds_source:
                  description: The source of funds for the initial balance of the card
                  oneOf:
                    - title: Payment method
                      required:
                        - payment_method_uuid
                      properties:
                        payment_method_uuid:
                          type: string
                          description: The initial balance will be funded with this Payment method. Payment method should be owned by the account or parent account of a sub-account owning this Payment method.
                    - title: Wallet
                      required:
                        - wallet_uuid
                      properties:
                        wallet_uuid:
                          type: string
                          description: The initial balance will be funded with funds from this Wallet. Wallet should be owned by the account or parent account of a sub-account owning this Wallet.
                  type: object
                shipping_address:
                  $ref: '#/components/schemas/shipping-address'
                auth_rules:
                  type: object
                  title: The rules this card should use when authorizing a transaction.
                  properties:
                    allowed_merchants:
                      type: object
                      description: |
                        Use this section to limit the use of this card to transactions from one or more merchants.
                        If a transaction comes through that is not a part of these merchants, the transaction will be declined.
                      properties:
                        allowed_merchant_ids:
                          description: |
                            The array of merchant ids to be accepted.
                            By setting this array, the incentives will only be applied to the merchant ids that are defined here
                          type: array
                          title: Acceptable merchant ids
                          example:
                            - '8123434'
                            - '8123777'
                          items:
                            type: string
                            format: int64
                        allowed_merchant_names:
                          description: |
                            The array of merchant names to be accepted.
                            By setting this array, the incentives will only be applied to transactions where the merchant name is included in the list. 
                          type: array
                          title: Acceptable merchant names
                          example:
                            - Alviere
                            - Alviere, Inc.
                          items:
                            type: string
                    limits:
                      type: array
                      items:
                        $ref: '#/components/schemas/issued-card-limit-request'
                emboss_id:
                  type: string
                  description: ID to be used at the embossing process
                auto_pin_generation:
                  type: boolean
                  description: |-
                    If we need to automatically generate pin for 
                    the card
                  default: false
                custom_fields:
                  type: object
                  title: Card custom fields
                  description: Allows setting of specific card fields
                  properties:
                    shipping_method:
                      type: string
                      example: DEFAULT
                      enum:
                        - DEFAULT
                        - EXPRESS_FEDEX
                    name_on_card:
                      type: string
                      description: Name on card
                      pattern: ^[a-zA-Z0-9- ]{2,26}$
                      example: John Doe
                    carrier_id:
                      type: string
                      description: ID of the carrier in which this card should be shipped
                      maxLength: 30
                    carrier_message:
                      type: string
                      description: Message to be printed in the carrier
                      maxLength: 150
                      minLength: 1
                metadata:
                  type: object
                  title: Card metadata fields
                  description: Allows for any number of custom metadata keys and values to be stored with a given card
                service_fees:
                  type: array
                  description: Array of service fees to be applied on card creation
                  items:
                    $ref: '#/components/schemas/service-fee-transaction'
      responses:
        '201':
          description: |
            The request was successful and the Card was created.
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                title: the issued card object
                properties:
                  card:
                    $ref: '#/components/schemas/issued-card-response'
                required:
                  - card
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '409':
          description: Conflict on the field `external_id`
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                title: the issued card object
                properties:
                  card:
                    $ref: '#/components/schemas/issued-card-response'
                required:
                  - card
      operationId: CARD-XX
      tags:
        - Card issuance

  /wallets/{wallet_uuid}/issued-cards:
    post:
      tags:
        - Card issuance
      summary: Create Card in Wallet
      description: |
        Creates a new issued card for the designated wallet
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/wallet_uuid'
        - $ref: '#/components/parameters/Version'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - external_id
                - product_id
              properties:
                external_id:
                  title: Your unique identification of the card in your system
                  description: This is your unique ID for this card. This field is used to guarantee idempotency.
                  type: string
                product_id:
                  title: The product id corresponding to the card being created
                  example: '885'
                  description: |
                    This product ID is assigned to you by the Alviere team when you setup your card issuance service.
                  type: string
                initial_balance:
                  title: The initial balance this card will have
                  example: 30000
                  description: |
                    This is the initial balance that the card being issued will have, in cents (100 = 1$)

                    **Notes:**
                    - This field only applies for Gift Card product types.
                    - This field is mandatory for Gift Card product types.
                    - If passing this field for other than Gift Card, the system will return a 400 error code.
                  type: integer
                  minimum: 1
                shipping_address:
                  $ref: '#/components/schemas/shipping-address'
                auth_rules:
                  type: object
                  title: The rules this card should use when authorizing a transaction.
                  properties:
                    allowed_merchants:
                      type: object
                      description: |
                        Use this section to limit the use of this card to transactions from one or more merchants.
                        If a transaction comes through that is not a part of these merchants, the transaction will be declined.
                      properties:
                        allowed_merchant_ids:
                          description: |
                            The array of merchant ids to be accepted.
                            By setting this array, only transactions where the merchant id is included in the list will be authorized.
                          type: array
                          title: Acceptable merchant ids
                          example:
                            - '8123434'
                            - '8123777'
                          items:
                            type: string
                            format: int64
                        allowed_merchant_names:
                          description: |
                            The array of merchant names to be accepted.
                            By setting this array, only transactions where the merchant name is included in the list will be authorized.
                          type: array
                          title: Acceptable merchant names
                          example:
                            - Alviere
                            - Alviere, Inc.
                          items:
                            type: string
                    limits:
                      type: array
                      items:
                        $ref: '#/components/schemas/issued-card-limit-request'
                emboss_id:
                  type: string
                  description: ID to be used at the embossing process
                custom_fields:
                  type: object
                  title: Card custom fields
                  description: Allows setting of specific card fields
                  properties:
                    shipping_method:
                      type: string
                      example: DEFAULT
                      enum:
                        - DEFAULT
                        - EXPRESS_FEDEX
                    name_on_card:
                      type: string
                      description: Name on card
                      pattern: ^[a-zA-Z0-9- ]{2,26}$
                      example: John Doe
                    carrier_id:
                      type: string
                      description: ID of the carrier in which this card should be shipped
                      maxLength: 30
                    carrier_message:
                      type: string
                      description: Message to be printed in the carrier
                      maxLength: 150
                      minLength: 1
                    line2_text:
                      type: string
                      description: Custom text for line 2 of the card
                      minLength: 1
                      maxLength: 26
                      pattern: "^[a-zA-Z0-9- ]{1,26}$"
                      example: "12345"
                auto_pin_generation:
                  type: boolean
                  description: |-
                    If we need to automatically generate pin for 
                    the card
                  default: false
                metadata:
                  type: object
                  title: Card metadata fields
                  description: Allows for any number of custom metadata keys and values to be stored with a given card
                service_fees:
                  type: array
                  items:
                    $ref: '#/components/schemas/service-fee-issued-card-request'
                incentives:
                  oneOf:
                    - title: Incentive rule UUIDs
                      description: Array of existing incentive rules that should apply to this card
                      required:
                        - rule_uuids
                      properties:
                        rule_uuids:
                          type: array
                          format: uuid
                          description: Array of incentive rule UUIDs
                          items:
                            type: string
                    - title: Incentive rules
                      required:
                        - incentive_rules
                      properties:
                        incentive_rules:
                          type: array
                          items:
                            $ref: '#/components/schemas/incentive-rule-request'
                  type: object
      responses:
        '201':
          description: |
            The request was successful and the Card was created.
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                title: the issued card object
                properties:
                  card:
                    $ref: '#/components/schemas/issued-card-response'
                required:
                  - card
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '409':
          description: Conflict on the field `external_id`
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                title: the issued card object
                properties:
                  card:
                    $ref: '#/components/schemas/issued-card-response'
                required:
                  - card
      operationId: CARD-01
    get:
      tags:
        - Card issuance
      summary: List Cards from Wallet
      description: Gets all the issued cards that are associated to a wallet
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/wallet_uuid'
      responses:
        '200':
          description: |
            Returns all the cards issued for an account.
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  cards:
                    type: array
                    items:
                      $ref: '#/components/schemas/issued-card-response'
                required:
                  - cards
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
      operationId: accounts-account_uuid-issuedcards-get

  /issued-cards:
    post:
      tags:
        - Card issuance
      summary: Create Card
      description: |
        Creates a new issued card for the designated Wallet or Account
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/issued-card-request'
      responses:
        '201':
          description: |
            The request was successful and the Card was created.
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                title: the issued card object
                properties:
                  card:
                    $ref: '#/components/schemas/issued-card-response'
                required:
                  - card
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '409':
          description: Conflict on the field `external_id`
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                title: the issued card object
                properties:
                  card:
                    $ref: '#/components/schemas/issued-card-response'
                required:
                  - card
      operationId: issued-cards-post
      x-internal: true
    get:
      tags:
        - Card issuance
      summary: List Cards
      description: List all of the issued cards that are associated with a Program/Account/Wallet
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/account_uuid_query'
        - $ref: '#/components/parameters/wallet_uuid_query'
        - $ref: '#/components/parameters/card-statuses'
      responses:
        '200':
          description: |
            Returns all the cards issued for an account.
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  cards:
                    type: array
                    items:
                      $ref: '#/components/schemas/issued-card-response'
                required:
                  - cards
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
      operationId: issued-cards-get
      x-internal: true
    parameters: []
  /issued-cards/{card_uuid}:
    get:
      tags:
        - Card issuance
      summary: Get Card details
      description: Get details of an issued card
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
      responses:
        '200':
          description: |
            Returns all the cards issued for an account.
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                required:
                  - card
                properties:
                  card:
                    $ref: '#/components/schemas/issued-card-response'
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
      operationId: issued-cards-card-uuid-get
      x-internal: true
    parameters:
      - $ref: '#/components/parameters/card_uuid'
  /issued-cards/{card_uuid}/reissue_replace:
    post:
      tags:
        - Card issuance
      summary: Reissue/replace Card
      description: |
        Reissue/replace a card
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - external_id
                - action
                - reason
              properties:
                external_id:
                  title: Your unique identification of the card in your system
                  description: |
                    This is your unique ID for this card. This field is used to guarantee idempotency.
                  type: string
                action:
                  type: string
                  description: Whether the card should be reissued or replaced
                  enum:
                    - REISSUE
                    - REPLACE
                reason:
                  type: string
                  enum:
                    - DAMAGED
                    - ATM_MALFUNCTION
                    - DATA_COMPROMISE
                    - ABOUT_TO_EXPIRE
                    - EXPIRED
                    - OTHER
                  description: The reason whether the card is reissued/replaced
                description:
                  type: string
                shipping_address:
                  $ref: '#/components/schemas/shipping-address'
                custom_fields:
                  type: object
                  title: Card custom fields
                  description: Allows setting of specific card fields
                  properties:
                    shipping_method:
                      type: string
                      example: DEFAULT
                      enum:
                        - DEFAULT
                        - EXPRESS_FEDEX
                service_fees:
                  type: array
                  items:
                    $ref: '#/components/schemas/service-fee-issued-card-replace-reissue'
      responses:
        '201':
          description: |
            The request was successful and the Card was reissued/replaced.
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                title: the issued card object
                properties:
                  card:
                    $ref: '#/components/schemas/issued-card-response'
                required:
                  - card
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
        '409':
          description: Conflict on the field `external_id`
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                title: the issued card object
                properties:
                  card:
                    $ref: '#/components/schemas/issued-card-response'
                required:
                  - card
      operationId: CARD-22
    parameters:
      - $ref: '#/components/parameters/card_uuid'
  /issued-cards/{card_uuid}/pin:
    put:
      tags:
        - Card issuance
      summary: Set Card PIN
      description: To set/change a card PIN. The required number of digits depends on your issued card program configuration. This endpoint is restricted to Alviere's SDK or preauthorized clients.
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/card_uuid'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                pin:
                  type: string
                  description: The numbers of the pin. The required number of digits depends on your issued card program configuration.
                  pattern: ^[0-9]{4,9}$
                  example: '1234'
              required:
                - pin
      responses:
        '204':
          description: |
            The request was successful
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
      operationId: CARD-18
      x-internal: false

  /wallets/{wallet_uuid}/issued-cards/{card_uuid}:
    get:
      tags:
        - Card issuance
      summary: Get Card in Wallet
      description: |
        Gets an existing card from the system.
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/wallet_uuid'
        - $ref: '#/components/parameters/card_uuid'
      responses:
        '200':
          description: |
            Card details were returned.
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  card:
                    $ref: '#/components/schemas/issued-card-response'
                required:
                  - card
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
      operationId: accounts-account_uuid-issuedcards-card_uuid-get
      
    patch:
      tags:
        - Card issuance
      summary: Update Card in Wallet
      description: |
        Updates the card data.

        **Note:** Status changes need to be submitted through the appropriate endpoints.
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/wallet_uuid'
        - $ref: '#/components/parameters/card_uuid'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                external_id:
                  type: string
                  description: This is your unique ID for this card. This field is used to guarantee idempotency.
                auth_rules:
                  type: object
                  title: The rules this card should use when authorizing a transaction.
                  properties:
                    allowed_merchants:
                      type: object
                      description: |
                        Use this section to limit the use of this card to transactions from one or more merchants.
                        If a transaction comes through that is not a part of these merchants, the transaction will be declined.
                      properties:
                        allowed_merchant_ids:
                          description: |
                            The array of merchant ids to be accepted.
                            By setting this array, the incentives will only be applied to the merchant ids that are defined here
                          type: array
                          title: Acceptable merchant ids
                          example:
                            - 8123434
                            - 8123777
                          items:
                            type: integer
                            format: int64
                        allowed_merchant_names:
                          description: |
                            The array of merchant names to be accepted.
                            By setting this array, the incentives will only be applied to transactions where the merchant name is included in the list. 
                          type: array
                          title: Acceptable merchant names
                          example:
                            - Alviere
                            - Alviere, Inc.
                          items:
                            type: string
                    limits:
                      type: array
                      items:
                        $ref: '#/components/schemas/issued-card-limit-request'
                incentives:
                  oneOf:
                    - title: Incentive rule UUIDs
                      description: Array of existing incentive rules that should apply to this card
                      required:
                        - rule_uuids
                      properties:
                        rule_uuids:
                          type: array
                          format: uuid
                          description: Array of incentive rule UUIDs
                          items:
                            type: string
                    - title: Incentive rules
                      required:
                        - incentive_rules
                      properties:
                        incentive_rules:
                          type: array
                          items:
                            $ref: '#/components/schemas/incentive-rule-request'
                  description: Incentive rules to be applied on this card. This can be passed on as an array of existing incentive rule entities, or as an array of incentive rules that will be created ad-hoc as part of this card
                  type: object
                metadata:
                  type: object
                  title: Card metadata fields
                  description: Allows for any number of custom metadata keys and values to be stored with a given card
                  example:
                    key_example: example
                    key_example_2: 10
                shipping_address:
                  type: object
                  title: The shipping address of the card to update
                  description: The card's updated shipping address
                  required:
                    - line_1
                    - postal_code
                    - city
                    - state
                    - country
                  properties:
                    line_1:
                      title: Address Line One
                      description: Address line 1 (e.g., street, PO Box, or company name - NOTE that newline characters are not accepted)
                      type: string
                      pattern: ^.{2,128}$
                      example: 101 Avennue of the Americas
                    line_2:
                      title: Address Line Two
                      description: Address line 2 (e.g., apartment, suite, unit, or building - NOTE that newline characters are not accepted)
                      type: string
                      pattern: ^.{1,128}$
                      example: Suite 936
                    postal_code:
                      title: Postal Code
                      description: ZIP or postal code
                      type: string
                      pattern: ^.{5,9}$
                      example: '10013'
                    city:
                      title: City
                      description: City, district, suburb, town, or village
                      type: string
                      pattern: ^.{2,128}$
                      example: New York
                    state:
                      title: State
                      description: State, county, province, or region
                      type: string
                      pattern: ^[A-Z]{2}$
                      example: NY
                    country:
                      title: Country
                      description: Three-letter country code (ISO 3166-1 alpha-3).
                      type: string
                      pattern: ^[A-Z]{3}$
                      example: USA
                physical_card_conversion:
                  type: object
                  description: Configuration for converting a virtual card to physical. Using this object requires prior approval from Alviere.
                  required:
                    - product_id
                  properties:
                    product_id:
                      type: string
                      description: Physical card product ID
                    custom_fields:
                      type: object
                      description: Custom fields for physical card
                      properties:
                        shipping_method:
                          type: string
                          enum:
                            - DEFAULT
                            - EXPRESS_FEDEX
                          example: DEFAULT
                        name_on_card:
                          type: string
                          description: Name for embossing on the card
                          example: John Doe
                        line2_text:
                          type: string
                          description: Custom text for line 2 of the card
                          minLength: 1
                          maxLength: 26
                          pattern: "^[a-zA-Z0-9- ]{1,26}$"
                          example: "12345"
      responses:
        '200':
          description: |
            The card was updated successfully
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  card:
                    $ref: '#/components/schemas/issued-card-response'
                required:
                  - card
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
      operationId: accounts-account_uuid-issuedcards-card_uuid-patch
    delete:
      tags:
        - Card issuance
      summary: Cancel Card in Wallet
      description: |
        Cancels a card and put the status of the card to `CANCELED`
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/wallet_uuid'
        - $ref: '#/components/parameters/card_uuid'
      responses:
        '204':
          description: |
            The card was successfully canceled
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
        '409':
          description: Conflict on the field `external_id`. Entity has already been deleted.
      operationId: accounts-account_uuid-issuedcards-card_uuid-cancel

  /wallets/{wallet_uuid}/issued-cards/{card_uuid}/activate:
    put:
      tags:
        - Card issuance
      summary: Activate Card in Wallet
      description: |
        Activates an issued card.

        **Note:** this method is only valid for physical card products.
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/wallet_uuid'
        - $ref: '#/components/parameters/card_uuid'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - last_4
                - expiration_date
              properties:
                last_4:
                  type: string
                  description: The last 4 digits of the card
                  pattern: ^[0-9]{4}$
                  example: '1234'
                expiration_date:
                  type: string
                  description: The card's expiration date
                  pattern: ^(0[1-9]|1[0-2])/[0-9]{2}$
                  example: 02/25
                security_code:
                  type: string
                  description: The CVC/CVV of the card
                  pattern: ^[0-9]{3}$
                  example: '123'
      responses:
        '204':
          description: |
            The request was successful
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
      operationId: accounts-account_uuid-issuedcards-card_uuid-activate

  /wallets/{wallet_uuid}/issued-cards/{card_uuid}/unfreeze:
    put:
      tags:
        - Card issuance
      summary: Unfreeze Card in Wallet
      description: |
        Unfreezes an issued card.
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/wallet_uuid'
        - $ref: '#/components/parameters/card_uuid'
         
      responses:
        '204':
          description: |
            The request was successful
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
      operationId: accounts-account_uuid-issuedcards-card_uuid-unfreeze

  /wallets/{wallet_uuid}/issued-cards/{card_uuid}/freeze:
    put:
      tags:
        - Card issuance
      summary: Freeze Card in Wallet
      description: |
        Freezes an issued card

        All authorization requests will be declined when a card is frozen 
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/wallet_uuid'
        - $ref: '#/components/parameters/card_uuid'
      responses:
        '204':
          description: |
            The request was successful
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
      operationId: accounts-account_uuid-issuedcards-card_uuid-freeze

  /wallets/{wallet_uuid}/issued-cards/{card_uuid}/mobile-wallet:

    put:
      summary: Add Card to digital wallet
      operationId: put-accounts-account_uuid-issued-cards-card_uuid-mdes
      responses:
        '200':
          description: The request was successful. The `result` property will show if this operation succeeded or failed.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    description: Whether operation succeeded or failed.
                    enum:
                      - SUCCESS
                      - FAILED
                  error_code:
                    type: string
                    description: This property will only be present if the operation result is FAILED.
                    example: '100012'
                  provisioning_request_data:
                    oneOf:
                      - title: Apple Pay
                        properties:
                          apple_pay:
                            $ref: '#/components/schemas/apple-pay-response'
                      - title: Google Pay
                        properties:
                          google_pay:
                            $ref: '#/components/schemas/google-pay-response'
                      - title: Samsung Pay
                        properties:
                          samsung_pay:
                            $ref: '#/components/schemas/samsung-pay-response'
                    description: Strings required to pass to mobile wallet provider
                    type: object
                required:
                  - result
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
      description: Adds an issued card to a mobile wallet. The supported wallets are Apple Pay, Google Pay and Samsung Pay.
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/wallet_uuid'
        - $ref: '#/components/parameters/card_uuid'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                wallet_provider:
                  type: string
                  enum:
                    - APPLE_PAY
                    - GOOGLE_PAY
                    - SAMSUNG_PAY
                parameters:
                  oneOf:
                    - title: Apple Pay
                      properties:
                        apple_pay:
                          $ref: '#/components/schemas/apple-pay-request'
                    - title: Google Pay
                      properties:
                        google_pay:
                          $ref: '#/components/schemas/google-pay-request'
                    - title: Samsung Pay
                      properties:
                        samsung_pay:
                          $ref: '#/components/schemas/samsung-pay-request'
                  description: Parameters required to add card to mobile wallet provider
                  type: object
              required:
                - wallet_provider
        description: ''
      tags:
        - Card issuance
  /wallets/{wallet_uuid}/issued-cards/{card_uuid}/image:
    get:
      tags:
        - Card issuance
      summary: Get Card image in Wallet
      description: Gets a base64 encoded image representing a physical card.
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/wallet_uuid'
        - $ref: '#/components/parameters/card_uuid'
      responses:
        '200':
          description: The request was successful
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  card_image:
                    type: string
                    description: The image of the card in base_64 format.
                    format: base64
                    example: U3dhZ2dlciByb2Nrcw==...
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
      operationId: accounts-account_uuid-issuedcards-card_uuid-image-get

  /wallets/{wallet_uuid}/issued-cards/{card_uuid}/sensitive-data:
    get:
      tags:
        - Card issuance
      summary: Get Card sensitive data in Wallet
      description: |
        Gets sensitive data of an issued card. This endpoint is restricted to Alviere's SDK or preauthorized clients.
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/wallet_uuid'
        - $ref: '#/components/parameters/card_uuid'
      responses:
        '200':
          description: The request was successful
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                title: The card sensitive data
                properties:
                  card_pan:
                    type: string
                    description: The full card PAN
                  card_security_code:
                    title: The CVV of the card
                    example: '123'
                    type: string
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
      operationId: accounts-account_uuid-issuedcards-sensitivedata-get

  /accounts/{account_uuid}/beneficiaries:
    post:
      summary: Create beneficiary
      description: Create a new Beneficiary associated with this account
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/account_uuid'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/beneficiary-request'
      responses:
        '200':
          description: |
            The request was successful and the new Beneficiary was created.
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  beneficiary:
                    $ref: '#/components/schemas/beneficiary-response'
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
        '409':
          description: Conflict on the field `external_id`
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  beneficiary:
                    $ref: '#/components/schemas/beneficiary-response'
      operationId: accounts-account_uuid-beneficiaries-post
      tags:
        - Beneficiaries
    get:
      summary: List beneficiaries
      description: Gets all Beneficiaries associated to an account
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/account_uuid'
        - schema:
            type: string
            enum:
              - LOCAL
              - INTERNATIONAL
          in: query
          name: type
          description: The type of beneficiary
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: OK
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  beneficiaries:
                    type: array
                    items:
                      $ref: '#/components/schemas/beneficiary-response'
                required:
                  - beneficiaries
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
      operationId: accounts-account_uuid-beneficiaries-get
      tags:
        - Beneficiaries
    parameters:
      - $ref: '#/components/parameters/account_uuid'
  /accounts/{account_uuid}/beneficiaries/{beneficiary_uuid}:
    patch:
      summary: Update beneficiary
      description: |
        Updates a Beneficiary.
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/account_uuid'
        - $ref: '#/components/parameters/beneficiary_uuid'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/beneficiary-update'
      responses:
        '200':
          description: |
            The Beneficiary was updated.
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  beneficiary:
                    $ref: '#/components/schemas/beneficiary-response'
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
        '409':
          description: Conflict on the field `external_id`
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/beneficiary-response'
      operationId: accounts-account_uuid-beneficiaries-beneficiary_uuid-patch
      tags:
        - Beneficiaries
    get:
      summary: Get beneficiary
      description: Gets a beneficiary.
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/account_uuid'
        - $ref: '#/components/parameters/beneficiary_uuid'
      responses:
        '200':
          description: OK
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  beneficiary:
                    $ref: '#/components/schemas/beneficiary-response'
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
      operationId: accounts-account_uuid-beneficiaries-beneficiary_uuid-get
      tags:
        - Beneficiaries
    delete:
      summary: Delete beneficiary
      description: Deletes a beneficiary
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/account_uuid'
        - $ref: '#/components/parameters/beneficiary_uuid'
      responses:
        '204':
          description: Beneficiary successfully deleted
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
        '409':
          description: Conflict on the field `external_id`. Entity has already been deleted.
      operationId: accounts-account_uuid-beneficiaries-beneficiary_uuid-delete
      tags:
        - Beneficiaries

  /activities:
    get:
      summary: List activities
      description: Retrieve a paginated list of activities filtered by various parameters
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - name: wallet_uuid
          in: query
          schema:
            type: string
            format: uuid
          description: Filter activities by wallet UUID
        - name: account_uuid
          in: query
          schema:
            type: string
            format: uuid
          description: Filter activities by account UUID
        - name: type
          in: query
          schema:
            type: string
            enum:
              - DENIED_AUTHORIZATION
              - CARD_REPLACEMENT
          description: Filter activities by type
        - name: entity_uuid
          in: query
          schema:
            type: string
            format: uuid
          description: Filter activities by entity UUID
        - name: entity_type
          in: query
          schema:
            type: string
            enum:
              - ISSUED_CARD
          description: Filter activities by entity type
        - name: created_after
          in: query
          schema:
            type: string
            format: date-time
          description: Filter activities created after this timestamp
        - name: created_before
          in: query
          schema:
            type: string
            format: date-time
          description: Filter activities created before this timestamp
      responses:
        '200':
          description: List of activities retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  records:
                    type: integer
                    title: Number of records
                    description: The number of activity records returned
                  activities:
                    type: array
                    description: List of activities
                    items:
                      $ref: '#/components/schemas/activity-response'
          headers:
            Alv-Request-Id:
              schema:
                type: string
              description: Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case and serves solely for the purpose of technical debugging and troubleshooting.
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
      operationId: list-activities
      tags:
        - Activities
  /activities/{activity_uuid}:
    get:
      summary: Get activity
      description: Retrieve details of a specific activity by its UUID
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
        - name: activity_uuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: UUID of the activity to retrieve
      responses:
        '200':
          description: Activity details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/activity-response'
          headers:
            Alv-Request-Id:
              schema:
                type: string
              description: Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case and serves solely for the purpose of technical debugging and troubleshooting.
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
      operationId: get-activity
      tags:
        - Activities

  /cash-pickup/locations:
    get:
      summary: List cash pickup locations
      description: Provide list of cash disbursement locations
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
        - in: query
          name: city_uuid
          required: true
          description: UUID of City where pickup location is located
          schema:
            type: string
        - schema:
            type: string
          in: query
          name: network
          description: The payment network
      responses:
        '200':
          description: OK
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  cash_pickup_locations:
                    type: array
                    items:
                      $ref: '#/components/schemas/cash-pickup-location'
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
      operationId: GPAY-03
      tags:
        - Global payments
    parameters: []
  /cash-pickup/cities:
    get:
      summary: List cash pickup supported cities
      description: Provide list of cash disbursement locations
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
        - in: query
          name: city
          description: City (required if state is not provided)
          schema:
            type: string
        - schema:
            type: string
          in: query
          name: state
          description: State (required if city is not provided)
        - schema:
            type: string
          in: query
          name: country
          required: true
          description: Country
      responses:
        '200':
          description: OK
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  cities:
                    type: array
                    items:
                      $ref: '#/components/schemas/cash-pickup-city'
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
      operationId: GPAY-05
      tags:
        - Global payments
    parameters: []
  /cash-pickup/locations/{cash_pickup_location_uuid}:
    get:
      summary: Get cash pickup location details
      description: Get details of a cash pickup location
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/cash_pickup_location_uuid'
      responses:
        '200':
          description: OK
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  cash_pickup_location:
                    $ref: '#/components/schemas/cash-pickup-location'
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
      operationId: GPAY-04
      tags:
        - Global payments

  /global-payments/quote-preview:
    post:
      summary: Create quote preview
      description: Creates a quote preview for an international transfer
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - amount
                - source_currency
                - target_currency
                - country
                - payout_method_type
              properties:
                amount:
                  oneOf:
                    - title: Amount to be sent
                      required:
                        - send_amount
                      properties:
                        send_amount:
                          type: integer
                          description: The amount to be sent, in source currency
                    - title: Amount to be received
                      required:
                        - target_amount
                      properties:
                        target_amount:
                          type: integer
                          description: The amount to be received by the Beneficiary, in target currency
                  type: object
                source_currency:
                  description: |
                    The source amount currency
                  type: string
                  example: USD
                target_currency:
                  description: The target amount currency
                  type: string
                  example: MXN
                country:
                  type: string
                  description: The country where the funds will be transferred to
                payout_method_type:
                  description: The Payout Method type
                  enum:
                    - BANK
                    - CASH_PICKUP
                cash_pickup_location_uuid:
                  type: string
                  format: uuid
                  description: The UUID of the cash pickup location. Required if payout_method_type is `CASH_PICKUP`
                exchange_rate_markup:
                  type: number
                  description: The exchange rate markup to perform on the mid-market rate. This is a percent value
                  format: float
                service_fees:
                  type: array
                  items:
                    $ref: '#/components/schemas/service-fee-transaction'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  quote_preview:
                    type: object
                    required:
                      - exchange_rate
                      - send_amount
                      - source_currency
                      - target_amount
                      - target_currency
                      - country
                      - payout_method_type
                      - transaction_cost
                    properties:
                      exchange_rate:
                        type: string
                        description: The spot exchange rate for the provided currency pair
                        example: '1.1503'
                      send_amount:
                        type: string
                        description: The amount to be sent, in source currency
                        example: '1000'
                  
                      source_currency:
                        type: string
                        description: The source amount currency
                        example: 'USD'
                      target_amount:
                        type: string
                        description: The amount to be received by the Beneficiary, in target currency
                        example: '1150.30'
                      target_currency:
                        type: string
                        description: The target amount currency
                        example: 'MXN'
                      country:
                        type: string
                        description: The country where the funds will be transferred to
                        example: 'MEX'
                        
                      payout_method_type:
                        type: string
                        description: The Payout Method type
                        example: 'BANK'
                      cash_pickup_location_uuid:
                        type: string
                        description: The UUID of the cash pickup location. Required if payout_method_type is `CASH_PICKUP`
                        example: 'd19d49be-aa2b-4081-bada-dc316befadb4'
                      transaction_cost:
                        type: integer
                        description: The cost of the transaction to be paid by the sender, in cents. This includes the funding of the transaction and the applied service fees if any
                        example: 115030
                      service_fees_values:
                        type: array
                        title: service fees
                        description: Service fees associated with the quoted transaction.
                        items:
                          $ref: '#/components/schemas/service-fee-value'
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
      operationId: GPAY-06
      tags:
        - Global payments
    parameters: []
  /wallets/{wallet_uuid}/quote:
    post:
      summary: Create quote
      description: Creates a new quote to inform the consumer of the costs associated with sending funds internationally to a specific beneficiary
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/wallet_uuid'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: integer
                  description: |
                    The amount to be sent to the beneficiary, in cents.
                    e.g. If you want to get a quote for a transaction of 1 USD, the value must be `100` 
                  minimum: 1
                  maximum: 99999999
                  example: 1000
                beneficiary_uuid:
                  description: The beneficiary identifier. Beneficiary should be of type international
                  format: uuid
                  type: string
                payout_method_uuid:
                  type: string
                  description: The UUID of the Payout Method. If none provided the primary Payout Method of the Beneficiary will be used
                amount_currency:
                  description: |
                    Provides the ability to create a quote with the amount either in the origin or the destination currency:

                    If the value on this property is `ORIGIN_CURRENCY` the expected amount on the amount property should be in the base currency of the program.

                    If the value on this property is `DESTINATION_CURRENCY` the expected amount on the amount property should be in the destination currency of the transaction.
                  type: string
                  example: ORIGIN_CURRENCY
                exchange_rate:
                  type: string
                  description: |
                    The exchange rate to be applied to this transaction; it is only possible to use this parameter if the business account allows for external management of exchange rates.
                  example: '1.1503'
                exchange_rate_markup:
                  type: number
                  description: The exchange rate markup to perform on the mid-market rate. This is a percent value
                  format: float
                  example: 3.4
                  minimum: 0
                  maximum: 100
                service_fees:
                  type: array
                  title: service fees
                  description: The array of Service Fees objects as per system definition (only `UPCHARGE` type service fees will be supported for quotes)
                  items:
                    $ref: '#/components/schemas/service-fee-transaction'
              required:
                - amount
                - beneficiary_uuid
                - amount_currency
      responses:
        '201':
          description: |
            The request was successful and the new Quote was created.
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                description: Create quote success response
                properties:
                  quote:
                    type: object
                    description: Structure containing the resulting quote details
                    properties:
                      quote_uuid:
                        description: The quote's unique identifier
                        format: uuid
                        type: string
                      exchange_rate:
                        type: string
                        description: The exchange rate that will be applied to this transaction
                        example: '1.1503'
                      send_amount:
                        type: integer
                        description: |
                          The amount that will be received by the beneficiary of the transaction, in the destination currency.
                        minimum: 1
                        maximum: 99999999
                        example: 1000
                      currency:
                        description: The destination currency in ISO-4217 format.
                        type: string
                      transaction_cost:
                        type: integer
                        description: |
                          The cost of the transaction to be paid by the consumer, in cents. This includes the funding of the transaction and the applied service fees if any.
                        minimum: 1
                        maximum: 99999999
                        example: 100
                      expires_at:
                        type: string
                        description: The date/time when this quote expires.
                        format: date-time
                      service_fees_values:
                        type: array
                        title: service fees
                        description: Service fees associated with the quoted transaction.
                        items:
                          $ref: '#/components/schemas/service-fee-value'
                    required:
                      - quote_uuid
                      - exchange_rate
                      - send_amount
                      - currency
                      - transaction_cost
                      - expires_at
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
      operationId: globalpayments-account_uuid-quote-post
      tags:
        - Global payments

  /wallets/{wallet_uuid}/remittances:
    post:
      summary: Create remittance
      description: |
        Creates a new remittance (`INTERNATIONAL_TRANSFER`) transaction to an international Beneficiary
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/wallet_uuid'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - quote_uuid
              properties:
                quote_uuid:
                  description: |
                    The UUID of the quote that is being used for the transaction
                  format: uuid
                  example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                  type: string
                external_id:
                  type: string
                  description: |
                    This value is used for idempotency purposes.

                    NOTE: This field MUST be unique. Any subsequent transactions with the same value will be discarded.
                payment_method_uuid:
                  description: UUID of the payment method to use to fund this transaction. If none provided, the transaction will be funded from the wallet balance
                  format: uuid
                  example: 497f6eca-1234-4993-bfeb-53cbbbba6f08
                  type: string
                description:
                  type: string
                  description: A small description to identify the transaction
                  example: transfer for christmas money
                transaction_purpose:
                  description: The purpose of the transaction. For valid purposes per corridor and transaction type please refer to the `INTERNATIONAL_TRANSFER` section of our Guides.
                  type: string
                source_of_funds:
                  enum:
                    - EMPLOYMENT_INCOME
                    - OWNED_BUSINESS
                    - FAMILY_INCOME
                    - SAVINGS
                    - INVESTMENTS
                    - INHERITANCE
                    - PROCEEDS_OF_SALE
                    - PENSION
                  description: The source of funds for the transaction (EMPLOYMENT_INCOME, SAVINGS, etc.)
                funding_method:
                  enum:
                    - CASH
                  description: If the transaction is to be funded with cash
                metadata:
                  type: object
                  description: Allows for any number of custom metadata keys and values to be stored with a given transaction
      responses:
        '201':
          description: |
            The request was successful and the new Remittance Transaction was created.
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                description: Create transaction success response
                properties:
                  transaction:
                    $ref: '#/components/schemas/wallet-transaction'
                  validation:
                    type: object
                    properties:
                      error_code:
                        type: string
                        description: |
                          The error code of the error that occured
                      error_description:
                        type: string
                        description: |
                          The error description of the error that occured
              examples:
                Example 1:
                  value:
                    transaction:
                      transaction_uuid: 59f75f2b-4e03-4aee-a7b8-0b4a311ec65b
                      wallet_uuid: 79459be8-9838-4b25-866f-06b6cf5f7a9e
                      account_uuid: 79459be8-9838-4b25-866f-06b6cf5f7a9e
                      external_id: 4a2fcf7d-8a07-4f7a-a7c7-eda299f47018
                      beneficiary_uuid: 771bab05-bfc3-49c5-9002-49ca3b0d61d3
                      transaction_type: INTERNATIONAL_TRANSFER
                      status: CREATED
                      description: Dummy remittance.
                      amount: -10000
                      currency: USD
                      type_details:
                        global_payments_details:
                          exchange_rate: '2.2'
                      refunded: false
                      created_at: '2025-03-17T13:58:38.904244Z'
                      updated_at: '2025-03-17T13:58:38.914998Z'
                      funds_source:
                        payment_method_uuid: 64010643-bd14-43f4-ab08-2886690ce12a
                      funds_source_type: BANK_PM
                    validation: {}
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
        '409':
          description: Conflict
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                description: Create transaction success response
                properties:
                  transaction:
                    $ref: '#/components/schemas/transaction'
                  validation:
                    type: object
                    properties:
                      error_code:
                        type: string
                        description: |
                          The error code of the error that occured
                      error_description:
                        type: string
                        description: |
                          The error description of the error that occured
      operationId: globalpayments-accounts-account_uuid-wallet_uuid-remittances-transactions-post
      tags:
        - Global payments
 
  /treasury/transactions:
    get:
      tags:
        - Treasury management
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/start_date'
        - $ref: '#/components/parameters/transaction-status'
        - $ref: '#/components/parameters/transaction-type'
        - $ref: '#/components/parameters/end_date'
      summary: List transactions
      description: Get list of transactions in your Alviere enabled program
      responses:
        '200':
          description: Success
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  records:
                    title: Number of transaction records returned
                    type: integer
                    example: 1
                  transactions:
                    title: List of transactions
                    type: array
                    items:
                      $ref: '#/components/schemas/transaction'
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
      operationId: treasury-transactions-get
    parameters: []
  /treasury/{vault_uuid}/load:
    post:
      tags:
        - Treasury management
      summary: Load funds
      description: Creates a load transaction (load money into a treasury vault)
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/vault_uuid'
        - $ref: '#/components/parameters/Version'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - payment_method_uuid
                - amount
                - external_id
              properties:
                payment_method_uuid:
                  type: string
                  format: uuid
                  description: |
                    The ID of the the payment method.
                amount:
                  type: integer
                  description: |
                    The amount to be loaded into the treasury account.

                    NOTE: the amount it is in cents.
                  minimum: 1
                  maximum: 9999999999
                external_id:
                  type: string
                  description: |
                    The ID of this user in your own platform. This will be associated with this account and can
                    be used to identify the account as well as protect our API against duplicate accounts.

                    NOTE: This field MUST be unique. Any subsequent Create Users with same `external_id` will fail with a HTTP 409.
      responses:
        '201':
          $ref: '#/components/responses/ledger-transaction-response-success'
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
        '409':
          $ref: '#/components/responses/ledger-transaction-response-idempotency'
      operationId: treasury-account_uuid-load-post

  /cash-load/barcode:
    post:
      summary: Generate a Barcode
      description: Creates a barcode that can be presented at selected stores to load cash in to a Wallet or fund certain transactions.
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - owner
              properties:
                owner:
                  oneOf:
                    - title: Account
                      required:
                        - account_uuid
                      properties:
                        account_uuid:
                          type: string
                          format: uuid
                          description: The unique ID of the Account where the funds will be deposited. Choosing this option will deposit the funds in the Account's primary wallet
                    - title: Wallet
                      required:
                        - wallet_uuid
                      properties:
                        wallet_uuid:
                          type: string
                          format: uuid
                          description: The unique ID of the Wallet where the funds will be deposited
                  type: object
                external_id:
                  type: string
                  description: |
                    This value is used for idempotency purposes.

                    NOTE: This field MUST be unique. Any subsequent transactions with the same value will be discarded.
                metadata:
                  type: object
                  description: Allows for any number of custom metadata keys and values to be stored with a given transaction
                customer_location:
                  type: object
                  description: Location from where the barcode generation is being
                  required:
                    - latitude
                    - longitude
                  properties:
                    latitude:
                      type: string
                      description: Customer's latitude
                      example: '33.6903971'
                    longitude:
                      type: string
                      description: Customer's longitude
                      example: '-84.4888167'
      responses:
        '201':
          description: Barcode returned
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  barcode:
                    $ref: '#/components/schemas/barcode'
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
        '409':
          description: Conflict
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                description: Create transaction success response
                properties:
                  barcode:
                    $ref: '#/components/schemas/barcode'
      operationId: CASH-01
      tags:
        - Cash loading
    parameters: []
  /cash-load/locations:
    parameters: []
    get:
      summary: Get cash loading locations
      tags:
        - Cash loading
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  cash_loading_locations:
                    type: array
                    items:
                      $ref: '#/components/schemas/cash-loading-location'
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
      operationId: CASH-02
      parameters:
        - schema:
            type: string
            example: 12345-1234
          in: query
          name: postal_code
          description: The postal code of the location
        - schema:
            type: string
            example: '33.6903971'
          in: query
          name: latitude
          description: Store latitude
        - schema:
            type: string
            example: '-84.4888167'
          in: query
          name: longitude
          description: Store longitude
        - schema:
            type: number
            default: '5'
            minimum: 0.1
            maximum: 25
          in: query
          name: radius
          description: The distance from the center of geocoded search criteria in miles
        - schema:
            type: string
          in: query
          name: address
          description: Store address
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 1000
            default: 50
          description: The number of items per page
        - schema:
            type: string
          in: query
          name: store_network_id
          description: The unique identifier of the store set by the network
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/Authorization'
      description: Returns store locations that support cash loading via barcode
  /treasury/{vault_uuid}/withdraw:
    post:
      tags:
        - Treasury management
      summary: Withdraw funds
      description: |
        Creates a withdraw transaction (withdraw money from treasury vault).
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/vault_uuid'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - payment_method_uuid
                - amount
                - external_id
              properties:
                payment_method_uuid:
                  type: string
                  format: uuid
                  description: |
                    The ID of the the payment method.
                amount:
                  type: integer
                  description: |
                    The amount to be loaded into the treasury account.

                    NOTE: the amount it is in cents.
                  minimum: 1
                  maximum: 9999999999
                external_id:
                  type: string
                  description: |
                    The ID of this user in your own platform. This will be associated with this account and can
                    be used to identify the account as well as protect our API against duplicate accounts.

                    NOTE: This field MUST be unique. Any subsequent Create Users with same `external_id` will fail with a HTTP 409.
      responses:
        '201':
          $ref: '#/components/responses/ledger-transaction-response-success'
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
        '409':
          $ref: '#/components/responses/ledger-transaction-response-idempotency'
      operationId: treasury-account_uuid-withdraw

  /treasury/transfer:
    post:
      tags:
        - Treasury management
      summary: Transfer funds
      description: |
        Creates a transfer transaction (transfers money between treasury vaults).
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                origin_vault_uuid:
                  type: string
                  format: uuid
                  description: |
                    Origin treasury vault.
                destination_vault_uuid:
                  type: string
                  format: uuid
                  description: |
                    Destination treasury vault.
                amount:
                  type: integer
                  description: |
                    The amount to be loaded into the treasury account.

                    NOTE: the amount it is in cents.
                  minimum: 1
                  maximum: 99999999
                external_id:
                  type: string
                  description: |
                    The ID of this user in your own platform. This will be associated with this account and can
                    be used to identify the account as well as protect our API against duplicate accounts.

                    NOTE: This field MUST be unique. Any subsequent Create Users with same `external_id` will fail with a HTTP 409.
              required:
                - origin_vault_uuid
                - destination_vault_uuid
                - amount
                - external_id
        description: ''
      responses:
        '201':
          description: The transaction was created. Returned transaction belongs to the origin vault. Destination transaction is available as a child of the origin transaction.
          content:
            application/json:
              schema:
                type: object
                properties:
                  transaction:
                    $ref: '#/components/schemas/transaction'
                  validation:
                    type: object
                    description: Errors associated with the response. If there are no errors, fields will be empty.
                    properties:
                      result:
                        type: string
                        enum:
                          - SUCCESS
                          - FAILED
                      error_code:
                        type: string
                        description: The error code that identifies the error
                        example: '500012'
                      error_description:
                        type: string
                        description: The description of the error that occurred
                        example: Payment method is invalid
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
        '409':
          description: Idempotency detected - conflict with `external_id` field.
          content:
            application/json:
              schema:
                type: object
                properties:
                  transaction:
                    $ref: '#/components/schemas/transaction'
                  validation:
                    type: object
                    description: Errors associated with the response. If there are no errors, fields will be empty.
                    properties:
                      result:
                        type: string
                        enum:
                          - SUCCESS
                          - FAILED
                      error_code:
                        type: string
                        description: The error code that identifies the error
                        example: '500012'
                      error_description:
                        type: string
                        description: The description of the error that occurred
                        example: Payment method is invalid
      operationId: treasury-transfer-post
  /wallets/{wallet_uuid}/check-deposits:
    post:
      description: |-
        Use this endpoint to create a `CHECK_DEPOSIT` transaction for this wallet.

        The capture method for the front and back image of the check should always be done using Alviere's iOS or Android Mobile SDKs.

        Checks deposited in the accounts will remain as `captive` balance in the user account until they settle, however, you can decide to release all or part of the check amount prior to settlement.
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/wallet_uuid'
        - $ref: '#/components/parameters/Version'
      summary: Deposit check
      operationId: accounts-checkdeposits-account_uuid-post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - external_id
                - front_image
                - back_image
                - currency
                - amount
              properties:
                external_id:
                  type: string
                  description: |
                    The external id of this request in your own platform. This value is used for idempotency purposes.
                front_image:
                  type: string
                  format: base64
                  example: U3dhZ2dlciByb2Nrcw==...
                  description: |
                    The image of the front of the check, captured with Alviere's Mobile SDK.
                back_image:
                  type: string
                  format: base64
                  example: U3dhZ2dlciByb2Nrcw==...
                  description: |
                    The image of the back of the check, captured with Alviere's Mobile SDK.
                currency:
                  description: The bank's currency code in ISO-4217 format.
                  type: string
                amount:
                  description: |
                    The amount is the value associated with the request, in cents. 
                    e.g. If you want to debit 1 USD the value must be `amount: 100`
                  type: integer
                  minimum: 1
                  maximum: 99999999
                service_fees:
                  type: array
                  title: Service Fees
                  description: Service fees associated with the check loading transaction.
                  items:
                    $ref: '#/components/schemas/service-fee-check-request'
      tags:
        - Check Deposits
      responses:
        '201':
          $ref: '#/components/responses/check-response-success'
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
        '409':
          $ref: '#/components/responses/check-response-idempotency'

    get:
      summary: List checks
      operationId: get-wallets-wallet_uuid-check-deposits
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  checks:
                    type: array
                    description: Array containing check objects
                    items:
                      $ref: '#/components/schemas/check'
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
      description: List all checks that were deposited in the account wallet
      tags:
        - Check Deposits
      parameters:
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/start_date'
        - $ref: '#/components/parameters/end_date'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/wallet_uuid'
  /wallets/{wallet_uuid}/check-deposits/{check_uuid}:
    get:
      description: Gets a Check that was previously deposited in the account wallet.
      tags:
        - Check Deposits
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/wallet_uuid'
        - $ref: '#/components/parameters/check_uuid'
      summary: Get check
      operationId: check-deposits-account_uuid-check_uuid-get
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  check:
                    $ref: '#/components/schemas/check'
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'

  /incentive-rules/{rule_uuid}:
    get:
      summary: Get incentive rule
      tags:
        - Rewards and Incentives
      responses:
        '200':
          description: Incentive rule entity returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  incentive_rule:
                    $ref: '#/components/schemas/incentive-rule-response'
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
      operationId: CARD-12
      description: Get the details of an incentive rule that belongs to the program
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/rule_uuid'
    
    delete:
      summary: Delete incentive rule
      operationId: CARD-13
      responses:
        '204':
          description: Entity successfully deleted
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
        '409':
          description: Conflict on the field `external_id`. Entity has already been deleted.
      description: Deletes an incentive rule
      parameters:
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/rule_uuid'
      tags:
        - Rewards and Incentives
  /incentive-rules/{rule_uuid}/activate:

    put:
      summary: Activate incentive rule
      operationId: CARD-14
      responses:
        '204':
          description: Rule has been successfully activated
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
        '409':
          description: Conflict. Rule already active
      description: Activate an existing incentive rule
      parameters:
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/rule_uuid'
      tags:
        - Rewards and Incentives
  /incentive-rules/{rule_uuid}/deactivate:
    put:
      summary: Deactivate incentive rule
      operationId: CARD-15
      responses:
        '204':
          description: Rule has been successfully deactivated
          headers: {}
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
        '409':
          description: Conflict. Rule already inactive
      description: Deactivates an existing incentive rule
      parameters:
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/rule_uuid'
      tags:
        - Rewards and Incentives
  /incentive-rules:
    get:
      summary: List incentive rules
      responses:
        '200':
          description: Incentive rules returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  incentive_rules:
                    type: array
                    description: Array of incentive rules
                    items:
                      $ref: '#/components/schemas/incentive-rule-response'
          headers:
            Alv-Request-Id:
              schema:
                type: string
                example: 8944355f-342d-42df-9ec9-5b12e619d504
              description: Alviere's internal unique identifier for the request. This ID is automatically generated by our API service andspans across our entire infrastructure allowing tech ops to trace a request. This id has no business use caseand serves solely for the purpose of technical debugging and troubleshooting.
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
      operationId: CARD-16
      description: List all incentive rules that belong to the program
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - schema:
            type: string
            enum:
              - CASHBACK
              - BOOST
          in: query
          name: incentive_type
          description: The type of incentive that should be returned. If none provided all types will be returned
        - schema:
            type: string
            enum:
              - GLOBAL
              - ISSUED_CARD
          in: query
          name: incentive_scope
          description: The scope of the rule. If none provided all scopes will be returned
      tags:
        - Rewards and Incentives
    parameters: []
    post:
      summary: Create incentive rule
      operationId: CARD-17
      responses:
        '201':
          description: Incentive rule created
          content:
            application/json:
              schema:
                type: object
                properties:
                  incentive_rule:
                    $ref: '#/components/schemas/incentive-rule-response'
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
        '409':
          description: Conflict on `external_id`. Rule had already been created
          content:
            application/json:
              schema:
                type: object
                properties:
                  incentive_rule:
                    $ref: '#/components/schemas/incentive-rule-response'
      description: Creates an incentive rule in the program
      parameters:
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/Authorization'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                incentive_rule:
                  $ref: '#/components/schemas/incentive-rule-request'
              required:
                - incentive_rule
      tags:
        - Rewards and Incentives
  /transactions/summary-data:
    post:
      summary: Calculate transactional summary data
      operationId: post-data-transaction-summary
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  summary_data:
                    $ref: '#/components/schemas/summary-data'
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
      parameters:
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/Authorization'
        
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - entity
                - requested_datapoint
              properties:
                entity:
                  oneOf:
                    - title: Account
                      required:
                        - account_uuid
                      properties:
                        account_uuid:
                          type: string
                          description: The unique ID of the account
                        transaction_type:
                          type: array
                          items:
                            enum:
                              - LOAD_FUNDS
                              - CHECK_DEPOSIT
                  type: object
                requested_datapoint:
                  type: array
                  items:
                    enum:
                      - ACC_COUNT_COMPLETED
                      - ACC_COUNT_RETURNED
                      - ACC_COUNT_CHARGEBACK
                      - ACC_COUNT_FAILED
                      - ACC_VALUE_TOTAL_RETURNED
                      - TRN_TYPE_COUNT_COMPLETED
                      - TRN_TYPE_COUNT_FAILED
                      - TRN_TYPE_COUNT_RETURNED
                      - TRN_TYPE_COUNT_CHARGEBACK
                      - TRN_TYPE_VALUE_AVG_RETURNED
                start_date:
                  type: string
                  format: date-time
                  description: Starting date from when to provide the data. If not provided, data will be calculated from the beginning of the Program
                end_date:
                  type: string
                  format: date-time
                  description: End date to when to provide the data. If not provided, data will be calculated until current time
      tags:
        - Transactions
  
  /payout-methods/banks/{bank_uuid}:
    get:
      summary: Get bank details
      description: Get details of a bank account Payout Method
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/bank_uuid'
      responses:
        '200':
          description: OK
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  bank_details:
                    $ref: '#/components/schemas/bank-details'
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
      operationId: payout-methods-banks-bank-uuid-get
      tags:
        - Global payments

  /payout-methods/banks:
    get:
      summary: List supported banks
      description: Provide a list of banks that can be used as Payout Methods
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
        - schema:
            type: string
          in: query
          name: country
          description: The country of the bank
      responses:
        '200':
          description: OK
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  banks_details:
                    type: array
                    items:
                      $ref: '#/components/schemas/bank-details'
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
      operationId: payout-methods-banks-get
      tags:
        - Global payments
    parameters: []
  /fx/supported-payout-method-currencies:
    get:
      summary: List supported currencies
      description: List currencies that are supported by payout method
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
      responses:
        '200':
          description: OK
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  bank_accounts:
                    type: object
                    description: Supported country currency pairs for bank account Payout Methods
                    additionalProperties: {}
                  cash_pickup_locations:
                    type: object
                    description: Supported country currency pairs for cash pickup location Payout Methods
                    additionalProperties: {}
              examples:
                Example 1:
                  value:
                    bank_accounts:
                      CAN:
                        - CAD
                      GBR:
                        - GBP
                        - EUR
                        - USD
                      MEX:
                        - MXP
                    cash_pickup_locations:
                      MEX:
                        - MXP
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
      operationId: fx-supported-payout-method-currencies-get
      tags:
        - Global payments
    parameters: []
  /fx/field-validations:
    get:
      summary: Get field requirements for international transfers
      description: Returns field requirements for system entities involved in international transfers
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Version'
        - schema:
            type: string
            example: USA
          in: query
          name: origin_country
          required: true
          description: The country where the transaction is originated
        - schema:
            type: string
            example: USD
          in: query
          name: origin_currency
          required: true
          description: The currency of the wallet funding the transaction
        - schema:
            type: string
            example: MEX
          in: query
          name: destination_country
          required: true
          description: The country of the Beneficiary
        - schema:
            type: string
            example: MXN
          in: query
          name: destination_currency
          required: true
          description: The currency of the Beneficiary's payout method
      responses:
        '200':
          description: OK
          headers:
            Alv-Request-Id:
              description: |
                Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
                spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
                and serves solely for the purpose of technical debugging and troubleshooting.
              example: 8944355f-342d-42df-9ec9-5b12e619d504
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  beneficiary:
                    type: object
                    description: Field requirements for Beneficiary creation
                  payout_method:
                    type: object
                    description: Field requirements for Payout Method creation
                  quote:
                    type: object
                    description: Field requirements for Quote creation
                  transaction:
                    type: object
                    description: Field requirements for Transaction creation
              examples:
                MEX:MXN:
                  value:
                    beneficiary:
                      definitions:
                        beneficiary_address:
                          type: object
                          properties:
                            line_1:
                              type: string
                              pattern: ^.{2,128}$
                            line_2:
                              type: string
                              pattern: ^.{1,128}$
                            postal_code:
                              type: string
                              pattern: ^.{5,9}$
                            city:
                              type: string
                              pattern: ^.{2,128}$
                            state:
                              type: string
                              pattern: ^[A-Z]{2,4}$
                            country:
                              type: string
                              enum:
                                - MEX
                        individual_beneficiary_local:
                          type: object
                          required:
                            - external_id
                            - type
                            - first_name
                            - last_name
                            - country
                            - currency
                            - legal_type
                          properties:
                            external_id:
                              type: string
                              minLength: 1
                              maxLength: 128
                            type:
                              type: string
                              enum:
                                - LOCAL
                            legal_type:
                              type: string
                              enum:
                                - INDIVIDUAL
                            first_name:
                              type: string
                              minLength: 1
                              maxLength: 40
                            middle_name:
                              type: string
                              maxLength: 40
                            second_last_name:
                              type: string
                              maxLength: 40
                            last_name:
                              type: string
                              minLength: 1
                              maxLength: 40
                            date_of_birth:
                              type: string
                              oneOf:
                                - pattern: ^(19|20)\d\d-(01|03|05|07|08|10|12)-(0[1-9]|[12]\d|3[01])$
                                - pattern: ^(19|20)\d\d-(04|06|09|11)-(0[1-9]|[12]\d|30)$
                                - pattern: ^(19|20)\d\d-02-(0[1-9]|1\d|2[0-8])$|^(19|20)([02468][048]|[13579][26])-02-29$
                            country:
                              type: string
                              enum:
                                - USA
                            currency:
                              type: string
                              enum:
                                - USD
                            address:
                              $ref: '#/components/schemas/beneficiary_address'
                            phone_number:
                              type: string
                              pattern: ^\+[1-9]\d{1,14}$
                            label:
                              type: string
                        individual_beneficiary_international:
                          type: object
                          required:
                            - external_id
                            - type
                            - first_name
                            - last_name
                            - country
                            - currency
                            - legal_type
                          properties:
                            external_id:
                              type: string
                              minLength: 1
                              maxLength: 128
                            type:
                              type: string
                              enum:
                                - INTERNATIONAL
                            legal_type:
                              type: string
                              enum:
                                - INDIVIDUAL
                            first_name:
                              type: string
                              minLength: 1
                              maxLength: 40
                            middle_name:
                              type: string
                              maxLength: 40
                            second_last_name:
                              type: string
                              maxLength: 40
                            last_name:
                              type: string
                              minLength: 1
                              maxLength: 40
                            date_of_birth:
                              type: string
                              oneOf:
                                - pattern: ^(19|20)\d\d-(01|03|05|07|08|10|12)-(0[1-9]|[12]\d|3[01])$
                                - pattern: ^(19|20)\d\d-(04|06|09|11)-(0[1-9]|[12]\d|30)$
                                - pattern: ^(19|20)\d\d-02-(0[1-9]|1\d|2[0-8])$|^(19|20)([02468][048]|[13579][26])-02-29$
                            country:
                              type: string
                              enum:
                                - MEX
                            currency:
                              type: string
                              enum:
                                - MXN
                            address:
                              $ref: '#/components/schemas/beneficiary_address'
                            phone_number:
                              type: string
                              pattern: ^\+[1-9]\d{1,14}$
                            label:
                              type: string
                        business_beneficiary:
                          type: object
                          required:
                            - external_id
                            - type
                            - business_name
                            - country
                            - currency
                            - legal_type
                          properties:
                            external_id:
                              type: string
                              minLength: 1
                              maxLength: 128
                            business_name:
                              type: string
                              minLength: 1
                              maxLength: 40
                            type:
                              type: string
                              enum:
                                - LOCAL
                            legal_type:
                              type: string
                              enum:
                                - BUSINESS
                            country:
                              type: string
                              enum:
                                - USA
                            currency:
                              type: string
                              enum:
                                - USD
                            address:
                              $ref: '#/components/schemas/beneficiary_address'
                      oneOf:
                        - $ref: '#/components/schemas/individual_beneficiary_local'
                        - $ref: '#/components/schemas/individual_beneficiary_international'
                        - $ref: '#/components/schemas/business_beneficiary'
                    payout_method:
                      definitions:
                        details_bank:
                          type: object
                          required:
                            - bank_account_details
                          properties:
                            bank_account_details:
                              type: object
                              required:
                                - clabe_details
                              properties:
                                clabe_details:
                                  type: object
                                  required:
                                    - bic_code
                                    - clabe_number
                                  properties:
                                    bic_code:
                                      type: string
                                      pattern: ^[A-Z]{6}[A-Z0-9]{2}([A-Z0-9]{3})?$
                                    clabe_number:
                                      type: string
                                      pattern: ^\d{18}$
                        details_cash_pickup:
                          type: object
                          required:
                            - cash_pickup_location
                          properties:
                            cash_pickup_location:
                              type: object
                              required:
                                - cash_pickup_location_uuid
                              properties:
                                cash_pickup_location_uuid:
                                  type: string
                                  pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
                        details_electronic_wallet:
                          type: object
                          required:
                            - electronic_wallet
                          properties:
                            electronic_wallet:
                              type: object
                              oneOf:
                                - required:
                                    - phone_number
                                - required:
                                    - email_address
                              properties:
                                phone_number:
                                  type: string
                                  pattern: ^\+[1-9]\d{1,14}$
                                email_address:
                                  type: string
                                  pattern: ^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$
                        details_address:
                          type: object
                          required:
                            - address
                          properties:
                            address:
                              type: object
                              required:
                                - city
                              properties:
                                line1:
                                  type: string
                                  pattern: ^.{2,128}$
                                line2:
                                  type: string
                                  pattern: ^.{2,128}$
                                postal_code:
                                  type: string
                                  pattern: ^.{5,9}$
                                city:
                                  type: string
                                  pattern: ^.{2,128}$
                                state:
                                  type: string
                                  pattern: ^[A-Z]{2,4}$
                                country:
                                  type: string
                                  enum:
                                    - MEX
                        details_card:
                          type: object
                          required:
                            - card
                          properties:
                            card:
                              type: object
                              required:
                                - pan
                              properties:
                                pan:
                                  type: string
                                  pattern: ^[0-9]{8,19}$
                      type: object
                      required:
                        - external_id
                        - primary
                        - payout_method_details
                      properties:
                        external_id:
                          type: string
                          minLength: 1
                          maxLength: 255
                        primary:
                          type: boolean
                        country:
                          type: string
                          enum:
                            - MEX
                        currency:
                          type: string
                          enum:
                            - MXN
                        label:
                          type: string
                          maxLength: 255
                        payout_method_details:
                          oneOf:
                            - $ref: '#/components/schemas/details_bank'
                            - $ref: '#/components/schemas/details_cash_pickup'
                            - $ref: '#/components/schemas/details_electronic_wallet'
                            - $ref: '#/components/schemas/details_address'
                            - $ref: '#/components/schemas/details_card'
                    quote:
                      definitions:
                        origin_currency_quote:
                          type: object
                          required:
                            - amount
                            - beneficiary_uuid
                            - amount_currency
                          properties:
                            amount:
                              type: integer
                              minimum: 100
                            beneficiary_uuid:
                              type: string
                              pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
                            payout_method_uuid:
                              type: string
                              pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
                            amount_currency:
                              type: string
                              enum:
                                - ORIGIN_CURRENCY
                            exchange_rate:
                              type: string
                              pattern: ^\d\.\d{2,4}$
                            exchange_rate_markup:
                              type: number
                              minimum: 0
                              maximum: 100
                            service_fees:
                              type: array
                              items:
                                type: object
                                required:
                                  - description
                                  - calc_type
                                  - category
                                properties:
                                  external_id:
                                    type: string
                                  description:
                                    type: string
                                    maxLength: 255
                                  calc_type:
                                    type: string
                                    enum:
                                      - UPCHARGE
                                  category:
                                    type: object
                                    required:
                                      - transaction_fee
                                    properties:
                                      transaction_fee:
                                        type: object
                                        required:
                                          - value
                                        properties:
                                          value:
                                            type: object
                                            oneOf:
                                              - required:
                                                  - amount
                                              - required:
                                                  - percent
                                            properties:
                                              amount:
                                                type: integer
                                                minimum: 1
                                              percent:
                                                type: number
                                                minimum: 0
                                                maximum: 100
                                              cap:
                                                type: integer
                                                minimum: 1
                                                maximum: 99999999
                        destination_currency_quote:
                          type: object
                          required:
                            - amount
                            - beneficiary_uuid
                            - amount_currency
                          properties:
                            amount:
                              type: integer
                              minimum: 2000
                            beneficiary_uuid:
                              type: string
                              pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
                            payout_method_uuid:
                              type: string
                              pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
                            amount_currency:
                              type: string
                              enum:
                                - DESTINATION_CURRENCY
                            exchange_rate:
                              type: string
                              pattern: ^\d\.\d{2,4}$
                            exchange_rate_markup:
                              type: number
                              minimum: 0
                              maximum: 100
                            service_fees:
                              type: array
                              items:
                                type: object
                                required:
                                  - description
                                  - calc_type
                                  - category
                                properties:
                                  external_id:
                                    type: string
                                  description:
                                    type: string
                                    maxLength: 255
                                  calc_type:
                                    type: string
                                    enum:
                                      - UPCHARGE
                                  category:
                                    type: object
                                    required:
                                      - transaction_fee
                                    properties:
                                      transaction_fee:
                                        type: object
                                        required:
                                          - value
                                        properties:
                                          value:
                                            type: object
                                            oneOf:
                                              - required:
                                                  - amount
                                              - required:
                                                  - percent
                                            properties:
                                              amount:
                                                type: integer
                                                minimum: 1
                                              percent:
                                                type: number
                                                minimum: 0
                                                maximum: 100
                                              cap:
                                                type: integer
                                                minimum: 1
                                                maximum: 99999999
                      oneOf:
                        - $ref: '#/components/schemas/destination_currency_quote'
                        - $ref: '#/components/schemas/origin_currency_quote'
                    transaction:
                      type: object
                      properties:
                        quote_uuid:
                          type: string
                          pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
                        external_id:
                          type: string
                          minLength: 1
                          maxLength: 255
                        payment_method_uuid:
                          type: string
                          pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
                        description:
                          type: string
                          minLength: 1
                          maxLength: 255
                      required:
                        - quote_uuid
        '400':
          $ref: '#/components/responses/400-Error'
        '401':
          $ref: '#/components/responses/401-Error'
        '403':
          $ref: '#/components/responses/403-Error'
        '404':
          $ref: '#/components/responses/404-Error'
      operationId: fx-field-validations-get
      tags:
        - Global payments
    parameters: []
components:
  schemas:
    beneficiary_address:
      type: object
      properties:
        line_1:
          type: string
          pattern: ^.{2,128}$
        line_2:
          type: string
          pattern: ^.{1,128}$
        postal_code:
          type: string
          pattern: ^.{5,9}$
        city:
          type: string
          pattern: ^.{2,128}$
        state:
          type: string
          pattern: ^[A-Z]{2,4}$
        country:
          type: string
          enum:
            - MEX
    individual_beneficiary_local:
      type: object
      required:
        - external_id
        - type
        - first_name
        - last_name
        - country
        - currency
        - legal_type
      properties:
        external_id:
          type: string
          minLength: 1
          maxLength: 128
        type:
          type: string
          enum:
            - LOCAL
        legal_type:
          type: string
          enum:
            - INDIVIDUAL
        first_name:
          type: string
          minLength: 1
          maxLength: 40
        middle_name:
          type: string
          maxLength: 40
        second_last_name:
          type: string
          maxLength: 40
        last_name:
          type: string
          minLength: 1
          maxLength: 40
        date_of_birth:
          type: string
          oneOf:
            - pattern: ^(19|20)\d\d-(01|03|05|07|08|10|12)-(0[1-9]|[12]\d|3[01])$
            - pattern: ^(19|20)\d\d-(04|06|09|11)-(0[1-9]|[12]\d|30)$
            - pattern: ^(19|20)\d\d-02-(0[1-9]|1\d|2[0-8])$|^(19|20)([02468][048]|[13579][26])-02-29$
        country:
          type: string
          enum:
            - USA
        currency:
          type: string
          enum:
            - USD
        address:
          $ref: '#/components/schemas/beneficiary_address'
        phone_number:
          type: string
          pattern: ^\+[1-9]\d{1,14}$
        label:
          type: string
    individual_beneficiary_international:
      type: object
      required:
        - external_id
        - type
        - first_name
        - last_name
        - country
        - currency
        - legal_type
      properties:
        external_id:
          type: string
          minLength: 1
          maxLength: 128
        type:
          type: string
          enum:
            - INTERNATIONAL
        legal_type:
          type: string
          enum:
            - INDIVIDUAL
        first_name:
          type: string
          minLength: 1
          maxLength: 40
        middle_name:
          type: string
          maxLength: 40
        second_last_name:
          type: string
          maxLength: 40
        last_name:
          type: string
          minLength: 1
          maxLength: 40
        date_of_birth:
          type: string
          oneOf:
            - pattern: ^(19|20)\d\d-(01|03|05|07|08|10|12)-(0[1-9]|[12]\d|3[01])$
            - pattern: ^(19|20)\d\d-(04|06|09|11)-(0[1-9]|[12]\d|30)$
            - pattern: ^(19|20)\d\d-02-(0[1-9]|1\d|2[0-8])$|^(19|20)([02468][048]|[13579][26])-02-29$
        country:
          type: string
          enum:
            - MEX
        currency:
          type: string
          enum:
            - MXN
        address:
          $ref: '#/components/schemas/beneficiary_address'
        phone_number:
          type: string
          pattern: ^\+[1-9]\d{1,14}$
        label:
          type: string
    business_beneficiary:
      type: object
      required:
        - external_id
        - type
        - business_name
        - country
        - currency
        - legal_type
      properties:
        external_id:
          type: string
          minLength: 1
          maxLength: 128
        business_name:
          type: string
          minLength: 1
          maxLength: 40
        type:
          type: string
          enum:
            - LOCAL
        legal_type:
          type: string
          enum:
            - BUSINESS
        country:
          type: string
          enum:
            - USA
        currency:
          type: string
          enum:
            - USD
        address:
          $ref: '#/components/schemas/beneficiary_address'
    details_bank:
      type: object
      required:
        - bank_account_details
      properties:
        bank_account_details:
          type: object
          required:
            - clabe_details
          properties:
            clabe_details:
              type: object
              required:
                - bic_code
                - clabe_number
              properties:
                bic_code:
                  type: string
                  pattern: ^[A-Z]{6}[A-Z0-9]{2}([A-Z0-9]{3})?$
                clabe_number:
                  type: string
                  pattern: ^\d{18}$
    details_cash_pickup:
      type: object
      required:
        - cash_pickup_location
      properties:
        cash_pickup_location:
          type: object
          required:
            - cash_pickup_location_uuid
          properties:
            cash_pickup_location_uuid:
              type: string
              pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
    details_electronic_wallet:
      type: object
      required:
        - electronic_wallet
      properties:
        electronic_wallet:
          type: object
          oneOf:
            - required:
                - phone_number
            - required:
                - email_address
          properties:
            phone_number:
              type: string
              pattern: ^\+[1-9]\d{1,14}$
            email_address:
              type: string
              pattern: ^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$
    details_address:
      type: object
      required:
        - address
      properties:
        address:
          type: object
          required:
            - city
          properties:
            line1:
              type: string
              pattern: ^.{2,128}$
            line2:
              type: string
              pattern: ^.{2,128}$
            postal_code:
              type: string
              pattern: ^.{5,9}$
            city:
              type: string
              pattern: ^.{2,128}$
            state:
              type: string
              pattern: ^[A-Z]{2,4}$
            country:
              type: string
              enum:
                - MEX
    details_card:
      type: object
      required:
        - card
      properties:
        card:
          type: object
          required:
            - pan
          properties:
            pan:
              type: string
              pattern: ^[0-9]{8,19}$
    origin_currency_quote:
      type: object
      required:
        - amount
        - beneficiary_uuid
        - amount_currency
      properties:
        amount:
          type: integer
          minimum: 100
        beneficiary_uuid:
          type: string
          pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
        payout_method_uuid:
          type: string
          pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
        amount_currency:
          type: string
          enum:
            - ORIGIN_CURRENCY
        exchange_rate:
          type: string
          pattern: ^\d\.\d{2,4}$
        exchange_rate_markup:
          type: number
          minimum: 0
          maximum: 100
        service_fees:
          type: array
          items:
            type: object
            required:
              - description
              - calc_type
              - category
            properties:
              external_id:
                type: string
              description:
                type: string
                maxLength: 255
              calc_type:
                type: string
                enum:
                  - UPCHARGE
              category:
                type: object
                required:
                  - transaction_fee
                properties:
                  transaction_fee:
                    type: object
                    required:
                      - value
                    properties:
                      value:
                        type: object
                        oneOf:
                          - required:
                              - amount
                          - required:
                              - percent
                        properties:
                          amount:
                            type: integer
                            minimum: 1
                          percent:
                            type: number
                            minimum: 0
                            maximum: 100
                          cap:
                            type: integer
                            minimum: 1
                            maximum: 99999999
    destination_currency_quote:
      type: object
      required:
        - amount
        - beneficiary_uuid
        - amount_currency
      properties:
        amount:
          type: integer
          minimum: 2000
        beneficiary_uuid:
          type: string
          pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
        payout_method_uuid:
          type: string
          pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
        amount_currency:
          type: string
          enum:
            - DESTINATION_CURRENCY
        exchange_rate:
          type: string
          pattern: ^\d\.\d{2,4}$
        exchange_rate_markup:
          type: number
          minimum: 0
          maximum: 100
        service_fees:
          type: array
          items:
            type: object
            required:
              - description
              - calc_type
              - category
            properties:
              external_id:
                type: string
              description:
                type: string
                maxLength: 255
              calc_type:
                type: string
                enum:
                  - UPCHARGE
              category:
                type: object
                required:
                  - transaction_fee
                properties:
                  transaction_fee:
                    type: object
                    required:
                      - value
                    properties:
                      value:
                        type: object
                        oneOf:
                          - required:
                              - amount
                          - required:
                              - percent
                        properties:
                          amount:
                            type: integer
                            minimum: 1
                          percent:
                            type: number
                            minimum: 0
                            maximum: 100
                          cap:
                            type: integer
                            minimum: 1
                            maximum: 99999999
    account-response:
      title: Account Response
      type: object
      description: Details of an account entity in Alviere's systems. An account can either represent a `CONSUMER`, `BUSINESS` or `STAKEHOLDER` in the system.
      x-internal: false
      required:
        - account_uuid
        - type
        - status
        - external_id
        - created_at
        - updated_at
      properties:
        account_uuid:
          type: string
          description: The unique id of the account within the Alviere platform.
          format: uuid
        type:
          type: string
          description: The type of account
          enum:
            - CONSUMER
            - BUSINESS
            - STAKEHOLDER
            - CARDHOLDER
        status:
          type: string
          description: The user account current status
          example: CREATED
          enum:
            - CREATED
            - ACTIVE
            - INACTIVE
            - DELETED
            - PROCESSING
            - PENDING_USER
            - MANUAL_REVIEW
            - REJECTED
        profile:
          type: string
          description: The current profile of the account
        profile_request:
          $ref: '#/components/schemas/profile-request'
        stage:
          type: string
          description: |
            The current stage in the verification process.

            Note: This field will be empty if the status of the user is not `PROCESSING` or `PENDING_USER` or `MANUAL_REVIEW`
            and might also be empty when status is `REJECTED`
          format: string
          example: FRAUD
          enum:
            - FRAUD
            - ADDRESS
            - IDENTITY
            - IDENTITY_OPTIONAL_SSN
            - DOCUMENTS_OPTIONAL_FULL_SSN
            - SANCTIONS
            - DOCUMENTS
            - PREVALIDATION
        status_reason:
          type: string
          description: The reason why the account is in a particular status
          format: string
          example: INVALID_DOB
          enum:
            - INVALID_NAME
            - INVALID_DOB
            - INVALID_ADDRESS
            - INVALID_LAST_4_SSN
            - REQUIRES_FULL_SSN
            - REQUIRES_LAST_4_SSN
            - REQUIRES_PHOTO_ID
            - REQUIRES_DOSSIER
            - EXPIRED_DOCUMENT
            - INVALID_SSN
            - REQUIRES_PASSPORT_RESUBMISSION
            - REQUIRES_ID_DOCUMENT_FRONT_RESUBMISSION
            - REQUIRES_ID_DOCUMENT_BACK_RESUBMISSION
            - REQUIRES_DRIVERS_LICENSE_FRONT_RESUBMISSION
            - REQUIRES_DRIVERS_LICENSE_BACK_RESUBMISSION
            - REQUIRES_PROOF_OF_ADDRESS_RESUBMISSION
            - REQUIRES_PROOF_OF_FUNDS_RESUBMISSION
            - REQUIRES_MC_DOCUMENT_FRONT_RESUBMISSION
            - REQUIRES_MC_DOCUMENT_BACK_RESUBMISSION
            - REQUIRES_CERTIFICATE_OF_INCORPORATION_RESUBMISSION
            - REQUIRES_SELFIE_RESUBMISSION
            - UNREJECT
            - TRANSACTION_MANUAL_REVIEW
            - TRANSACTION_RETURNED
            - TRANSACTION_DENY
            - CHECK_RETURNED
            - STAGE_VALIDATION
        status_reason_description:
          type: string
          description: Additional information about the status reason
          example: INVALID_DOB
        external_id:
          type: string
          description: The external account id of your platform
        information:
          $ref: '#/components/schemas/account-information-response'
        metadata:
          description: Allows for any number of custom metadata keys and values to be stored with a given account
          type: object
        created_at:
          type: string
          description: The date this account was created
        updated_at:
          type: string
          description: The date this account was last updated
    transaction:
      type: object
      description: Details of a transaction entity in Alviere's systems. This entity represents a financial transaction between wallets and/or vaults.
      x-internal: false
      title: Transaction
      required:
        - transaction_uuid
        - wallet_uuid
        - account_uuid
        - external_id
        - transaction_type
        - status
        - description
        - amount
        - currency
        - refunded
        - created_at
        - updated_at
      properties:
        transaction_uuid:
          description: This field is Alviere's internal unique transaction identifier
          type: string
          format: uuid
        parent_transaction_uuid:
          title: Parent transaction
          description: |
            This field is Alviere's internal unique transaction identifier for the parent transaction of the current transaction.
            In most cases, this indicates that the actual transaction was a refund of the parent.
            Please note that this field will only be present, when appropriate.
          type: string
          format: uuid
        wallet_uuid:
          type: string
          description: UUID of the wallet to which this transaction belongs
          format: uuid
        account_uuid:
          type: string
          description: UUID of the account to which this transaction belongs
        external_id:
          type: string
          description: |
            The ID of this transaction in your own platform. This ID can
            be used to identify the transaction as well as protect our API against duplicate transactions.

            NOTE: This field MUST be unique. Any collision on `external_id` will fail with a HTTP 409.
        beneficiary_uuid:
          type: string
          description: If the transaction is related to the transfer of funds to a Beneficiary, this field will contain the UUID of the Beneficiary
          format: uuid
        payout_method_uuid:
          type: string
          description: If the transaction is related to the transfer of funds to a Beneficiary, this field will contain the UUID of applicable Payout Method
        receipt_uuid:
          description: Receipt identifier for a given transaction
          type: string
          format: uuid
        transaction_type:
          $ref: '#/components/schemas/transaction-type'
        status:
          $ref: '#/components/schemas/transaction-status'
        status_reason:
          type: string
          example: AUTH_BACKOUT
          description: The reason why a transaction might be in a particular status
        description:
          type: string
          description: |
            The description can be any descriptive text provided by the provider accompany the transaction.
        amount:
          title: Transaction amount
          description: |
            The transaction amount in the currency of the transaction, defined in cents. 
            e.g. 1 USD will be represented as `amount: 100`
          type: integer
          example: 10032
          minimum: -99999999
          maximum: 99999999
        currency:
          description: The currency code in ISO-4217 format.
          type: string
          example: USD
        type_details:
          type: object
          description: Additional details applying to specific transaction types
          properties:
            global_payments_details:
              type: object
              description: If this transaction is related to an `INTERNATIONAL_TRANSFER`, this structure will show additional details
              required:
                - exchange_rate
              properties:
                exchange_rate:
                  type: string
                  description: Exchange rate applied to this international transaction
                  example: '1.52233'
                ready_for_collection:
                  type: string
                  format: date-time
                  description: Time the funds are available to be collected at
                collected_at:
                  type: string
                  format: date-time
                  description: Time the funds were collected by the beneficiary
                transaction_reference:
                  type: string
                  description: A reference for the Beneficiary to provide to the cash pickup location on pickup
                transaction_purpose:
                  type: string
                  description: Purpose of the transaction
                source_of_funds:
                  type: string
                  description: Source of funds for the transaction
            issued_card_details:
              type: object
              description: If this transation is related to an issued card, this structure will show additional details
              required:
                - issued_card_uuid
              properties:
                issued_card_uuid:
                  type: string
                  format: uuid
                  description: The uuid of the issued card that was used to fund this transaction
                merchant_name:
                  type: string
                  example: STARBUCKS
                  description: Merchant where the transaction ocurred
                merchant_id:
                  type: string
                  description: Id of the merchant where the transaction ocurred
                  example: '123456'
                merchant_category_code:
                  type: string
                  description: Four-digit number used to classify individual purchases according the type of merchant where they were made
                terminal_id:
                  type: string
                  example: '00010102'
                  description: The ID for the device that acquired the card information.
                network:
                  type: string
                  description: The network where the transaction was processed
                  enum:
                    - MASTERCARD
                    - MAESTRO
                    - VISA
                    - STAR
                    - MONEYPASS
                    - ALLPOINT
                    - CIRRUS
                    - DISCOVER
                    - PRESTO
                    - PULSE
                  example: VISA
                subnetwork:
                  type: string
                  description: The subnetwork where the transaction was processed
                  enum:
                    - BANKNET
                    - DEBIT_SWITCH
                    - VISA
                    - INTERLINK
                    - STAR
                    - MONEYPASS
                    - ALLPOINT
                    - DISCOVER
                    - PRESTO
                    - PULSE
                    - PLUS
                    - READYLINK
                  example: INTERLINK
                is_international:
                  type: boolean
                  description: If ``TRUE`` the transaction is international
                dispute_details:
                  type: object
                  description: Dispute information for card transactions
                  properties:
                    status:
                      type: string
                      enum:
                        - OPEN
                        - PENDING
                        - WON
                        - LOST
                        - CLOSED
                      description: High-level dispute status
                    status_reason:
                      type: string
                      enum:
                        - FILED
                        - AWAITING_DOCUMENTATION
                        - UNDER_REVIEW
                        - MERCHANT_RESPONSE_PENDING
                        - ESCALATED
                        - FINAL_REVIEW
                        - RESOLVED_IN_FAVOR
                        - RESOLVED_AGAINST
                        - ADMINISTRATIVE_CLOSURE
                      description: Current lifecycle stage
                    dispute_reason:
                      type: string
                      enum:
                        - FRAUD
                        - AUTHORIZATION_ISSUE
                        - MERCHANT_ERROR
                        - SERVICE_ISSUE
                        - PROCESSING_ERROR
                        - OTHER
                      description: Why the dispute was filed
            payments_details:
              type: object
              description: If this transaction is related to a payment processing transaction, this structure may show additional details
              properties:
                trace_number:
                  type: string
                  description: Trace number associated with the payment transaction
                company_identification:
                  type: string
                  description: Identification of the originator assigned by the ODFI
                company_name:
                  type: string
                  description: Name of the Originator known and recognized by the receiver of the transaction
                cash_loading:
                  type: object
                  required:
                    - cash_loading_location
                  properties:
                    cash_loading_location:
                      type: object
                      description: Store-specific data
                      required:
                        - store_network_id
                        - terminal_id
                        - store_name
                      properties:
                        store_network_id:
                          type: string
                          description: ID of the store where the transaction was created
                          example: '123345'
                        terminal_id:
                          type: string
                          description: ID of the terminal where the transaction was processed
                          example: '25476001'
                        store_name:
                          type: string
                          description: Name of the store
                        barcode_data:
                          type: string
                          description: Barcode data associated with the transaction
                          example: "123456789012"
                card_processing:
                  type: object
                  description: Additional details for card processing related tr
                  required:
                    - auth_type
                  properties:
                    auth_type:
                      description: Authorization type
                      enum:
                        - AUTH
                        - AUTHCAP
                    3ds_details:
                      type: object
                      description: Details related to 3D Secure
                      properties:
                        redirect_url:
                          type: string
                          description: URL to redirect end consumer to in order to authorize transaction with card issuer
                        3ds_result:
                          type: string
                          description: Results of the 3-D Secure process
                        enrolled:
                          type: boolean
                          description: Whether the card is enrolled in 3-D Secure in their issuer bank
                        3ds_preference:
                          description: The preferred type of 3-D Secure flow for the transaction
                          enum:
                            - ENABLED
                            - DISABLED
                            - DOWNGRADE_ALLOWED
                        3ds_challenge_indicator:
                          enum:
                            - NO_CHALLENGE_REQUESTED
                            - CHALLENGE_REQUESTED
                            - CHALLENGE_REQUESTED_MANDATE
                            - NO_PREFERENCE
                          description: Whether an indicator was sent to the provider about the 3DS challenge preference
                    merchant_details:
                      $ref: '#/components/schemas/merchant-details'
        funds_source_type:
          enum:
            - BANK_PM
            - CARD_PM
            - CASH
            - WALLET
          description: Source of funds for transaction funded via a passthrough transaction
        funds_source:
          oneOf:
            - title: Bank account (DDA)
              properties:
                origin_bank:
                  type: string
                  description: The name of the origin bank for this bank credit.
                  example: CHASE BANK
                is_payroll:
                  type: boolean
                  description: If the bank account transaction relates to payroll, this propoerty will be true.
                payroll_date:
                  type: string
                  format: date
                  description: If transaction corresponds to a payroll, this is expected settlement date. If early pay is enabled for this wallet, the transaction could be generally settled up to two days in advance of this date
                account_verification:
                  type: boolean
                  description: Whether the transaction purpose was to verify the validity of the account
            - title: Payment method
              properties:
                payment_method_uuid:
                  type: string
                  description: When the transaction was performed using a payment method linked to this account, this property will hold the uuid of payment method token (eg. a debit card, a bank account, etc).
                settled_at:
                  type: string
                  description: The date the child passthrough transaction settled
                  format: date-time
            - title: Check
              properties:
                check_uuid:
                  type: string
                  description: The uuid of the deposited check.
                  format: uuid
                check_released_amount:
                  type: integer
                  example: 10032
                  minimum: -99999999
                  maximum: 99999999
                  description: |-
                    For a `CHECK_DEPOSIT` transaction, the amount that has been released, defined in cents. 
                    e.g. 1 USD will be represented as `amount: 100`
                funding_instrument_details:
                  $ref: '#/components/schemas/funding-instrument-response-check'
            - title: Payment Instrument
              properties:
                payment_instrument_uuid:
                  type: string
                  description: Unique identifier of the payment instrument
          type: object
        refunded:
          description: |
            This flag indicates if this transaction has been refunded.
          type: boolean
          default: false
        refund_reason:
          type: string
          description: If `refunded` is `TRUE`, reason why the transaction was refunded
        disputed:
          type: boolean
          description: For `PAYMENT` transactions, if `TRUE` a chargeback has been received for this transaction
        created_at:
          type: string
          format: date-time
          description: The date the transaction was created
        settled_at:
          type: string
          format: date-time
          description: The date the transaction funds settled
        updated_at:
          type: string
          format: date-time
          description: The date the transaction was last updated
        transaction_options:
          type: object
          properties:
            payment_options:
              type: object
              properties:
                ACH_type:
                  type: string
                  enum:
                    - SAME_DAY
                    - NEXT_DAY
                prefund:
                  type: string
                  description: If `FALSE`, prefunding has been disabled for this transaction. If `TRUE`, prefunding has been enabled for this transaction. If not returned, default program configuration applies.
        release_details:
          type: object
          description: Details related to early releases of funds. Only applicable for transactions that support this feature
          properties:
            releasable_amount:
              type: integer
              description: Total amount that can be released early for a transaction. Number includes existing releases and fees
            releases:
              type: array
              items:
                $ref: '#/components/schemas/release'
        metadata:
          type: object
          description: Allows for any number of custom metadata keys and values to be stored with a given transaction
    activity-response:
      type: object
      properties:
        activity_uuid:
          type: string
          format: uuid
          description: Unique identifier for the activity
        wallet_uuid:
          type: string
          format: uuid
          description: Associated wallet UUID
        account_uuid:
          type: string
          format: uuid
          description: Associated account UUID
        entity_uuid:
          type: string
          format: uuid
          description: Associated entity UUID
        entity_type:
          type: string
          enum:
            - ISSUED_CARD
          description: Type of the associated entity
        type:
          type: string
          enum:
            - DENIED_AUTHORIZATION
            - CARD_REPLACEMENT
          description: Type of activity event
        type_details:
          type: object
          oneOf:
            - title: Denied Authorization
              type: object
              properties:
                denied_authorization_details:
                  $ref: '#/components/schemas/denied-authorization-details'
            - title: Card Replacement
              type: object
              properties:
                card_replacement_details:
                  $ref: '#/components/schemas/card-replacement-details'
        created_at:
          type: string
          format: date-time
          description: Timestamp when the activity was created
          example: '2021-06-17T11:02:08.143Z'
      required:
        - activity_uuid
        - type
        - created_at
    denied-authorization-details:
      type: object
      properties:
        card_uuid:
          type: string
          format: uuid
          description: UUID of the card that was denied authorization
        denied_reasons:
          type: array
          items:
            type: string
          description: List of reasons for authorization denial
        amount:
          type: number
          description: Transaction amount that was denied
        currency:
          type: string
          description: Currency of the denied transaction
        network:
          type: string
          description: Card network (e.g., Visa, Mastercard)
        subnetwork:
          type: string
          description: Card subnetwork details
        merchant_name:
          type: string
          description: Name of the merchant where transaction was attempted
        merchant_id:
          type: string
          description: Merchant identifier
        terminal_id:
          type: string
          description: Terminal identifier where transaction was attempted
        is_international:
          type: boolean
          description: Whether this was an international transaction
    card-replacement-details:
      type: object
      properties:
        card_uuid:
          type: string
          format: uuid
          description: UUID of the card being replaced
        reason:
          type: string
          description: Reason for card replacement
        replacement_card_uuid:
          type: string
          format: uuid
          description: UUID of the replacement card (only for replacement operation, not for reissue)
        waive_fees:
          type: boolean
          description: Whether fees are waived for this replacement
        reason_description:
          type: string
          description: Description of the card replacement reason if the actual reason is OTHER
        waive_fees_reason:
          type: string
          description: Reason for waiving fees
        waive_fees_description:
          type: string
          description: Detailed description for fee waiver
    service-fee-transaction:
      title: Service fee rule
      type: object
      description: Structure used to apply service fees to system events and transactions.
      x-internal: false
      required:
        - description
        - calc_type
        - category
      properties:
        external_id:
          type: string
          description: The unique identifier of the service fee transaction in your own system
        description:
          type: string
          description: |
            The description can be any descriptive text provided by the user to label the service fee transaction.
          minimum: 1
          maximum: 255
        calc_type:
          type: string
          description: |
            The calculation type in relation to the total transaction.

            * `UPCHARGE`: The service fee will be applied as an upcharge to the transaction. For example, if a customer is performing a cross-border transaction of $100 and there's a `PERCENT` service fee of 10%, the user account would be charged $110.
            * `DEDUCT`: The service fee will be applied as a deduction to the transaction amount. For example, if a customer is performing a withdraw transaction of $100 and there's a `PERCENT` service fee of 10%, the user would only receive $90 on their account.
          enum:
            - DEDUCT
            - UPCHARGE
        category:
          type: object
          required:
            - transaction_fee
          properties:
            transaction_fee:
              type: object
              required:
                - value
              properties:
                value:
                  oneOf:
                    - title: Amount
                      description: 'Use this service fee value type if you want a fixed amount service fee to be applied to the transaction, in cents (eg. `value: 1000`).'
                      required:
                        - amount
                      properties:
                        amount:
                          type: integer
                          description: The amount is the value associated with the service fee, in cents.
                    - title: Percent
                      description: |-
                        Use this service fee value type if you want a service fee percentage to be applied on the total amount of the transaction. For example, if the total amount is $100 and you want to apply a 10% fee, you should set the property to `value: 10`

                        Set the `cap` field if you want the percentage amount to be capped to a certain amount. For example, if the total amount is $1000 and you want to apply a 10% fee capped to $50, you should set the `value: 10` and `cap: 5000`
                      required:
                        - percent
                      properties:
                        percent:
                          type: number
                          description: The percent value to apply to the service fee transaction
                          minimum: 0
                          maximum: 100
                          format: float
                          example: 14.5
                          exclusiveMinimum: true
                        cap:
                          type: number
                          description: |-
                            The amount to cap the service fee in cents, e.g. If you want to debit 1 USD the value must be `value: 100` 

                            If `null` there's no cap for this service fee.
                          minimum: 1
                          maximum: 99999999
                          example: 100
                  type: object
    check:
      title: Check
      type: object
      description: Details of a check entity in Alviere's systems. This entity represents a check that was used to generate a check deposit transaction in the system.
      x-internal: false
      required:
        - check_uuid
        - transaction_uuid
        - wallet_uuid
        - external_id
        - check_number
        - currency
        - entered_amount
        - status
        - created_at
        - updated_at
      properties:
        check_uuid:
          description: The unique uuid of the transaction originated by this check deposit. This value is used to retrieve check data in the future.
          type: string
          format: uuid
        transaction_uuid:
          type: string
          format: uuid
          description: The uuid of the transaction tied to this check
        wallet_uuid:
          type: string
          format: uuid
          description: The uuid of the wallet where this check has been deposited
        external_id:
          description: The external id of this transaction, i.e. the transaction id in your external system.
          type: string
          example: 1AE1003EQ
        account_uuid:
          type: string
          description: Alviere's unique ID for the account that owns this check
        check_number:
          description: The number of the check that was uploaded
          type: string
          example: '123456789'
        currency:
          description: The currency code in ISO-4217 format.
          type: string
          example: USD
        entered_amount:
          type: integer
          description: |
            The original amount entered by the customer in the currency of the check, defined in cents. e.g. 1 USD will be represented as `amount: 100`
          example: 10032
        settled_amount:
          type: integer
          description: 'The final settled amount after the check has been approved, defined in cents. e.g. 1 USD will be represented as `amount: 100`'
          example: 10000
        front_image:
          type: string
          format: base64
          example: U3dhZ2dlciByb2Nrcw==...
          description: |
            The image of the front of the check, captured with Alviere's Mobile SDK. This field is only returned on responses from the `Get check`endpoint
        back_image:
          type: string
          format: base64
          example: U3dhZ2dlciByb2Nrcw==...
          description: |
            The image of the back of the check, captured with Alviere's Mobile SDK. This field is only returned on responses from the `Get check`endpoint
        status:
          type: string
          description: The status of the check entity
          enum:
            - CREATED
            - REJECTED
            - ERROR
            - PROCESSING
            - APPROVED
            - CLEARED
            - PREVERIFIED
            - CANCELED
        status_reason:
          type: string
          description: The reason why a check is in a specific status. Only applicable for checks in `ERROR` status
          enum:
            - AMOUNT
            - BACK_IMAGE
            - FRONT_IMAGE
            - FRONT_BACK_IMAGE
            - INVALID_DATA
            - INVALID_DOCUMENT
            - INTERNAL_DUPLICATE
            - EXTERNAL_DUPLICATE
            - SYSTEM
            - BLACKLIST
            - OTHER
        rejected_reasons:
          type: array
          description: Reasons why a check was rejected by a compliance agent. Only applicable for checks in `REJECTED` status
          items:
            type: string
        rejected_reasons_description:
          type: array
          description: If the Check was rejected via a manual process, this field will contain an explanation inserted by the Compliance agent
          items:
            type: string
        created_at:
          type: string
          description: The date the check was created
          format: date-time
        updated_at:
          type: string
          description: The date the check was last updated
          format: date-time
    address-response:
      title: Address Response
      type: object
      x-internal: false
      description: Details of an address entity in Alviere's systems. This entity represents a registered address of an account in the system.
      properties:
        address_uuid:
          type: string
          format: uuid
          description: Alviere's unique ID for the address
        external_id:
          type: string
          description: The unique identifier of the address in your own system
        account_uuid:
          type: string
          description: Alviere's unique ID for the account that owns this address
        primary:
          type: boolean
          description: This property determines whether this is the primary address to perform KYC/Identity management on. Only a primary address triggers address validation.
        label:
          type: string
          example: Home Address
        line_1:
          title: Address Line One
          description: Address line 1 (e.g., street, PO Box, or company name - NOTE that newline characters are not accepted)
          type: string
          example: 101 Avenue of the Americas
        line_2:
          title: Address Line Two
          description: Address line 2 (e.g., apartment, suite, unit, or building - NOTE that newline characters are not accepted)
          type: string
          example: Suite 936
        postal_code:
          title: Postal Code
          description: ZIP or postal code
          type: string
          example: '10013'
        city:
          title: City
          description: City, district, suburb, town, or village
          type: string
          example: New York
        state:
          title: State
          description: State, county, province, or region
          type: string
          example: NY
        country:
          title: Country
          description: Three-letter country code (ISO 3166-1 alpha-3).
          type: string
          example: USA
        created_at:
          type: string
          description: The date this address was created
        updated_at:
          type: string
          description: The date this address was last updated
      required:
        - address_uuid
        - external_id
        - primary
        - label
        - line_1
        - postal_code
        - city
        - country
        - created_at
        - updated_at
    dossier-response:
      title: Dossier
      type: object
      description: This entity contains dossier information attached to an account in the system. Dossiers are used to store documents that have been uploaded to an account.
      x-internal: false
      required:
        - dossier_uuid
        - account_uuid
        - primary
        - status
        - external_id
        - created_at
        - updated_at
        - documents
      properties:
        dossier_uuid:
          description: The `uuid` of the dossier.
          type: string
          format: uuid
        account_uuid:
          description: The `uuid` of the account this dossier belongs to.
          type: string
          format: uuid
        primary:
          description: Defines if this is the primary dossier of the account, indicating it contains the set of documents used for identity verification
          type: boolean
        status:
          description: The status of the dossier.
          type: string
          enum:
            - CREATED
            - PENDING
            - MANUAL_REVIEW
            - VERIFIED
            - EXPIRED
            - REJECTED
            - FAILED
            - DELETED
        status_reason:
          description: For any other status than `CREATED` or `DELETED` this property details the reason this dossier is in this status
          type: string
        status_reason_description:
          description: Additional clarification related to the status reason
          type: string
        external_id:
          description: The external_id of the dossier in your system.
          type: string
        country_of_issuance:
          type: string
          description: Three-letter country code (ISO 3166-1 alpha-3) for issuing country
        created_at:
          description: The date this dossier was created.
          type: string
          format: date
        updated_at:
          description: The date this dossier was last updated.
          type: string
          format: date
        documents:
          description: The actual documents uploaded as part of this dossier.
          type: array
          items:
            type: object
            description: This structure contains document information
            required:
              - type
            properties:
              type:
                type: string
                description: The type of document.
                enum:
                  - PASSPORT
                  - ID_DOCUMENT_FRONT
                  - ID_DOCUMENT_BACK
                  - DRIVER_LICENSE_FRONT
                  - DRIVER_LICENSE_BACK
                  - SELFIE
                  - PROOF_OF_ADDRESS
                  - PROOF_OF_FUNDS
                  - MC_DOCUMENT_FRONT
                  - MC_DOCUMENT_BACK
                  - INE_FRONT
                  - INE_BACK
                  - ARTICLES_OF_INCORPORATION
                  - CERTIFICATE_OF_GOOD_STANDING
                  - ORG_CHART
                  - UBO_FORM
                  - REG_GG_ATTESTATION
              file:
                type: string
                description: The file in base64 format. This field is only returned on responses from the `Get dossier` endpoint.
                format: base64
                example: U3dhZ2dlciByb2Nrcw==...
              barcode_data:
                type: string
                format: base64
                description: Barcode data in base64. This field is only returned on responses from the `Get dossier` endpoint.
                example: dGVzdHRlc2V0ZXN0c2V0c2V0ZXN0TBD=
              fail_reasons:
                type: array
                description: If the document failed to be verified, this field will contain the reason/s why
                items:
                  type: string
              extracted_data:
                type: object
                description: Data extracted from this document via OCR
                properties:
                  given_name:
                    type: string
                    description: First and middle names (if applicable)
                  last_name:
                    type: string
                    description: First and second last names (if applicable)
                  date_of_birth:
                    type: string
                    description: Date of birth
                  address:
                    type: object
                    description: Extracted address
                    properties:
                      line_1:
                        type: string
                        description: Line 1 address data
                      city:
                        type: string
                        description: City data
                      state:
                        type: string
                        description: State data
                      country:
                        type: string
                        description: Country data
                      postal_code:
                        type: string
                        description: Postal code data
    card-pm-response:
      title: Card payment method
      type: object
      description: Details of an card payment method entity in Alviere's systems. This entity represents a card that has been attached to an account to be used as a payment method.
      x-internal: false
      required:
        - payment_method_uuid
        - external_id
        - brand
        - type
        - country
        - last_4
        - status
        - created_at
        - updated_at
      properties:
        payment_method_uuid:
          type: string
          format: uuid
          description: The unique token for this card. This is how you will identify this card in the future throughout the API
        external_id:
          type: string
          description: The unique identifier of the card in your own system
        account_uuid:
          type: string
          description: Alviere's unique ID for the account that owns this card payment method
        brand:
          type: string
          enum:
            - VISA
            - MASTERCARD
            - AMEX
            - DINERS
            - DISCOVER
            - JCB
            - UNIONPAY
            - PULSE
            - STAR
            - NYCE
            - ACCEL
            - CU24
            - CCPAY
            - UNKNOWN
        type:
          type: string
          enum:
            - CREDIT
            - DEBIT
            - PREPAID
            - UNKNOWN
          description: The type of card
        country:
          type: string
          description: The 3-letter code of the country of issuance of the card
          example: USA
        last_4:
          type: string
          description: The last 4 digits of the card
          example: '0000'
          pattern: ^[0-9]{4}$
        status:
          type: string
          description: The status of the card
          enum:
            - CREATED
            - ACTIVE
            - FAILED
            - EXPIRED
            - REJECTED
            - DELETED
            - PENDING
        status_reason:
          type: string
          description: The reason why the payment method is in a particular status
        flags:
          type: object
          description: Types of transactions supported by this card
          required:
            - load_supported
            - withdraw_supported
          properties:
            load_supported:
              type: boolean
              description: If the card supports debit athorizations, enabling them to be used to load funds into an account wallet
              default: false
            withdraw_supported:
              type: boolean
              description: If the card supports the push-to-debit transaction types, enabling them to be used to withdraw funds from an account wallet
              default: false
        3ds_options:
          type: object
          properties:
            3ds_preference:
              enum:
                - DISABLED
                - ENABLED
                - DOWNGRADE_ALLOWED
            3ds_challenge_indicator:
              enum:
                - NO_CHALLENGE_REQUESTED
                - CHALLENGE_REQUESTED
                - CHALLENGE_REQUESTED_MANDATE
                - NO_PREFERENCE
              description: Whether an indicator was sent to the provider about the 3DS challenge preference
            redirect_url:
              type: string
              description: URL to redirect end consumer to in order to authorize transaction with card issuer
            3ds_result:
              type: string
              description: Results of the 3-D Secure process
            enrolled:
              type: boolean
              description: Whether the card is enrolled in 3-D secure in their issuer bank
        metadata:
          type: object
          description: Allows for any number of custom metadata keys and values to be stored with a given entity
        created_at:
          type: string
          description: The date this card was created.
        updated_at:
          type: string
          description: The date this card was last updated.
    bank-account-pm-response:
      title: Bank account
      type: object
      description: Details of an bank account payment method entity in Alviere's systems. This entity represents a bank account that has been attached to an account to be used as a payment method.
      x-internal: false
      required:
        - payment_method_uuid
        - external_id
        - status
        - type
        - last_4
        - country
        - currency
        - is_plaid
        - flags
        - bank_account_details
        - created_at
        - updated_at
      properties:
        payment_method_uuid:
          type: string
          description: The unique token for this bank account. This is how you will identify this bank account in the future throughout the API
          format: uuid
        external_id:
          type: string
          description: The unique identifier of the bank account in your own system
        account_uuid:
          type: string
          description: Alviere's unique ID for the account that owns this bank payment method
        status:
          type: string
          description: The status of the bank account in the Alviere system
          enum:
            - CREATED
            - ACTIVE
            - PROCESSING
            - FAILED
            - DELETED
            - REJECTED
        status_reason:
          type: string
          description: The reason why the payment method is in a particular status
        type:
          type: string
          description: The type of bank account
          enum:
            - CHECKING
            - SAVING
            - GENERAL_LEDGER
            - LOAN
        last_4:
          type: string
          description: The last 4 digits of the bank account
        country:
          type: string
          description: Three-letter country code (ISO 3166-1 alpha-3) of the bank account
          example: USA
          pattern: ^[A-Z]{3}$
        currency:
          type: string
          description: The bank's currency code in ISO-4217 format
        is_plaid:
          type: boolean
          description: Specifies if the bank account has been added via Plaid
        flags:
          type: object
          description: Types of transactions supported by this bank account
          properties:
            load_supported:
              type: boolean
              description: If the bank account supports debit authorizations, enabling them to be used to load funds into an account wallet
            withdraw_supported:
              type: boolean
              description: If the bank account supports credit authorizations, enabling them to be used to withdraw funds from an account wallet
        bank_account_details:
          $ref: '#/components/schemas/bank-account-details-response'
        fail_reason:
          type: string
          description: Status fail reason
          enum:
            - CUSTOM
            - TRANSACTION_FAILED
            - NEEDS_UPDATE
            - ACCOUNT_MISMATCH
            - INVALID_BANK_TYPE
            - INVALID_PUBLIC_TOKEN
            - BANK_FAILED
        metadata:
          type: object
          description: Allows for any number of custom metadata keys and values to be stored with a given entity
        created_at:
          type: string
          description: The date the bank account was created in the system
          example: '2021-06-17T11:02:08.143Z'
        updated_at:
          type: string
          description: The date the bank account was last updated in the system
          example: '2021-08-02T05:32:11.345Z'
    wallet:
      title: Wallet
      type: object
      x-internal: false
      description: Details of a wallet entity in Alviere's systems. A wallet is the system representation of funds in a specific currency that belongs to an account.
      required:
        - wallet_uuid
        - external_id
        - type
        - status
        - currency
        - funds
        - created_at
        - updated_at
      properties:
        wallet_uuid:
          type: string
          description: The unique id of the wallet within the Alviere platform
          format: uuid
        external_id:
          type: string
          description: The external wallet id of your platform
        account_uuid:
          type: string
          description: Alviere's unique ID for the account that owns this wallet
        type:
          type: string
          description: The type of wallet
          enum:
            - CHECKING
            - PREPAID
            - PREPAID_NON_RELOADABLE
            - PASSTHROUGH
        status:
          type: string
          enum:
            - CREATED
            - ACTIVE
            - INACTIVE
            - DELETED
            - PROCESSING
            - PENDING_USER
            - MANUAL_REVIEW
            - REJECTED
          description: The wallet current status
        status_reason:
          type: string
          description: The reason why a wallet might be in a particular status
        currency:
          type: string
          description: The wallet's currency code in ISO-4217 format
          example: USD
        funds:
          $ref: '#/components/schemas/funds'
        label:
          type: string
          description: 'A user controlled label for the wallet '
        bank_account_details:
          $ref: '#/components/schemas/bank-account-details-request'
        spend_budgets:
          type: array
          items:
            $ref: '#/components/schemas/spend-budget-response'
        created_at:
          type: string
          description: The date the wallet was created in the system
          example: '2021-06-17T11:02:08.143Z'
        updated_at:
          type: string
          description: The date the wallet was last updated in the system
          example: '2021-06-18T12:04:10.125Z'
    beneficiary-response:
      title: Beneficiary
      type: object
      description: |
        Details of a beneficiary entity in Alviere's systems. This entity represents a representation of a bank account and individual who a transaction can be sent to.
      x-internal: false
      required:
        - beneficiary_uuid
        - external_id
        - type
        - legal_type
        - status
        - country
        - currency
        - created_at
        - updated_at
      properties:
        beneficiary_uuid:
          type: string
          description: The unique beneficiary identifier in Alviere's system
          format: uuid
        external_id:
          type: string
          description: |-
            The unique identifier of this beneficiary in your own system.

            Note: This is used for idempotency check
        account_uuid:
          type: string
          description: Alviere's unique ID for the account that owns this Beneficiary
        type:
          type: string
          enum:
            - LOCAL
            - INTERNATIONAL
          description: Whether the beneficiary can be used for local or international transactions
        legal_type:
          type: string
          description: Whether the beneficiary is an individual or a business
          enum:
            - INDIVIDUAL
            - BUSINESS
        status:
          type: string
          enum:
            - CREATED
            - ACTIVE
            - DELETED
            - PROCESSING
            - PENDING_USER
            - MANUAL_REVIEW
            - REJECTED
          description: The beneficiary status
        status_reason:
          type: string
          description: The reason why the beneficiary is in a particular status
          enum:
            - STAGE_VALIDATION
            - INVALID_NAME
            - SANCTIONED_USER
            - CUSTOM
        country:
          type: string
          description: Three-letter country code (ISO 3166-1 alpha-3)
          example: USA
          pattern: ^[A-Z]{3}$
        first_name:
          type: string
          description: The beneficiary's first name
          example: John
        middle_name:
          type: string
          description: ' The beneficiary''s middle name'
          example: Mark
        last_name:
          type: string
          description: The beneficiary's last name
          example: Doe
        second_last_name:
          type: string
          description: The beneficiary's second last name (if applicable)
          example: Jones
        business_name:
          type: string
          description: If Beneficiary class is Business, this field will contain the business' name
        date_of_birth:
          type: string
          description: The beneficiary's date of birth
          example: '1976-02-07'
        phone_number:
          type: string
          pattern: ^\+[1-9]\d{1,14}$
          example: '+18284976406'
          description: The beneficiary's phone number in E.164 international standard
        label:
          type: string
          description: A label to identify the beneficiary
        currency:
          type: string
          description: The bank's currency type in ISO-4217 format
        tax_id_last_4:
          type: string
          description: Identifying number used for tax purposes
        id_information:
          type: object
          required:
            - id_number_last_4
            - id_type
            - country_of_issuance
          properties:
            id_number_last_4:
              type: string
              description: The unique number of the ID
            id_type:
              enum:
                - PASSPORT
                - NATIONAL_ID
                - FOREIGNER_ID
                - DRIVERS_LICENSE
              description: The type of ID
            country_of_issuance:
              type: string
              description: The country that issued the ID
            expiration_date:
              type: string
              description: The expiration date of the ID, if applicable
              example: '2030-02-07'
              format: date
        address:
          $ref: '#/components/schemas/beneficiary-address'
        created_at:
          type: string
          example: '2021-06-17T11:02:08.143Z'
          description: The beneficiary's creation date
        updated_at:
          type: string
          pattern: '2021-08-02T05:32:11.345Z'
          description: The beneficiary's update date
    incentive-rule-response:
      title: Incentive rule
      type: object
      description: Incentive rule model used for transactions
      x-internal: false
      properties:
        rule_uuid:
          type: string
          description: A unique id that identifies this rule
          format: uuid
        external_id:
          type: string
          description: This is your unique ID for this rule. This field is used to guarantee idempotency.
        incentive_type:
          type: string
          description: The type of incentive
          enum:
            - CASHBACK
            - BOOST
        transaction_type:
          type: string
          description: The transaction type to which this rule will apply
          default: CARD_ISSUED_DEBIT
          enum:
            - CARD_ISSUED_DEBIT
        description:
          type: string
          description: A description of the incentive rule
        scope:
          type: string
          description: To which entities this rule apply. If `GLOBAL` this will apply to all transactions in the system. If `ISSUED_CARD` this rule will only apply to the specific cards to which this rule is attached
          enum:
            - GLOBAL
            - ISSUED_CARD
        status:
          type: string
          description: Rule status
          enum:
            - ACTIVE
            - INACTIVE
            - DELETED
        value:
          oneOf:
            - title: Amount
              description: 'Use this service fee value type if you want a fixed amount incentive to be applied to the transaction, in cents (eg. value: 1000)'
              properties:
                amount:
                  type: integer
                  description: The amount is the value associated with incentive, in cents.
                  minimum: 0
                  exclusiveMinimum: true
              required:
                - amount
            - title: Percent
              description: |-
                Use this incentive value type if you want a percentage to be applied on the total amount of the transaction. For example, if the total amount is $100 and you want to give a 10% incentive, you should set the property to value: 10
                Provide the `cap` field if you want the value to be capped at a certain amount. For example, if the total amount is $1000 and you want to apply a 10% incentive capped to $50, you should set the value: 10 and cap: 5000
              properties:
                percent:
                  type: number
                  format: float
                  minimum: 0
                  description: The percent value to apply to the incentive
                  exclusiveMinimum: true
                  maximum: 100
                cap:
                  type: integer
                  description: |-
                    The amount to cap the incentive in cents, e.g. If you want to provide 1 USD the value must be value: 100
                    If null there's no cap for this incentive
                  example: 100
                  minimum: 1
                  maximum: 99999999
              required:
                - percent
        merchants:
          type: object
          description: Merchants to which the incentive rule apply. They can be either defined by Merchant ID or Merchant Name, and the rule will applied to the combination of both arrays. If not provided, the rule will apply to all merchants
          properties:
            merchant_ids:
              type: array
              description: The array of merchant ids to be accepted. By setting this array, the incentives will only be applied to the merchant ids that are defined here
              items:
                type: string
            merchant_names:
              type: array
              description: The array of merchant names to be accepted. By setting this array, the incentives will only be applied to transactions where the merchant name is included in the list
              items:
                type: string
        expiration_rules:
          type: object
          description: Rules to expire the rule
          properties:
            expiration_date:
              type: string
              description: The date/time on which the rule no longer applies
              example: '2021-06-17T11:02:08.143Z'
            expiration_times:
              type: integer
              description: The total amount of times a rule can be used per wallet before it expires
              minimum: 1
              maximum: 99999999
        created_at:
          type: string
          example: '2021-06-17T11:02:08.143Z'
          description: The date the rule was created in the system
        updated_at:
          type: string
          example: '2021-06-17T11:02:08.143Z'
          description: The date the rule was last updated in the system
      required:
        - rule_uuid
        - external_id
        - incentive_type
        - description
        - scope
        - value
        - created_at
        - updated_at
    issued-card-response:
      title: Issued card
      type: object
      description: Details of an issued card entity in Alviere's systems. An issued card represents a branded card that has been issued by Alviere.
      x-internal: false
      required:
        - card_uuid
        - external_id
        - wallet_uuid
        - product_id
        - type
        - genre
        - status
        - brand
        - shipping_address
        - auth_rules
        - custom_fields
        - metadata
        - blocked
        - pin_set
        - card_expiration
        - last_4
        - created_at
        - updated_at
        
      properties:
        card_uuid:
          type: string
          description: The unique uuid for this card. This is how you will identify this card in the future throughout the API
          format: uuid
        external_id:
          title: Your unique identification of the card in your system
          description: |
            This is your unique ID for this card. This field is used to guarantee idempotency.
          type: string
        account_uuid:
          type: string
          description: Alviere's unique ID for the account that owns this card
        wallet_uuid:
          type: string
          description: The uuid of the wallet to which this card is linked to
          format: uuid
        product_id:
          title: The product id of the card
          example: '885'
          description: |
            This product ID is assigned to you by the Alviere team when you setup your card issuance service.
          type: string
        type:
          type: string
          description: The type of card
          enum:
            - DEBIT
            - PREPAID
            - PREPAID_NON_RELOADABLE
            - GIFT
        genre:
          type: string
          description: The genre of the card
          enum:
            - DIGITAL
            - VIRTUAL
            - PHYSICAL
        converted_to_physical:
          type: boolean
          description: Indicates if this card was originally virtual and converted to physical
          example: true
        status:
          type: string
          description: The status of the card
          enum:
            - CREATED
            - PENDING
            - PROCESSING
            - ACTIVE
            - FROZEN
            - SET_TO_EMBOSS
            - READY_TO_ACTIVATE
            - RETURNED_MAIL
            - LOST_STOLEN
            - CANCELED
            - EXPIRED
            - FAILED
        status_reason:
          type: string
          description: |
            The reason why the card might be in a particular status
          format: string
        brand:
          type: string
          description: Card brand
          example: VISA
        initial_balance:
          type: integer
          description: The initial balance on the card (in cents, 100 = $1). Only applicable to cards that support this feature
          minimum: -99999999
          maximum: 99999999
        shipping_address:
          $ref: '#/components/schemas/shipping-address'
        auth_rules:
          type: object
          title: The rules this card should use when authorizing a transaction.
          properties:
            allowed_merchants:
              type: object
              description: |
                Use this section to limit the use of this card to transactions from one or more merchants.
                If a transaction comes through that is not a part of these merchants, the transaction will be declined.
              properties:
                allowed_merchant_ids:
                  description: |
                    The array of merchant ids to be accepted.
                    By setting this array, the incentives will only be applied to the merchant ids that are defined here
                  type: array
                  title: Acceptable merchant ids
                  example:
                    - '8123434'
                    - '8123777'
                  items:
                    type: string
                    format: int64
                allowed_merchant_names:
                  description: |
                    The array of merchant names to be accepted.
                    By setting this array, the incentives will only be applied to transactions where the merchant name is included in the list. 
                  type: array
                  title: Acceptable merchant names
                  example:
                    - Alviere
                    - Alviere, Inc.
                  items:
                    type: string
            limits:
              type: array
              items:
                $ref: '#/components/schemas/issued-card-limit-response'
        emboss_id:
          type: string
          description: ID to be used at the embossing process
        custom_fields:
          type: object
          title: Card custom fields
          description: Allows setting of specific card fields
          properties:
            shipping_method:
              type: string
              example: DEFAULT
              enum:
                - DEFAULT
                - EXPRESS_FEDEX
            name_on_card:
              type: string
              description: Name on card. Character limits depend on card product
              example: John Doe
            carrier_id:
              type: string
              description: ID of the carrier in which this card should be shipped
            carrier_message:
              type: string
              description: Message to be printed in the carrier
              minLength: 1
              maxLength: 150
            line2_text:
              type: string
              description: Custom text for line 2 of the card
              minLength: 1
              maxLength: 26
              pattern: "^[a-zA-Z0-9- ]{1,26}$"
        service_fees:
          type: array
          items:
            $ref: '#/components/schemas/service-fee-issued-card-response'
        metadata:
          type: object
          description: Allows for any number of custom metadata keys and values to be stored with a given card
        blocked:
          type: boolean
          description: A flag determining if the card is blocked or not
        pin_set:
          type: boolean
          description: If `TRUE` the PIN has been set on this card
        card_expiration:
          type: string
          description: The card's expiration date
          example: 05/21
        last_4:
          type: string
          description: The last four digits of the card PAN
          example: '1367'
        incentive_rule_uuids:
          type: array
          description: Array of incentive rule UUIDs that apply to this issued card
          items:
            type: string
            format: uuid
        created_at:
          type: string
          description: The card's creation date
          example: '2021-06-17T11:02:08.143Z'
        updated_at:
          type: string
          description: The card's modification date
          example: '2021-08-02T05:32:11.345Z'
        shipped_at:
          type: string
          format: date-time
          description: Date when physical card was shipped. Only present for physical cards that have been shipped.
          example: '2024-07-11T10:30:00Z'
        
    profile-request:
      title: Profile request
      type: object
      properties:
        profile:
          type: string
          description: Name of the profile
        status:
          enum:
            - CREATED
            - PROCESSING
            - MANUAL_REVIEW
            - PENDING_USER
            - REJECTED
          description: Status of the application for the Account to attain the requested profile
        stage:
          type: string
          description: The current stage in the verification process
        status_reason:
          type: string
          description: The reason why the profile verification is in a particular status
      required:
        - profile
        - status
    consumer-information-response:
      title: Consumer information
      type: object
      description: This structure contains the personal information of a consumer account
      properties:
        first_name:
          type: string
          description: The consumer's first name
          example: John
          pattern: ^[a-zA-Z0-9' -]{1,40}$
        middle_name:
          type: string
          description: The consumer's middle name
          example: Smith
          pattern: ^[a-zA-Z0-9' -]{1,40}$
        last_name:
          type: string
          description: The consumer's last name
          example: Doe
          pattern: ^[a-zA-Z0-9' -]{1,40}$
        date_of_birth:
          type: string
          description: The consumer's date of birth
          example: '1976-02-07'
        ssn_last_4:
          type: string
          description: The consumer's last 4 digits of their Social Security Number
          example: '6789'
        phone_number:
          type: string
          description: The consumer's phone number in E.164 international standard
          pattern: ^\+[1-9]\d{1,14}$
          example: '+18284976406'
        email_address:
          type: string
          description: The consumer's email address
          example: john.doe@alviere.com
        occupation:
          type: object
          required:
            - employment_status
          properties:
            employment_status:
              type: string
              description: The current work status of the consumer, indicating their engagement in the workforce
              enum:
                - FULL_TIME
                - PART_TIME
                - SELF_EMPLOYED
                - FREELANCER
                - UNEMPLOYED
                - STUDENT
                - RETIRED
            profession:
              type: string
              description: This field represents the consumer's core professional identity and is required unless the employment_status is 'STUDENT' or 'UNEMPLOYED'. Please consult our guides for valid values for your Program.
    business-information:
      title: Business information
      description: This structure contains the information of a business account.
      oneOf:
        - title: US business account
          required:
            - business_type
            - business_name
            - state_of_incorporation
            - country_of_incorporation
            - ein
          properties:
            business_type:
              type: string
              description: The type of company
              enum:
                - SOLE_PROPRIETORSHIP
                - LLC
                - LLP
                - CORPORATION_C
                - CORPORATION_S
            business_name:
              type: string
              description: The name of the company
              example: ACME
            doing_business_as:
              type: string
              description: Doing Business As
              example: Alviere
            state_of_incorporation:
              type: string
              description: The state of incorporation
              example: CA
              minLength: 2
              maxLength: 2
            country_of_incorporation:
              type: string
              description: Three-letter country code (ISO 3166-1 alpha-3).
              minLength: 3
              maxLength: 3
              example: USA
            incorporation_date:
              type: string
              description: The date the company was started
              format: date
            ein:
              type: string
              description: The EIN of the company
              example: '1234556'
            phone_number:
              type: string
              description: The business' phone number in E.164 international standard
              pattern: ^\+[1-9]\d{1,14}$
            website:
              type: string
              description: The company's website
            email_address:
              type: string
              description: The company's email address
            nature_of_business:
              type: integer
              description: The business industry classification, as specified in NAICS
              minimum: 11
              maximum: 999999
            nature_of_business_details:
              type: string
              description: Additional details and description of the nature of business, product and/or service provided
            account_purpose:
              type: string
              enum:
                - GENERAL_USE
                - PAYROLL
                - TAXES
                - MERCHANT_SERVICES
                - OTHER
              description: The purpose of the account
            account_purpose_details:
              type: string
              description: Additional details of the account purpose
            trading_volume:
              type: integer
              description: The yearly average trading volume of the business
            transaction_volume:
              type: integer
              description: The yearly average transaction volume of the business
            source_of_funds:
              type: string
              enum:
                - SERVICES_PRODUCTS
                - ESTATE
                - HOLDING_COMPANY
                - INVESTMENTS
                - LOANS
                - PARENT_COMPANY
                - SUBSIDIARY
                - TRUST
              description: The source of funds of the company
            number_of_employees:
              type: integer
              minimum: 1
              description: Number of employees in the organization
        - title: EU business account
          required:
            - business_type
            - business_name
            - country_of_incorporation
            - company_id
            - vat_number
            - incorporation_date
          properties:
            business_type:
              type: string
              description: The type of company
              enum:
                - SELF_EMPLOYED
                - LLC
            business_name:
              type: string
              description: The name of the company
              example: ACME
            doing_business_as:
              type: string
              description: Doing Business As
              example: Alviere
            country_of_incorporation:
              type: string
              description: Three-letter country code (ISO 3166-1 alpha-3).
              minLength: 3
              maxLength: 3
              example: ESP
            company_id:
              type: string
              description: The ID number of the company
              example: '1234556'
            vat_number:
              type: string
              description: The VAT number of the company
              example: '123456'
            incorporation_date:
              type: string
              description: The date the company was started
              format: date
            phone_number:
              type: string
              description: The business' phone number in E.164 international standard
            website:
              type: string
              description: The company's website
            email_address:
              type: string
              description: The company's email address
            nature_of_business:
              type: integer
              description: The business industry classification, as specified in NAICS 2022
            account_purpose:
              type: string
              enum:
                - GENERAL_USE
                - PAYROLL
                - TAXES
                - MERCHANT_SERVICES
                - OTHER
              description: The purpose of the account
            account_purpose_details:
              type: string
              description: Additional details of the account purpose
            trading_volume:
              type: string
              description: The yearly average trading volume of the business
            transaction_volume:
              type: string
              description: The yearly average transaction volume of the business
            source_of_funds:
              type: string
              enum:
                - SERVICES_PRODUCTS
                - ESTATE
                - HOLDING_COMPANY
                - INVESTMENTS
                - LOANS
                - PARENT_COMPANY
                - SUBSIDIARY
                - TRUST
              description: The source of funds of the company
      type: object
    stakeholder-information-response-standalone:
      title: Stakeholder
      type: object
      description: This structure contains the information of a stakeholder account
      properties:
        stakeholder_types:
          type: array
          description: The type of stakeholder
          enum:
            - BENEFICIAL_OWNER
            - OFFICER
          items:
            type: string
        officer_titles:
          type: array
          description: The job title for type `OFFICER`
          example: CEO
          items:
            type: string
        percentage_ownership:
          type: number
          description: The percentage ownership in the company for type `BENEFICIAL_OWNER`
          example: '25'
          minimum: 0
          maximum: 100
          format: float
        first_name:
          type: string
          description: The first name
          example: John
          minLength: 1
          maxLength: 40
        middle_name:
          type: string
          description: The middle name
          example: Smith
          minLength: 1
          maxLength: 40
        last_name:
          type: string
          description: The last name
          example: Doe
          minLength: 1
          maxLength: 40
        date_of_birth:
          type: string
          description: The date of birth. Not required for `ADMINISTRATOR`
          example: '1976-02-07'
        id_information:
          type: object
          description: ID information for the stakeholder
          properties:
            id_number_last_4:
              type: string
              description: The last 4 digits of the stakeholder's ID number
              example: '6789'
            id_type:
              type: string
              enum:
                - SSN
                - EIN
                - ITIN
                - FOREIGN_TAX_ID
                - PASSPORT
                - ALIEN_ID_CARD
                - NATIONAL_ID
                - DRIVERS_LICENSE
              description: The type of ID document
              example: SSN
            country_of_issuance:
              type: string
              description: Country that issued the ID (ISO 3166-1 alpha-3). Only present for non-U.S. IDs (FOREIGN_TAX_ID, PASSPORT, ALIEN_ID_CARD, NATIONAL_ID, DRIVERS_LICENSE)
              pattern: ^[A-Z]{3}$
              example: USA
          required:
            - id_number_last_4
            - id_type
      required:
        - stakeholder_types
        - first_name
        - last_name
    cardholder-information:
      title: Cardholder
      type: object
      description: This structure contains the information of a stakeholder account
      properties:
        first_name:
          type: string
          description: The first name
          example: John
          pattern: ^[a-zA-Z0-9' -]{1,40}$
        middle_name:
          type: string
          description: The middle name
          example: Smith
          pattern: ^[a-zA-Z0-9' -]{1,40}$
        last_name:
          type: string
          description: The last name
          example: Doe
          pattern: ^[a-zA-Z0-9' -]{1,40}$
        date_of_birth:
          type: string
          description: The cardholders date of birth
          example: '1976-02-07'
        email_address:
          type: string
          description: The cardholder's email address
          example: john.doe@alviere.com
      required:
        - first_name
        - last_name
    account-information-response-list:
      oneOf:
        - title: Consumer
          properties:
            consumer_information:
              $ref: '#/components/schemas/consumer-information-response'
          required:
            - consumer_information
        - title: Business
          properties:
            business_information:
              $ref: '#/components/schemas/business-information'
          required:
            - business_information
        - title: Stakeholder
          properties:
            business_account_uuid:
              type: string
              description: The uuid of the Business account to which this Stakeholder belongs
            stakeholder_information:
              $ref: '#/components/schemas/stakeholder-information-response-standalone'
          required:
            - business_account_uuid
            - stakeholder_information
        - title: Cardholder
          properties:
            parent_account_uuid:
              type: string
              description: The uuid of the account to which this Cardholder belongs
            cardholder_information:
              $ref: '#/components/schemas/cardholder-information'
          required:
            - parent_account_uuid
            - cardholder_information
      type: object
    account-response-list:
      title: List Account
      type: object
      description: Details of an account entity in Alviere's systems. An account can either represent a `CONSUMER`, `BUSINESS` or `STAKEHOLDER` in the system.
      required:
        - account_uuid
        - type
        - status
        - external_id
        - created_at
        - updated_at
      properties:
        account_uuid:
          type: string
          description: The unique id of the account within the Alviere platform.
          format: uuid
        type:
          type: string
          description: The type of account
          enum:
            - CONSUMER
            - BUSINESS
            - STAKEHOLDER
            - CARDHOLDER
        status:
          type: string
          description: The user account current status
          example: CREATED
          enum:
            - CREATED
            - ACTIVE
            - INACTIVE
            - DELETED
            - PROCESSING
            - PENDING_USER
            - MANUAL_REVIEW
            - REJECTED
        stage:
          type: string
          description: |
            The current stage in the verification process.

            Note: This field will be empty if the status of the user is not `PROCESSING` or `PENDING_USER` or `MANUAL_REVIEW`
            and might also be empty when status is `REJECTED`
          format: string
          example: FRAUD
          enum:
            - FRAUD
            - ADDRESS
            - IDENTITY
            - IDENTITY_OPTIONAL_SSN
            - SANCTIONS
            - DOCUMENTS
            - DOCUMENTS_OPTIONAL_FULL_SSN
        status_reason:
          type: string
          description: The reason why an account might be in a particular status
          format: string
          example: INVALID_DOB
          enum:
            - INVALID_NAME
            - INVALID_DOB
            - INVALID_ADDRESS
            - INVALID_LAST_4_SSN
            - REQUIRES_FULL_SSN
            - REQUIRES_LAST_4_SSN
            - REQUIRES_PHOTO_ID
            - EXPIRED_DOCUMENT
            - INVALID_SSN
            - REQUIRES_PASSPORT_RESUBMISSION
            - REQUIRES_ID_DOCUMENT_FRONT_RESUBMISSION
            - REQUIRES_ID_DOCUMENT_BACK_RESUBMISSION
            - REQUIRES_DRIVERS_LICENSE_FRONT_RESUBMISSION
            - REQUIRES_DRIVERS_LICENSE_BACK_RESUBMISSION
            - REQUIRES_PROOF_OF_ADDRESS_RESUBMISSION
            - REQUIRES_PROOF_OF_FUNDS_RESUBMISSION
            - REQUIRES_MC_DOCUMENT_FRONT_RESUBMISSION
            - REQUIRES_MC_DOCUMENT_BACK_RESUBMISSION
            - REQUIRES_CERTIFICATE_OF_INCORPORATION_RESUBMISSION
            - REQUIRES_SELFIE_RESUBMISSION
            - UNREJECT
            - TRANSACTION_MANUAL_REVIEW
        status_reason_description:
          type: string
          example: INVALID_DOB
          description: Additional information about the status reason
        profile:
          type: string
          description: The current profile of the account
        profile_request:
          $ref: '#/components/schemas/profile-request'
        external_id:
          type: string
          description: The external account id of your platform
        information:
          $ref: '#/components/schemas/account-information-response-list'
        metadata:
          description: Allows for any number of custom metadata keys and values to be stored with a given account
          type: object
        created_at:
          type: string
          description: The date this account was created
        updated_at:
          type: string
          description: The date this account was last updated
    consumer-information-request:
      title: Consumer information
      type: object
      description: This structure contains the personal information of a consumer account
      properties:
        first_name:
          type: string
          description: The consumer's first name
          example: John
          pattern: ^[a-zA-Z0-9' -]{1,40}$
        middle_name:
          type: string
          description: The consumer's middle name
          example: Smith
          pattern: ^[a-zA-Z0-9' -]{1,40}$
        last_name:
          type: string
          description: The consumer's last name
          example: Doe
          pattern: ^[a-zA-Z0-9' -]{1,40}$
        date_of_birth:
          type: string
          description: The consumer's date of birth
          example: '1976-02-07'
          pattern: ^([0-9]{4})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$
        ssn:
          type: string
          description: The consumer's Social Security Number. This property will accept both the last 4 digits or the full 9 digits of the SSN. On responses this will only return the last 4 digits.
          example: '123456789'
          pattern: ^\d{9}$
        phone_number:
          type: string
          description: The consumer's phone number in E.164 international standard
          pattern: ^\+[1-9]\d{1,14}$
          example: '+18284976406'
        email_address:
          type: string
          description: The consumer's email address
          example: john.doe@alviere.com
        occupation:
          type: object
          required:
            - employment_status
          properties:
            employment_status:
              type: string
              description: The current work status of the consumer, indicating their engagement in the workforce
              enum:
                - FULL_TIME
                - PART_TIME
                - SELF_EMPLOYED
                - FREELANCER
                - UNEMPLOYED
                - STUDENT
                - RETIRED
            profession:
              type: string
              description: This field represents the consumer's core professional identity and is required unless the employment_status is 'STUDENT' or 'UNEMPLOYED'. Please consult our guides for valid values for your Program.
    stakeholder-information-request:
      title: Stakeholder
      type: object
      description: This structure contains the information of a stakeholder account
      properties:
        stakeholder_types:
          type: array
          description: The different types that apply to this stakeholder
          enum:
            - BENEFICIAL_OWNER
            - OFFICER
          items:
            type: string
        external_id:
          type: string
          description: The ID of this stakeholder in your own platform. This will be associated with this stakeholder and can be used to identify the stakeholder as well as protect our API against duplicate stakeholders.
        officer_titles:
          type: array
          description: The titles that apply for type `OFFICER`
          example: CEO
          items:
            type: string
        percentage_ownership:
          type: string
          description: The percentage ownership in the company for type `BENEFICIAL_OWNER`
          example: '25'
        first_name:
          type: string
          description: The first name
          example: John
          minLength: 1
          maxLength: 40
        middle_name:
          type: string
          description: The middle name
          example: Smith
          minLength: 1
          maxLength: 40
        last_name:
          type: string
          description: The last name
          example: Doe
          minLength: 1
          maxLength: 40
        date_of_birth:
          type: string
          description: The date of birth.
          example: '1976-02-07'
        id_information:
          type: object
          description: ID information for the stakeholder
          properties:
            id_type:
              type: string
              enum:
                - SSN
                - EIN
                - ITIN
                - FOREIGN_TAX_ID
                - PASSPORT
                - ALIEN_ID_CARD
                - NATIONAL_ID
                - DRIVERS_LICENSE
              description: The type of ID document
            id_number:
              type: string
              description: The ID number
              example: '123456789'
            country_of_issuance:
              type: string
              description: Country that issued the ID (ISO 3166-1 alpha-3). Required for non-U.S. IDs (FOREIGN_TAX_ID, PASSPORT, ALIEN_ID_CARD, NATIONAL_ID, DRIVERS_LICENSE)
              pattern: ^[A-Z]{3}$
              example: USA
          required:
            - id_type
            - id_number
        primary_address:
          type: object
          properties:
            line_1:
              title: Address Line One
              description: Address line 1 (e.g., street, PO Box, or company name - NOTE that newline characters are not accepted)
              type: string
              pattern: ^.{2,128}$
              example: 101 Avenue of the Americas
            line_2:
              title: Address Line Two
              description: Address line 2 (e.g., apartment, suite, unit, or building - NOTE that newline characters are not accepted)
              type: string
              pattern: ^.{1,128}$
              example: Suite 936
            postal_code:
              title: Postal Code
              description: ZIP or postal code
              type: string
              pattern: ^.{5,9}$
              example: '10013'
            city:
              title: City
              description: City, district, suburb, town, or village
              type: string
              pattern: ^.{2,128}$
              example: New York
            state:
              type: string
              title: State
              description: State, county, province, or region
              pattern: ^[A-Z]{2}$
              example: NY
            country:
              title: Country
              description: Three-letter country code (ISO 3166-1 alpha-3).
              type: string
              pattern: ^[A-Z]{3}$
              example: USA
      required:
        - stakeholder_types
        - external_id
        - first_name
        - last_name
    stakeholder-information-request-standalone:
      title: Stakeholder
      type: object
      description: This structure contains the information of a stakeholder account
      properties:
        stakeholder_types:
          type: array
          description: The different types that apply to this stakeholder
          enum:
            - BENEFICIAL_OWNER
            - OFFICER
          items:
            type: string
        officer_titles:
          type: array
          description: The titles that apply for type `OFFICER`
          example: CEO
          items:
            type: string
        percentage_ownership:
          type: number
          description: The percentage ownership in the company for type `BENEFICIAL_OWNER`
          example: '25'
          format: float
          minimum: 0
          maximum: 100
        first_name:
          type: string
          description: The first name
          example: John
          minLength: 1
          maxLength: 40
        middle_name:
          type: string
          description: The middle name
          example: Smith
          minLength: 1
          maxLength: 40
        last_name:
          type: string
          description: The last name
          example: Doe
          minLength: 1
          maxLength: 40
        date_of_birth:
          type: string
          description: The date of birth.
          example: '1976-02-07'
        id_information:
          type: object
          description: ID information for the stakeholder
          properties:
            id_type:
              type: string
              enum:
                - SSN
                - EIN
                - ITIN
                - FOREIGN_TAX_ID
                - PASSPORT
                - ALIEN_ID_CARD
                - NATIONAL_ID
                - DRIVERS_LICENSE
              description: The type of ID document
            id_number:
              type: string
              description: The ID number
              example: '123456789'
            country_of_issuance:
              type: string
              description: Country that issued the ID (ISO 3166-1 alpha-3). Required for non-U.S. IDs (FOREIGN_TAX_ID, PASSPORT, ALIEN_ID_CARD, NATIONAL_ID, DRIVERS_LICENSE)
              pattern: ^[A-Z]{3}$
              example: USA
          required:
            - id_type
            - id_number
      required:
        - stakeholder_types
        - first_name
        - last_name
    account-information-request:
      oneOf:
        - title: Consumer
          properties:
            consumer_information:
              $ref: '#/components/schemas/consumer-information-request'
          required:
            - consumer_information
        - title: Business
          properties:
            business_information:
              $ref: '#/components/schemas/business-information'
            stakeholders:
              type: array
              items:
                $ref: '#/components/schemas/stakeholder-information-request'
          required:
            - business_information
        - title: Stakeholder
          properties:
            business_account_uuid:
              type: string
              description: The uuid of the Business account to which this Stakeholder belongs
            stakeholder_information:
              $ref: '#/components/schemas/stakeholder-information-request-standalone'
          required:
            - business_account_uuid
            - stakeholder_information
        - title: Cardholder
          properties:
            parent_account_uuid:
              type: string
              description: The uuid of the account to which this Cardholder belongs
            cardholder_information:
              $ref: '#/components/schemas/cardholder-information'
          required:
            - parent_account_uuid
            - cardholder_information
      type: object
    address-request:
      oneOf:
        - title: USA address
          properties:
            external_id:
              type: string
              description: The unique identifier of the address in your own system
            label:
              type: string
              example: Home Address
            line_1:
              title: Address Line One
              description: Address line 1 (e.g., street, PO Box, or company name - NOTE that newline characters are not accepted)
              type: string
              pattern: ^.{2,40}$
              example: 101 Avenue of the Americas
            line_2:
              title: Address Line Two
              description: Address line 2 (e.g., apartment, suite, unit, or building - NOTE that newline characters are not accepted)
              type: string
              pattern: ^.{1,30}$
              example: Suite 936
            postal_code:
              title: Postal Code
              description: ZIP or postal code
              type: string
              pattern: ^.{5,9}$
              example: '10013'
            city:
              title: City
              description: City, district, suburb, town, or village
              type: string
              pattern: ^.{2,128}$
              example: New York
            state:
              title: State
              description: State, county, province, or region
              type: string
              pattern: ^[A-Z]{2}$
              example: NY
            country:
              title: Country
              description: Three-letter country code (ISO 3166-1 alpha-3).
              type: string
              pattern: ^[A-Z]{3}$
              example: USA
          required:
            - line_1
            - postal_code
            - city
            - state
            - country
        - title: ESP address
          properties:
            external_id:
              type: string
              description: The unique identifier of the address in your own system
            label:
              type: string
              example: Home Address
            line_1:
              title: Address Line One
              description: Address line 1 (e.g., street, PO Box, or company name - NOTE that newline characters are not accepted)
              type: string
              example: Calle de Felipe III, 6
              pattern: ^.{2,128}$
            line_2:
              title: Address Line Two
              description: Address line 2 (e.g., apartment, suite, unit, or building - NOTE that newline characters are not accepted)
              type: string
              example: 5B
              pattern: ^.{1,128}$
            postal_code:
              title: Postal Code
              description: ZIP or postal code
              type: string
              example: '28012'
              pattern: ^.{5}$
            city:
              title: City
              description: City, district, suburb, town, or village
              type: string
              pattern: ^.{2,128}$
              example: Madrid
            state:
              title: State
              description: State, county, province, or region
              type: string
              example: Madrid
              pattern: ^.{2,128}$
            country:
              title: Country
              description: Three-letter country code (ISO 3166-1 alpha-3).
              type: string
              pattern: ^[A-Z]{3}$
              example: ESP
          required:
            - line_1
            - postal_code
            - city
            - country
      type: object
    stakeholder-information-response:
      title: Stakeholder
      type: object
      description: This structure contains the information of a stakeholder account
      properties:
        stakeholder_uuid:
          type: string
          description: The unique UUID of this stakeholder
        external_id:
          type: string
          description: The ID of this stakeholder in your own platform. This will be associated with this stakeholder and can be used to identify the stakeholder as well as protect our API against duplicate stakeholders.
        status:
          type: string
          enum:
            - CREATED
            - PENDING_USER
            - VERIFIED
            - PROCESSING
            - REJECTED
            - MANUAL_REVIEW
        status_reason:
          type: string
          description: The reason why an account might be in a particular status
        stage:
          type: string
          description: |-
            The current stage in the verification process.

            Note: This field will be empty if the status of the account is not PROCESSING or PENDING_USER or MANUAL_REVIEW and might also be empty when status is REJECTED
          enum:
            - DOCUMENTS
        stakeholder_types:
          type: array
          description: The type of stakeholder
          enum:
            - BENEFICIAL_OWNER
            - OFFICER
          items:
            type: string
        officer_titles:
          type: array
          description: The job title for type `OFFICER`
          example: CEO
          items:
            type: string
        percentage_ownership:
          type: string
          description: The percentage ownership in the company for type `BENEFICIAL_OWNER`
          example: '25'
        first_name:
          type: string
          description: The first name
          example: John
          minLength: 1
          maxLength: 40
        middle_name:
          type: string
          description: The middle name
          example: Smith
          minLength: 1
          maxLength: 40
        last_name:
          type: string
          description: The last name
          example: Doe
          minLength: 1
          maxLength: 40
        date_of_birth:
          type: string
          description: The date of birth. Not required for `ADMINISTRATOR`
          example: '1976-02-07'
        id_information:
          type: object
          description: ID information for the stakeholder
          properties:
            id_number_last_4:
              type: string
              description: The last 4 digits of the stakeholder's ID number
              example: '6789'
            id_type:
              type: string
              enum:
                - SSN
                - EIN
                - ITIN
                - FOREIGN_TAX_ID
                - PASSPORT
                - ALIEN_ID_CARD
                - NATIONAL_ID
                - DRIVERS_LICENSE
              description: The type of ID document
              example: SSN
            country_of_issuance:
              type: string
              description: Country that issued the ID (ISO 3166-1 alpha-3). Only present for non-U.S. IDs (FOREIGN_TAX_ID, PASSPORT, ALIEN_ID_CARD, NATIONAL_ID, DRIVERS_LICENSE)
              pattern: ^[A-Z]{3}$
              example: USA
          required:
            - id_number_last_4
            - id_type
      required:
        - stakeholder_uuid
        - external_id
        - status
        - stakeholder_types
        - first_name
        - last_name
    account-information-response:
      oneOf:
        - title: Consumer
          properties:
            consumer_information:
              $ref: '#/components/schemas/consumer-information-response'
          required:
            - consumer_information
        - title: Business
          properties:
            business_information:
              $ref: '#/components/schemas/business-information'
            stakeholders:
              type: array
              description: 'The list of associated stakeholders. '
              items:
                $ref: '#/components/schemas/stakeholder-information-response'
          required:
            - business_information
        - title: Stakeholder
          properties:
            business_account_uuid:
              type: string
              description: The uuid of the Business account to which this Stakeholder belongs
            stakeholder_information:
              $ref: '#/components/schemas/stakeholder-information-response-standalone'
          required:
            - business_account_uuid
            - stakeholder_information
        - title: Cardholder
          properties:
            parent_account_uuid:
              type: string
              description: The uuid of the account to which this Cardholder belongs
            cardholder_information:
              $ref: '#/components/schemas/cardholder-information'
          required:
            - parent_account_uuid
            - cardholder_information
      type: object
    business-information-update:
      title: Business information
      description: This structure contains the information of a business account.
      oneOf:
        - title: US business account
          properties:
            business_type:
              type: string
              description: The type of company
              enum:
                - SOLE_PROPRIETORSHIP
                - LLC
                - LLP
                - CORPORATION_C
                - CORPORATION_S
            business_name:
              type: string
              description: The name of the company
              example: ACME
            doing_business_as:
              type: string
              description: Doing Business As
              example: Alviere
            state_of_incorporation:
              type: string
              description: The state of incorporation
              example: CA
              minLength: 2
              maxLength: 2
            country_of_incorporation:
              type: string
              description: Three-letter country code (ISO 3166-1 alpha-3).
              minLength: 3
              maxLength: 3
              example: USA
            ein:
              type: string
              description: The EIN of the company
              example: '1234556'
            phone_number:
              type: string
              description: The business' phone number in E.164 international standard
              pattern: ^\+[1-9]\d{1,14}$
            website:
              type: string
              description: The company's website
            email_address:
              type: string
              description: The company's email address
            nature_of_business:
              type: integer
              description: The business industry classification, as specified in NAICS
            account_purpose:
              type: string
              enum:
                - GENERAL_USE
                - PAYROLL
                - TAXES
                - MERCHANT_SERVICES
                - OTHER
              description: The purpose of the account
            account_purpose_details:
              type: string
              description: Additional details of the account purpose
            trading_volume:
              type: integer
              description: The yearly average trading volume of the business
            transaction_volume:
              type: integer
              description: The yearly average transaction volume of the business
            source_of_funds:
              type: string
              enum:
                - SERVICES_PRODUCTS
                - ESTATE
                - HOLDING_COMPANY
                - INVESTMENTS
                - LOANS
                - PARENT_COMPANY
                - SUBSIDIARY
                - TRUST
              description: The source of funds of the company
        - title: EU business account
          properties:
            business_type:
              type: string
              description: The type of company
              enum:
                - SELF_EMPLOYED
                - LLC
            business_name:
              type: string
              description: The name of the company
              example: ACME
            doing_business_as:
              type: string
              description: Doing Business As
              example: Alviere
            country_of_incorporation:
              type: string
              description: Three-letter country code (ISO 3166-1 alpha-3).
              minLength: 3
              maxLength: 3
              example: ESP
            company_id:
              type: string
              description: The ID number of the company
              example: '1234556'
            vat_number:
              type: string
              description: The VAT number of the company
              example: '123456'
            incorporation_date:
              type: string
              description: The date the company was started
            phone_number:
              type: string
              description: The business' phone number in E.164 international standard
              pattern: ^\+[1-9]\d{1,14}$
            website:
              type: string
              description: The company's website
            email_address:
              type: string
              description: The company's email address
            nature_of_business:
              type: integer
              description: The business industry classification, as specified in NAICS 2022
            account_purpose:
              type: string
              enum:
                - GENERAL_USE
                - PAYROLL
                - TAXES
                - MERCHANT_SERVICES
                - OTHER
              description: The purpose of the account
            account_purpose_details:
              type: string
              description: Additional details of the account purpose
            trading_volume:
              type: string
              description: The yearly average trading volume of the business
            transaction_volume:
              type: string
              description: The yearly average transaction volume of the business
            source_of_funds:
              type: string
              enum:
                - SERVICES_PRODUCTS
                - ESTATE
                - HOLDING_COMPANY
                - INVESTMENTS
                - LOANS
                - PARENT_COMPANY
                - SUBSIDIARY
                - TRUST
              description: The source of funds of the company
      type: object
    cardholder-information-update2:
      title: Cardholder
      type: object
      description: This structure contains the information of a cardholder account
      properties:
        first_name:
          type: string
          description: The first name
          example: John
          pattern: ^[a-zA-Z0-9' -]{1,40}$
        middle_name:
          type: string
          description: The middle name
          example: Smith
          pattern: ^[a-zA-Z0-9' -]{1,40}$
        last_name:
          type: string
          description: The last name
          example: Doe
          pattern: ^[a-zA-Z0-9' -]{1,40}$
        date_of_birth:
          type: string
          example: '1976-02-07'
        email_address:
          type: string
          example: john.doe@alviere.com
    account-information-update:
      oneOf:
        - title: Consumer
          required:
            - consumer_information
          properties:
            consumer_information:
              $ref: '#/components/schemas/consumer-information-request'
        - title: Business
          required:
            - business_information
          properties:
            business_information:
              $ref: '#/components/schemas/business-information-update'
        - title: Stakeholder
          required:
            - stakeholder_information
          properties:
            stakeholder_information:
              $ref: '#/components/schemas/stakeholder-information-request-standalone'
        - title: Cardholder
          required:
            - cardholder_information
          properties:
            cardholder_information:
              $ref: '#/components/schemas/cardholder-information-update2'
      type: object
    card-pm-update:
      title: Card
      type: object
      description: A card that can be used as a payment method
      properties:
        3ds_options:
          type: object
          properties:
            3ds_preference:
              enum:
                - DISABLED
                - ENABLED
                - DOWNGRADE_ALLOWED
            3ds_challenge_indicator:
              enum:
                - NO_CHALLENGE_REQUESTED
                - CHALLENGE_REQUESTED
                - CHALLENGE_REQUESTED_MANDATE
                - NO_PREFERENCE
              description: Whether an indicator was sent to the provider about the 3DS challenge preference
    address-update:
      oneOf:
        - title: USA address
          properties:
            external_id:
              type: string
              description: The unique identifier of the address in your own system
            label:
              type: string
              example: Home Address
            line_1:
              title: Address Line One
              description: Address line 1 (e.g., street, PO Box, or company name - NOTE that newline characters are not accepted)
              type: string
              pattern: ^.{2,128}$
              example: 101 Avenue of the Americas
            line_2:
              title: Address Line Two
              description: Address line 2 (e.g., apartment, suite, unit, or building - NOTE that newline characters are not accepted)
              type: string
              pattern: ^.{1,128}$
              example: Suite 936
            postal_code:
              title: Postal Code
              description: ZIP or postal code
              type: string
              pattern: ^.{5,9}$
              example: '10013'
            city:
              title: City
              description: City, district, suburb, town, or village
              type: string
              pattern: ^.{2,128}$
              example: New York
            state:
              title: State
              description: State, county, province, or region
              type: string
              pattern: ^[A-Z]{2}$
              example: NY
            country:
              title: Country
              description: Three-letter country code (ISO 3166-1 alpha-3).
              type: string
              pattern: ^[A-Z]{3}$
              example: USA
        - title: ESP address
          properties:
            external_id:
              type: string
              description: The unique identifier of the address in your own system
            label:
              type: string
              example: Home Address
            line_1:
              title: Address Line One
              description: Address line 1 (e.g., street, PO Box, or company name - NOTE that newline characters are not accepted)
              type: string
              example: Calle de Felipe III, 6
              pattern: ^.{2,128}$
            line_2:
              title: Address Line Two
              description: Address line 2 (e.g., apartment, suite, unit, or building - NOTE that newline characters are not accepted)
              type: string
              example: 5B
              pattern: ^.{1,128}$
            postal_code:
              title: Postal Code
              description: ZIP or postal code
              type: string
              example: '28012'
              pattern: ^.{5}$
            city:
              title: City
              description: City, district, suburb, town, or village
              type: string
              pattern: ^.{2,128}$
              example: Madrid
            state:
              title: State
              description: State, county, province, or region
              type: string
              example: Madrid
              pattern: ^.{2,128}$
            country:
              title: Country
              description: Three-letter country code (ISO 3166-1 alpha-3).
              type: string
              pattern: ^[A-Z]{3}$
              example: ESP
      type: object
      title: Address
    dossier-replace:
      title: Dossier
      type: object
      description: |
        This structure contains dossier information attached to an account in the system.

        Dossiers are used to store documents that have been uploaded to an account.docume
      x-internal: false
      required:
        - documents
      properties:
        real_time_verification:
          type: boolean
          default: false
          description: Whether the dossier should be verified in real time
        country_of_issuance:
          type: string
          description: Three-letter country code (ISO 3166-1 alpha-3) for issuing country
        documents:
          description: The actual documents uploaded as part of this dossier.
          type: array
          items:
            type: object
            description: This structure contains document information
            required:
              - type
              - file
            properties:
              type:
                type: string
                description: The type of document.
                enum:
                  - PASSPORT
                  - ID_DOCUMENT_FRONT
                  - ID_DOCUMENT_BACK
                  - DRIVER_LICENSE_FRONT
                  - DRIVER_LICENSE_BACK
                  - SELFIE
                  - PROOF_OF_ADDRESS
                  - PROOF_OF_FUNDS
                  - MC_DOCUMENT_FRONT
                  - MC_DOCUMENT_BACK
                  - INE_FRONT
                  - INE_BACK
                  - ARTICLES_OF_INCORPORATION
                  - CERTIFICATE_OF_GOOD_STANDING
                  - ORG_CHART
                  - UBO_FORM
                  - REG_GG_ATTESTATION
              file:
                type: string
                description: The file in base64 format.
                format: base64
                example: U3dhZ2dlciByb2Nrcw==...
              barcode_data:
                type: string
                format: base64
                description: Barcode data in base64.
                example: dGVzdHRlc2V0ZXN0c2V0c2V0ZXN0TBD=
    dossier-update:
      title: Dossier
      type: object
      description: |
        This structure contains dossier information attached to an account in the system.

        Dossiers are used to store documents that have been uploaded to an account.docume
      x-internal: false
      properties:
        external_id:
          description: The external_id of the dossier in your system.
          type: string
        real_time_verification:
          type: boolean
          default: false
          description: Whether the dossier should be verified in real time
        country_of_issuance:
          type: string
          description: Three-letter country code (ISO 3166-1 alpha-3) for issuing country
        documents:
          description: The actual documents uploaded as part of this dossier.
          type: array
          items:
            type: object
            description: This structure contains document information
            required:
              - type
              - file
            properties:
              type:
                type: string
                description: The type of document.
                enum:
                  - PASSPORT
                  - ID_DOCUMENT_FRONT
                  - ID_DOCUMENT_BACK
                  - DRIVER_LICENSE_FRONT
                  - DRIVER_LICENSE_BACK
                  - SELFIE
                  - PROOF_OF_ADDRESS
                  - PROOF_OF_FUNDS
                  - MC_DOCUMENT_FRONT
                  - MC_DOCUMENT_BACK
                  - INE_FRONT
                  - INE_BACK
                  - ARTICLES_OF_INCORPORATION
                  - CERTIFICATE_OF_GOOD_STANDING
                  - ORG_CHART
                  - UBO_FORM
                  - REG_GG_ATTESTATION
              file:
                type: string
                description: The file in base64 format.
                format: base64
                example: U3dhZ2dlciByb2Nrcw==...
              barcode_data:
                type: string
                format: base64
                description: Barcode data in base64.
                example: dGVzdHRlc2V0ZXN0c2V0c2V0ZXN0TBD=
    dossier-response-list:
      title: Dossier
      type: object
      description: |
        This structure contains dossier information attached to an account in the system.

        Dossiers are used to store documents that have been uploaded to an account.docume
      x-internal: false
      required:
        - dossier_uuid
        - account_uuid
        - primary
        - status
        - external_id
        - created_at
        - updated_at
        - documents
      properties:
        dossier_uuid:
          description: The `uuid` of the dossier.
          type: string
          format: uuid
        account_uuid:
          description: The `uuid` of the account this dossier belongs to.
          type: string
          format: uuid
        primary:
          description: Defines if this is the primary dossier of the account, indicating it contains the set of documents used for identity verification
          type: boolean
        status:
          description: The status of the dossier.
          type: string
          enum:
            - CREATED
            - PENDING
            - MANUAL_REVIEW
            - VERIFIED
            - EXPIRED
            - REJECTED
            - FAILED
            - DELETED
        status_reason:
          description: For any other status than `CREATED` or `DELETED` this property details the reason this dossier is in this status
          type: string
        status_reason_description:
          description: Additional clarification related to the status reason
          type: string
        external_id:
          description: The external_id of the dossier in your system.
          type: string
        created_at:
          description: The date this dossier was created.
          type: string
          format: date
        updated_at:
          description: The date this dossier was last updated.
          type: string
          format: date
        documents:
          description: The actual documents uploaded as part of this dossier.
          type: array
          items:
            type: object
            description: This structure contains document information
            required:
              - type
            properties:
              type:
                type: string
                description: The type of document.
                enum:
                  - PASSPORT
                  - ID_DOCUMENT_FRONT
                  - ID_DOCUMENT_BACK
                  - DRIVER_LICENSE_FRONT
                  - DRIVER_LICENSE_BACK
                  - SELFIE
                  - PROOF_OF_ADDRESS
                  - PROOF_OF_FUNDS
                  - MC_DOCUMENT_FRONT
                  - MC_DOCUMENT_BACK
                  - INE_FRONT
                  - INE_BACK
                  - ARTICLES_OF_INCORPORATION
                  - CERTIFICATE_OF_GOOD_STANDING
                  - ORG_CHART
                  - UBO_FORM
                  - REG_GG_ATTESTATION
              country_of_issuance:
                type: string
                pattern: ^[A-Z]{3}$
                description: Three-letter country code (ISO 3166-1 alpha-3) for issuing country.
              file:
                type: string
                description: The file in base64 format. This field is only returned on responses from the `Get dossier` endpoint.
                format: base64
                example: U3dhZ2dlciByb2Nrcw==...
              barcode_data:
                type: string
                format: base64
                description: Barcode data in base64. This field is only returned on responses from the `Get dossier` endpoint.
                example: dGVzdHRlc2V0ZXN0c2V0c2V0ZXN0TBD=
              fail_reasons:
                type: array
                description: If the document failed to be verified, this field will contain the reason/s why
                items:
                  type: string
    dossier-request:
      title: Dossier
      type: object
      description: |
        This structure contains dossier information attached to an account in the system.

        Dossiers are used to store documents that have been uploaded to an account.docume
      x-internal: false
      required:
        - primary
        - external_id
        - documents
      properties:
        primary:
          description: Defines if this is the primary dossier of the account, indicating it contains the set of documents used for identity verification
          type: boolean
        external_id:
          description: The external_id of the dossier in your system.
          type: string
        real_time_verification:
          type: boolean
          default: false
          description: Whether the dossier should be verified in real time
        country_of_issuance:
          type: string
          description: Three-letter country code (ISO 3166-1 alpha-3) for issuing country.
        documents:
          description: The actual documents uploaded as part of this dossier.
          type: array
          items:
            type: object
            description: This structure contains document information
            required:
              - type
              - file
            properties:
              type:
                type: string
                description: The type of document.
                enum:
                  - PASSPORT
                  - ID_DOCUMENT_FRONT
                  - ID_DOCUMENT_BACK
                  - DRIVER_LICENSE_FRONT
                  - DRIVER_LICENSE_BACK
                  - SELFIE
                  - PROOF_OF_ADDRESS
                  - PROOF_OF_FUNDS
                  - MC_DOCUMENT_FRONT
                  - MC_DOCUMENT_BACK
                  - INE_FRONT
                  - INE_BACK
                  - ARTICLES_OF_INCORPORATION
                  - CERTIFICATE_OF_GOOD_STANDING
                  - ORG_CHART
                  - UBO_FORM
                  - REG_GG_ATTESTATION
              file:
                type: string
                description: The file in base64 format.
                format: base64
                example: U3dhZ2dlciByb2Nrcw==...
              barcode_data:
                type: string
                format: base64
                description: Barcode data in base64.
                example: dGVzdHRlc2V0ZXN0c2V0c2V0ZXN0TBD=
    funds:
      title: Funds
      type: object
      description: Different buckets that hold funds
      x-internal: false
      properties:
        available:
          type: integer
          description: 'The total available funds (in cents) that the consumer is authorized to spend. If the program has prefunding enabled, then this should equal the `balance` + `transit` buckets, otherwise it should be equal to `balance` '
          example: 25034
        balance:
          type: integer
          description: The settled funds (in cents) in the wallet. This means that all funds under this bucket actually exist in the underlying bank account
          example: 10013
        transit:
          type: integer
          description: The unsettled funds (in cents) in the wallet. This amount generally includes funds that have been authorized by a consumer transaction, but have not yet settled from the corresponding processor. These funds will count as available as they will be prefunded. The system will automatically move the funds from the transit bucket to the balance bucket once those funds settle
          example: 15021
        pending:
          type: integer
          description: The unsettled funds (in cents) in the wallet. This amount generally includes funds that have been authorized by a consumer transaction, but have not yet settled from the corresponding processor. These funds will not count as available as they will not be prefunded. The system will automatically move the funds from the pending bucket to the balance bucket once those funds settle
          example: 13032
        captive:
          type: integer
          description: The funds (in cents) that have been held captive for a transaction that was performed on the account. For example, if an ACH Debit was performed on a consumer or business account, the funds will be held captive until the transaction actually settles, and then will move to the relevant Treasury Vault
          example: 50
      required:
        - available
        - balance
        - transit
        - pending
        - captive
    ach-details-request:
      title: ACH details Request
      type: object
      description: Structure representing bank account details required to transfer funds over the ACH payment network (USA only)
      required:
        - routing_number
        - account_number
      properties:
        routing_number:
          type: string
          description: The ACH Routing Number for this bank account
        account_number:
          type: string
          description: The account number for this bank account
        type:
          enum:
            - CHECKING
            - SAVINGS
            - GENERAL_LEDGER
            - LOAN
          default: CHECKING
          description: The bank account type
      x-internal: false
    wire-details-request:
      title: Wire details Request
      type: object
      description: Structure representing bank account details required for wire transfers (real DDA)
      required:
        - routing_number
        - account_number
      properties:
        routing_number:
          type: string
          description: Wire routing number for this bank account
        account_number:
          type: string
          description: Account number for this bank account
      x-internal: false
    eft-details-request:
      title: EFT details
      type: object
      description: Structure representing bank account details required to transfer funds over the EFT payment network (Canada only)
      x-internal: false
      required:
        - transit_number
        - institution_code
        - account_number
      properties:
        transit_number:
          type: string
          description: The transit number
        institution_code:
          type: string
          description: The unique institution code
        account_number:
          type: string
          description: The account number for this bank account
    swift-details-request:
      title: SWIFT details
      type: object
      description: Structure representing bank account details required to transfer funds over the SWIFT international payment network
      x-internal: false
      required:
        - account_number
      properties:
        bic:
          type: string
          description: The account SWIFT/BIC code for this bank account
        account_number:
          type: string
          description: The account number for this bank account
        bank_code:
          type: string
          description: Code assigned to the bank
        branch_code:
          type: string
          description: Unique identifier for each given bank branch
        type:
          enum:
            - CHECKING
            - SAVINGS
          description: Account type
        bank_uuid:
          type: string
          description: UUID of the bank in Alviere's systems
    clabe-details-request:
      title: CLABE details
      description: Structure representing bank account details required to transfer funds over the CLABE payment network (Mexico only)
      type: object
      properties:
        bic_code:
          type: string
          description: The account SWIFT/BIC code for this bank account
          example: R233R2343XXX
        clabe_number:
          type: string
          description: The CLABE number for this bank account
      required:
        - bic_code
        - clabe_number
      x-internal: false
    iban-details-request:
      title: IBAN details
      type: object
      description: Structure representing bank account details required to transfer funds over payment networks that support IBAN format bank accounts (e.g., SEPA)
      x-internal: false
      required:
        - bic
        - iban
      properties:
        bic:
          type: string
          description: The account SWIFT/BIC code for this bank account
        iban:
          type: string
          description: The IBAN number for this bank account
    bank-account-details-request:
      title: Bank account details
      type: object
      description: The bank account details need to be one of the structures, either `ach` or `eft` or `iban` or `swift` or `clabe`.
      oneOf:
        - title: ACH
          properties:
            ach_details:
              $ref: '#/components/schemas/ach-details-request'
        - title: EFT
          properties:
            eft_details:
              $ref: '#/components/schemas/eft-details-request'
        - title: SWIFT
          properties:
            swift_details:
              $ref: '#/components/schemas/swift-details-request'
        - title: CLABE
          properties:
            clabe_details:
              $ref: '#/components/schemas/clabe-details-request'
        - title: IBAN
          properties:
            iban_details:
              $ref: '#/components/schemas/iban-details-request'
        - title: Wire
          properties:
            wire_details:
              $ref: '#/components/schemas/wire-details-request'
      x-internal: false
    spend-budget-response:
      title: Spend budget
      type: object
      description: The balance allocated to be spent by merchant category code grouping
      required:
        - mcc_group
        - balance
      properties:
        mcc_group:
          type: string
          description: The specific grouping of merchant category codes to which this budget applies. Supported groupings values are program specific
        balance:
          type: integer
          description: The remaining amount that was allocated for this budget
    wallet-transaction-type:
      type: string
      title: Transaction type
      description: Transaction types all transaction scopes
      enum:
        - ADJUSTMENT
        - BANK_CREDIT
        - BANK_DEBIT
        - BOOST
        - CARD_ISSUED_ADJUSTMENT
        - CARD_ISSUED_ATM_DEBIT
        - CARD_ISSUED_CREDIT
        - CARD_ISSUED_DEBIT
        - CARD_ISSUED_DISPUTE_CREDIT
        - CARD_ISSUED_DISPUTE_DEBIT
        - CARD_ISSUED_FEE
        - CARD_ISSUED_INITIAL
        - CARD_ISSUED_OTC_DEBIT
        - CARD_ISSUED_REISSUE
        - CARD_ISSUED_RESET
        - CARD_ISSUED_TERMINAL_CREDIT
        - CASH_LOADING
        - CASHBACK
        - CHARGEBACK
        - CHECK_DEPOSIT
        - CHECK_DEPOSIT_RETURN
        - CHECK_DISBURSEMENT
        - INTERNATIONAL_TRANSFER
        - LOAD_FUNDS
        - LOAD_PULLBACK
        - NEGATIVE_LOSS
        - PAYMENT
        - RECOVERY
        - REFUND
        - RETURN
        - REVERSAL
        - SERVICE_FEE
        - SERVICE_FEE_REVERSAL
        - TRANSFER
        - WALLET_TRANSFER
        - WITHDRAW_FUNDS
    transaction-status:
      title: Transaction status
      type: string
      description: |
        The transaction status details the current status of the transaction during its life-cycle.
      enum:
        - CREATED
        - PROCESSING
        - PROCESSING_PAYMENT
        - COMPLETED
        - FAILED
        - ERROR
        - VOIDED
        - PENDING
        - MANUAL_REVIEW
        - REJECTED
        - WAITING
        - CANCELED_USER
        - CANCELED_SYSTEM
    wallet-transaction-statement:
      title: Wallet transaction
      type: object
      description: Details of a transaction entity in Alviere's Wallets.
      x-internal: false
      required:
        - transaction_uuid
        - external_id
        - transaction_type
        - status
        - amount
        - created_at
        - updated_at
      properties:
        transaction_uuid:
          description: This field is Alviere's internal unique transaction identifier
          type: string
          format: uuid
        external_id:
          type: string
          description: |
            The ID of this transaction in your own platform. This ID can
            be used to identify the transaction as well as protect our API against duplicate transactions.

            NOTE: This field MUST be unique. Any collision on `external_id` will fail with a HTTP 409.
        transaction_type:
          $ref: '#/components/schemas/wallet-transaction-type'
        status:
          $ref: '#/components/schemas/transaction-status'
        amount:
          title: Transaction amount
          description: |
            The transaction amount in the currency of the transaction, defined in cents. 
            e.g. 1 USD will be represented as `amount: 100`
          type: integer
          example: 10032
          minimum: -99999999
          maximum: 99999999
        created_at:
          type: string
          format: date-time
          description: The date the transaction was created
        settled_at:
          type: string
          format: date-time
          description: The date the transaction funds settled
        updated_at:
          type: string
          format: date-time
          description: The date the transaction was last updated
    service-fee-release:
      title: Service fee
      type: object
      description: Service fee to be applied on a release
      required:
        - description
        - calc_type
        - category
      properties:
        external_id:
          type: string
          description: The unique identifier of the service fee transaction in your own system
        description:
          type: string
          description: |
            The description can be any descriptive text provided by the user to label the service fee transaction.
          minimum: 1
          maximum: 255
        calc_type:
          type: string
          description: |
            The calculation type in relation to the total amount released. For releases, the service fee can only be applied as a deduction to the transaction amount. For example, if a customer is performing a load transaction of $100 and there's a `PERCENT` service fee of 10%, the user would only load $90 on their account.
          enum:
            - DEDUCT
        category:
          type: object
          required:
            - release_fee
          properties:
            release_fee:
              type: object
              required:
                - value
              properties:
                value:
                  oneOf:
                    - title: Amount
                      description: 'Use this service fee value type if you want a fixed amount service fee to be applied to the release, in cents (eg. `value: 1000`).'
                      required:
                        - amount
                      properties:
                        amount:
                          type: integer
                          description: The amount is the value associated with the service fee, in cents.
                    - title: Percent
                      description: |-
                        Use this service fee value type if you want a service fee percentage to be applied on the total amount of the release. For example, if the total amount is $100 and you want to apply a 10% fee, you should set the property to `value: 10`

                        Set the `cap` field if you want the percentage amount to be capped to a certain amount. For example, if the total amount is $1000 and you want to apply a 10% fee capped to $50, you should set the `value: 10` and `cap: 5000`
                      required:
                        - percent
                      properties:
                        percent:
                          type: number
                          description: The percent value to apply to the service fee transaction
                          maximum: 100
                          format: float
                          example: 14.5
                          exclusiveMinimum: true
                        cap:
                          type: number
                          description: |-
                            The amount to cap the service fee in cents, e.g. If you want to debit 1 USD the value must be `value: 100` 

                            If `null` there's no cap for this service fee.
                          minimum: 1
                          maximum: 99999999
                          example: 100
                  type: object
    transaction-type:
      type: string
      title: Transaction type
      description: Transaction types all transaction scopes
      enum:
        - ACH_PRENOTE
        - ADJUSTMENT
        - BANK_CREDIT
        - BANK_DEBIT
        - BANK_PASSTHROUGH
        - BOOST
        - CARD_ISSUED_ADJUSTMENT
        - CARD_ISSUED_ATM_DEBIT
        - CARD_ISSUED_CREDIT
        - CARD_ISSUED_DEBIT
        - CARD_ISSUED_DISPUTE_CREDIT
        - CARD_ISSUED_DISPUTE_DEBIT
        - CARD_ISSUED_FEE
        - CARD_ISSUED_INITIAL
        - CARD_ISSUED_OTC_DEBIT
        - CARD_ISSUED_REISSUE
        - CARD_ISSUED_RESET
        - CARD_ISSUED_TERMINAL_CREDIT
        - CARD_PASSTHROUGH
        - CASH_LOADING
        - CASHBACK
        - CHARGEBACK
        - CHECK_DEPOSIT
        - CHECK_DEPOSIT_RETURN
        - CHECK_DISBURSEMENT
        - EXTERNAL_CREDIT
        - EXTERNAL_DEBIT
        - INTERNATIONAL_TRANSFER
        - INTERNAL_CREDIT
        - LOAD_FUNDS
        - LOAD_PULLBACK
        - NEGATIVE_LOSS
        - PAYMENT
        - PREFUND
        - RECOVERY
        - REFUND
        - REFUND_PASSTHROUGH
        - RETURN
        - REVERSAL
        - SERVICE_FEE
        - SERVICE_FEE_REVERSAL
        - TRANSIT_TRANSFER
        - TRANSFER
        - WALLET_TRANSFER
        - WITHDRAW_FUNDS
    merchant-address:
      title: Merchant address
      type: object
      description: Details of a merchant address
      properties:
        line_1:
          title: Address Line One
          description: Address line 1 (e.g., street, PO Box, or company name - NOTE that newline characters are not accepted)
          type: string
          pattern: ^[ a-zA-Z0-9._-]$
          example: 101 Avenue of the Americas
          minLength: 2
          maxLength: 128
        line_2:
          title: Address Line Two
          description: Address line 2 (e.g., apartment, suite, unit, or building - NOTE that newline characters are not accepted)
          type: string
          pattern: ^[ a-zA-Z0-9._-]$
          example: Suite 936
          minLength: 1
          maxLength: 128
        postal_code:
          title: Postal Code
          description: ZIP or postal code
          type: string
          pattern: ^[ a-zA-Z0-9._-]$
          example: '10013'
          maxLength: 20
          minLength: 2
        city:
          title: City
          description: City, district, suburb, town, or village
          type: string
          pattern: ^[ a-zA-Z0-9._-]$
          example: New York
          minLength: 2
          maxLength: 128
        state:
          type: string
          title: State
          description: State, county, province, or region
          pattern: ^[ a-zA-Z0-9._-]$
          example: NY
          minLength: 2
          maxLength: 128
        country:
          title: Country
          description: Three-letter country code (ISO 3166-1 alpha-3).
          type: string
          pattern: ^[A-Z]$
          example: USA
          minLength: 3
          maxLength: 3
    merchant-details:
      title: Merchant details
      type: object
      description: Details of a merchant
      properties:
        name:
          title: Address Line One
          description: Merchant's name
          type: string
        merchant_id:
          type: string
          description: A unique string to identify the Merchant
        address:
          $ref: '#/components/schemas/merchant-address'
          description: Merchant's address
        email_address:
          title: Postal Code
          description: Merchant's e-mail address
          type: string
        phone_number:
          type: string
          title: State
          description: Merchant's phone number
        url:
          title: City
          description: Merchant's homepage
          type: string
      required:
        - name
        - merchant_id
    bank-account-details-request-ach-only:
      title: Bank account details
      description: Bank account details for ACH accounts
      oneOf:
        - title: ACH
          properties:
            ach_details:
              $ref: '#/components/schemas/ach-details-request'
      x-internal: false
      type: object
    funding-instrument-response-check:
      title: Funding instrument
      type: object
      description: Details of the instrument used to fund this check
      x-internal: false
      properties:
        funding_instrument_uuid:
          type: string
          description: Unique ID of the funding instrument
        bank_account_details:
          $ref: '#/components/schemas/bank-account-details-request-ach-only'
    release:
      title: Release
      type: object
      description: Registry of an early release of funds for a transaction before it has settled in the system. Only shown in endpoints that return single transactions
      properties:
        release_uuid:
          type: string
          description: Unique ID of the Release
        external_id:
          type: string
          description: The ID of the Release in your system
        created_at:
          type: string
          format: date-time
          description: The date the Release was created
        release_amount:
          type: integer
          description: The amount that was released
        service_fees:
          type: array
          description: IDs of service fees associated with this release
          items:
            type: string
            format: uuid
      required:
        - release_uuid
        - external_id
        - created_at
        - release_amount
    wallet-transaction-list:
      title: Wallet transaction
      type: object
      description: Details of a transaction entity in Alviere's Wallets.
      x-internal: false
      required:
        - transaction_uuid
        - wallet_uuid
        - account_uuid
        - external_id
        - transaction_type
        - status
        - description
        - amount
        - currency
        - refunded
        - created_at
        - updated_at
      properties:
        transaction_uuid:
          description: This field is Alviere's internal unique transaction identifier
          type: string
          format: uuid
        parent_transaction_uuid:
          title: Parent transaction
          description: |
            This field is Alviere's internal unique transaction identifier for the parent transaction of the current transaction.
            In most cases, this indicates that the actual transaction was a refund of the parent.
            Please note that this field will only be present, when appropriate.
          type: string
          format: uuid
        wallet_uuid:
          type: string
          description: UUID of the wallet to which this transaction belongs
          format: uuid
        account_uuid:
          type: string
          description: UUID of the account to which this transaction belongs
        external_id:
          type: string
          description: |
            The ID of this transaction in your own platform. This ID can
            be used to identify the transaction as well as protect our API against duplicate transactions.

            NOTE: This field MUST be unique. Any collision on `external_id` will fail with a HTTP 409.
        beneficiary_uuid:
          type: string
          description: If the transaction is related to the transfer of funds to a Beneficiary, this field will contain the UUID of the Beneficiary
          format: uuid
        payout_method_uuid:
          type: string
          description: 'If the transaction is related to the transfer of funds to a Beneficiary, this field will contain the UUID of applicable Payout Method  '
        receipt_uuid:
          description: Receipt identifier for a given transaction
          type: string
          format: uuid
        transaction_type:
          $ref: '#/components/schemas/wallet-transaction-type'
        status:
          $ref: '#/components/schemas/transaction-status'
        status_reason:
          type: string
          example: AUTH_BACKOUT
          description: The reason why a transaction might be in a particular status
        description:
          type: string
          description: |
            The description can be any descriptive text provided by the provider accompany the transaction.
        amount:
          title: Transaction amount
          description: |
            The transaction amount in the currency of the transaction, defined in cents. 
            e.g. 1 USD will be represented as `amount: 100`
          type: integer
          example: 10032
          minimum: -99999999
          maximum: 99999999
        currency:
          description: The currency code in ISO-4217 format.
          type: string
          example: USD
        type_details:
          type: object
          description: Additional details applying to specific transaction types
          properties:
            global_payments_details:
              type: object
              description: If this transaction is related to an `INTERNATIONAL_TRANSFER`, this structure will show additional details
              required:
                - exchange_rate
              properties:
                exchange_rate:
                  type: string
                  description: Exchange rate applied to this international transaction
                  example: '1.52233'
                ready_for_collection:
                  type: string
                  format: date-time
                  description: Time the funds are available to be collected at
                collected_at:
                  type: string
                  format: date-time
                  description: Time the funds were collected by the beneficiary
                transaction_reference:
                  type: string
                  description: A reference for the Beneficiary to provide to the cash pickup location on pickup
                transaction_purpose:
                  type: string
                  description: The purpose of the transaction
                source_of_funds:
                  type: string
                  description: The source of funds of the transaction
            issued_card_details:
              type: object
              description: If this transation is related to an issued card, this structure will show additional details
              required:
                - issued_card_uuid
              properties:
                issued_card_uuid:
                  type: string
                  format: uuid
                  description: The uuid of the issued card that was used to fund this transaction
                merchant_name:
                  type: string
                  example: STARBUCKS
                  description: Merchant where the transaction ocurred
                merchant_id:
                  type: string
                  description: Id of the merchant where the transaction ocurred
                  example: '123456'
                merchant_category_code:
                  type: string
                  description: Four-digit number used to classify individual purchases according the type of merchant where they were made
                terminal_id:
                  type: string
                  example: '00010102'
                  description: The ID for the device that acquired the card information.
                network:
                  type: string
                  description: The network where the transaction was processed
                  enum:
                    - MASTERCARD
                    - MAESTRO
                    - VISA
                    - STAR
                    - MONEYPASS
                    - ALLPOINT
                    - CIRRUS
                    - DISCOVER
                    - PRESTO
                    - PULSE
                  example: VISA
                subnetwork:
                  type: string
                  description: The subnetwork where the transaction was processed
                  enum:
                    - BANKNET
                    - DEBIT_SWITCH
                    - VISA
                    - INTERLINK
                    - STAR
                    - MONEYPASS
                    - ALLPOINT
                    - DISCOVER
                    - PRESTO
                    - PULSE
                    - PLUS
                    - READYLINK
                  example: INTERLINK
                is_international:
                  type: boolean
                  description: If ``TRUE`` the transaction is international
                dispute_details:
                  type: object
                  description: Dispute information for card transactions
                  properties:
                    status:
                      type: string
                      enum:
                        - OPEN
                        - PENDING
                        - WON
                        - LOST
                        - CLOSED
                      description: High-level dispute status
                    status_reason:
                      type: string
                      enum:
                        - FILED
                        - AWAITING_DOCUMENTATION
                        - UNDER_REVIEW
                        - MERCHANT_RESPONSE_PENDING
                        - ESCALATED
                        - FINAL_REVIEW
                        - RESOLVED_IN_FAVOR
                        - RESOLVED_AGAINST
                        - ADMINISTRATIVE_CLOSURE
                      description: Current lifecycle stage
                    dispute_reason:
                      type: string
                      enum:
                        - FRAUD
                        - AUTHORIZATION_ISSUE
                        - MERCHANT_ERROR
                        - SERVICE_ISSUE
                        - PROCESSING_ERROR
                        - OTHER
                      description: Why the dispute was filed
            payments_details:
              type: object
              description: If this transaction is related to a payment processing transaction, this structure may show additional details
              properties:
                trace_number:
                  type: string
                  description: Trace number associated with the payment transaction
                company_identification:
                  type: string
                  description: Identification of the originator assigned by the ODFI
                company_name:
                  type: string
                  description: Name of the Originator known and recognized by the receiver of the transaction
                cash_loading:
                  type: object
                  required:
                    - cash_loading_location
                  properties:
                    cash_loading_location:
                      type: object
                      description: Store-specific data
                      required:
                        - store_network_id
                        - terminal_id
                        - store_name
                      properties:
                        store_network_id:
                          type: string
                          description: ID of the store where the transaction was created
                          example: '123345'
                        terminal_id:
                          type: string
                          description: ID of the terminal where the transaction was processed
                          example: '25476001'
                        store_name:
                          type: string
                          description: Name of the store
                        barcode_data:
                          type: string
                          description: Barcode data associated with the transaction
                          example: "123456789012"
                card_processing:
                  type: object
                  description: Additional details for card processing related transactions
                  required:
                    - auth_type
                  properties:
                    auth_type:
                      description: Authorization type
                      enum:
                        - AUTH
                        - AUTHCAP
                    3ds_details:
                      type: object
                      description: Details related to 3D Secure
                      properties:
                        redirect_url:
                          type: string
                          description: URL to redirect end consumer to in order to authorize transaction with card issuer
                        3ds_result:
                          type: string
                          description: Results of the 3-D Secure process
                        enrolled:
                          type: boolean
                          description: Whether the card is enrolled in 3-D Secure in their issuer bank
                        3ds_preference:
                          enum:
                            - ENABLED
                            - DISABLED
                            - DOWNGRADE_ALLOWED
                          description: The preferred type of 3-D Secure flow for the transaction
                        3ds_challenge_indicator:
                          enum:
                            - NO_CHALLENGE_REQUESTED
                            - CHALLENGE_REQUESTED
                            - CHALLENGE_REQUESTED_MANDATE
                            - NO_PREFERENCE
                          description: Whether an indicator was sent to the provider about the 3DS challenge preference
                    merchant_details:
                      $ref: '#/components/schemas/merchant-details'
        funds_source_type:
          enum:
            - BANK_PM
            - CARD_PM
            - CASH
            - WALLET
          description: Source of funds for transaction funded via a passthrough transaction
        funds_source:
          oneOf:
            - title: Bank account (DDA)
              properties:
                origin_bank:
                  type: string
                  description: The name of the origin bank for this bank credit.
                  example: CHASE BANK
                is_payroll:
                  type: boolean
                  description: If the bank account transaction relates to payroll, this propoerty will be true.
                payroll_date:
                  type: string
                  format: date
                  description: If transaction corresponds to a payroll, this is expected settlement date. If early pay is enabled for this wallet, the transaction could be generally settled up to two days in advance of this date
                account_verification:
                  type: boolean
                  description: Whether the transaction purpose was to verify the validity of the account
            - title: Payment method
              properties:
                payment_method_uuid:
                  type: string
                  description: When the transaction was performed using a payment method linked to this account, this property will hold the uuid of payment method token (eg. a debit card, a bank account, etc).
                settled_at:
                  type: string
                  format: date-time
                  description: The date the child passthrough transaction settled
            - title: Check
              properties:
                check_uuid:
                  type: string
                  description: The uuid of the deposited check.
                  format: uuid
                check_released_amount:
                  type: integer
                  example: 10032
                  minimum: -99999999
                  maximum: 99999999
                  description: |-
                    For a `CHECK_DEPOSIT` transaction, the amount that has been released, defined in cents. 
                    e.g. 1 USD will be represented as `amount: 100`
                funding_instrument_details:
                  $ref: '#/components/schemas/funding-instrument-response-check'
            - title: Payment Instrument
              properties:
                payment_instrument_uuid:
                  type: string
                  description: Unique identifier of the payment instrument
          type: object
        refunded:
          description: |
            This flag indicates if this transaction has been refunded.
          type: boolean
          default: false
        refund_reason:
          type: string
          description: If `refunded` is `TRUE`, reason why the transaction was refunded
        disputed:
          type: boolean
          description: For `PAYMENT` transactions, if `TRUE` a chargeback has been received for this transaction
        created_at:
          type: string
          format: date-time
          description: The date the transaction was created
        settled_at:
          type: string
          format: date-time
          description: The date the transaction funds settled
        updated_at:
          type: string
          format: date-time
          description: The date the transaction was last updated
        transaction_options:
          type: object
          properties:
            payment_options:
              type: object
              properties:
                ACH_type:
                  type: string
                  enum:
                    - SAME_DAY
                    - NEXT_DAY
                prefund:
                  type: string
                  description: If `FALSE`, prefunding has been disabled for this transaction. If `TRUE`, prefunding has been enabled for this transaction. If not returned, default program configuration applies.
        release_details:
          type: object
          description: Details related to early releases of funds. Only applicable for transactions that support this feature
          properties:
            releasable_amount:
              type: integer
              description: Total amount that can be released early for a transaction. Number includes existing releases and fees
        metadata:
          type: object
          description: Allows for any number of custom metadata keys and values to be stored with a given transaction
    wallet-transaction:
      title: Wallet transaction
      type: object
      description: Details of a transaction entity in Alviere's Wallets.
      x-internal: false
      required:
        - transaction_uuid
        - wallet_uuid
        - account_uuid
        - external_id
        - transaction_type
        - status
        - description
        - amount
        - currency
        - refunded
        - created_at
        - updated_at
      properties:
        transaction_uuid:
          description: This field is Alviere's internal unique transaction identifier
          type: string
          format: uuid
        parent_transaction_uuid:
          title: Parent transaction
          description: |
            This field is Alviere's internal unique transaction identifier for the parent transaction of the current transaction.
            In most cases, this indicates that the actual transaction was a refund of the parent.
            Please note that this field will only be present, when appropriate.
          type: string
          format: uuid
        wallet_uuid:
          type: string
          description: UUID of the wallet to which this transaction belongs
          format: uuid
        account_uuid:
          type: string
          description: UUID of the account to which this transaction belongs
        external_id:
          type: string
          description: |
            The ID of this transaction in your own platform. This ID can
            be used to identify the transaction as well as protect our API against duplicate transactions.

            NOTE: This field MUST be unique. Any collision on `external_id` will fail with a HTTP 409.
        beneficiary_uuid:
          type: string
          description: If the transaction is related to the transfer of funds to a Beneficiary, this field will contain the UUID of the Beneficiary
          format: uuid
        payout_method_uuid:
          type: string
          description: 'If the transaction is related to the transfer of funds to a Beneficiary, this field will contain the UUID of applicable Payout Method  '
        receipt_uuid:
          description: Receipt identifier for a given transaction
          type: string
          format: uuid
        transaction_type:
          $ref: '#/components/schemas/wallet-transaction-type'
        status:
          $ref: '#/components/schemas/transaction-status'
        status_reason:
          type: string
          example: AUTH_BACKOUT
          description: The reason why a transaction might be in a particular status
        description:
          type: string
          description: |
            The description can be any descriptive text provided by the provider accompany the transaction.
        amount:
          title: Transaction amount
          description: |
            The transaction amount in the currency of the transaction, defined in cents. 
            e.g. 1 USD will be represented as `amount: 100`
          type: integer
          example: 10032
          minimum: -99999999
          maximum: 99999999
        currency:
          description: The currency code in ISO-4217 format.
          type: string
          example: USD
        type_details:
          type: object
          description: Additional details applying to specific transaction types
          properties:
            global_payments_details:
              type: object
              description: If this transaction is related to an `INTERNATIONAL_TRANSFER`, this structure will show additional details
              required:
                - exchange_rate
              properties:
                exchange_rate:
                  type: string
                  description: Exchange rate applied to this international transaction
                  example: '1.52233'
                ready_for_collection:
                  type: string
                  format: date-time
                  description: Time the funds are available to be collected at
                collected_at:
                  type: string
                  format: date-time
                  description: Time the funds were collected by the beneficiary
                transaction_reference:
                  type: string
                  description: A reference for the Beneficiary to provide to the cash pickup location on pickup
                transaction_purpose:
                  type: string
                  description: The purpose of the transaction
                source_of_funds:
                  type: string
                  description: The source of funds of the transaction
            issued_card_details:
              type: object
              description: If this transation is related to an issued card, this structure will show additional details
              required:
                - issued_card_uuid
              properties:
                issued_card_uuid:
                  type: string
                  format: uuid
                  description: The uuid of the issued card that was used to fund this transaction
                merchant_name:
                  type: string
                  example: STARBUCKS
                  description: Merchant where the transaction ocurred
                merchant_id:
                  type: string
                  description: Id of the merchant where the transaction ocurred
                  example: '123456'
                merchant_category_code:
                  type: string
                  description: Four-digit number used to classify individual purchases according the type of merchant where they were made
                terminal_id:
                  type: string
                  example: '00010102'
                  description: The ID for the device that acquired the card information.
                network:
                  type: string
                  description: The network where the transaction was processed
                  enum:
                    - MASTERCARD
                    - MAESTRO
                    - VISA
                    - STAR
                    - MONEYPASS
                    - ALLPOINT
                    - CIRRUS
                    - DISCOVER
                    - PRESTO
                    - PULSE
                  example: VISA
                subnetwork:
                  type: string
                  description: The subnetwork where the transaction was processed
                  enum:
                    - BANKNET
                    - DEBIT_SWITCH
                    - VISA
                    - INTERLINK
                    - STAR
                    - MONEYPASS
                    - ALLPOINT
                    - DISCOVER
                    - PRESTO
                    - PULSE
                    - PLUS
                    - READYLINK
                  example: INTERLINK
                is_international:
                  type: boolean
                  description: If ``TRUE`` the transaction is international
                dispute_details:
                  type: object
                  description: Dispute information for card transactions
                  properties:
                    status:
                      type: string
                      enum:
                        - OPEN
                        - PENDING
                        - WON
                        - LOST
                        - CLOSED
                      description: High-level dispute status
                    status_reason:
                      type: string
                      enum:
                        - FILED
                        - AWAITING_DOCUMENTATION
                        - UNDER_REVIEW
                        - MERCHANT_RESPONSE_PENDING
                        - ESCALATED
                        - FINAL_REVIEW
                        - RESOLVED_IN_FAVOR
                        - RESOLVED_AGAINST
                        - ADMINISTRATIVE_CLOSURE
                      description: Current lifecycle stage
                    dispute_reason:
                      type: string
                      enum:
                        - FRAUD
                        - AUTHORIZATION_ISSUE
                        - MERCHANT_ERROR
                        - SERVICE_ISSUE
                        - PROCESSING_ERROR
                        - OTHER
                      description: Why the dispute was filed
            payments_details:
              type: object
              description: If this transaction is related to a payment processing transaction, this structure may show additional details
              properties:
                trace_number:
                  type: string
                  description: Trace number associated with the payment transaction
                company_identification:
                  type: string
                  description: Identification of the originator assigned by the ODFI
                company_name:
                  type: string
                  description: Name of the Originator known and recognized by the receiver of the transaction
                cash_loading:
                  type: object
                  required:
                    - cash_loading_location
                  properties:
                    cash_loading_location:
                      type: object
                      description: Store-specific data
                      required:
                        - store_network_id
                        - terminal_id
                        - store_name
                      properties:
                        store_network_id:
                          type: string
                          description: ID of the store where the transaction was created
                          example: '123345'
                        terminal_id:
                          type: string
                          description: ID of the terminal where the transaction was processed
                          example: '25476001'
                        store_name:
                          type: string
                          description: Name of the store
                        barcode_data:
                          type: string
                          description: Barcode data associated with the transaction
                          example: "123456789012"
                card_processing:
                  type: object
                  description: Additional details for card processing related transactions
                  required:
                    - auth_type
                  properties:
                    auth_type:
                      description: Authorization type
                      enum:
                        - AUTH
                        - AUTHCAP
                    3ds_details:
                      type: object
                      description: Details related to 3D Secure
                      properties:
                        redirect_url:
                          type: string
                          description: URL to redirect end consumer to in order to authorize transaction with card issuer
                        3ds_result:
                          type: string
                          description: Results of the 3-D Secure process
                        enrolled:
                          type: boolean
                          description: Whether the card is enrolled in 3-D Secure in their issuer bank
                        3ds_preference:
                          enum:
                            - ENABLED
                            - DISABLED
                            - DOWNGRADE_ALLOWED
                          description: The preferred type of 3-D Secure flow for the transaction
                        3ds_challenge_indicator:
                          enum:
                            - NO_CHALLENGE_REQUESTED
                            - CHALLENGE_REQUESTED
                            - CHALLENGE_REQUESTED_MANDATE
                            - NO_PREFERENCE
                          description: Whether an indicator was sent to the provider about the 3DS challenge preference
                    merchant_details:
                      $ref: '#/components/schemas/merchant-details'
        funds_source_type:
          enum:
            - BANK_PM
            - CARD_PM
            - CASH
            - WALLET
          description: Source of funds for transaction funded via a passthrough transaction
        funds_source:
          oneOf:
            - title: Bank account (DDA)
              properties:
                origin_bank:
                  type: string
                  description: The name of the origin bank for this bank credit.
                  example: CHASE BANK
                is_payroll:
                  type: boolean
                  description: If the bank account transaction relates to payroll, this propoerty will be true.
                payroll_date:
                  type: string
                  format: date
                  description: If transaction corresponds to a payroll, this is expected settlement date. If early pay is enabled for this wallet, the transaction could be generally settled up to two days in advance of this date
                account_verification:
                  type: boolean
                  description: Whether the transaction purpose was to verify the validity of the account
            - title: Payment method
              properties:
                payment_method_uuid:
                  type: string
                  description: When the transaction was performed using a payment method linked to this account, this property will hold the uuid of payment method token (eg. a debit card, a bank account, etc).
                settled_at:
                  type: string
                  format: date-time
                  description: The date the child passthrough transaction settled
            - title: Check
              properties:
                check_uuid:
                  type: string
                  description: The uuid of the deposited check.
                  format: uuid
                check_released_amount:
                  type: integer
                  example: 10032
                  minimum: -99999999
                  maximum: 99999999
                  description: |-
                    For a `CHECK_DEPOSIT` transaction, the amount that has been released, defined in cents. 
                    e.g. 1 USD will be represented as `amount: 100`
                funding_instrument_details:
                  $ref: '#/components/schemas/funding-instrument-response-check'
            - title: Payment Instrument
              properties:
                payment_instrument_uuid:
                  type: string
                  description: Unique identifier of the payment instrument
          type: object
        refunded:
          description: |
            This flag indicates if this transaction has been refunded.
          type: boolean
          default: false
        refund_reason:
          type: string
          description: If `refunded` is `TRUE`, reason why the transaction was refunded
        disputed:
          type: boolean
          description: For `PAYMENT` transactions, if `TRUE` a chargeback has been received for this transaction
        created_at:
          type: string
          format: date-time
          description: The date the transaction was created
        settled_at:
          type: string
          format: date-time
          description: The date the transaction funds settled
        updated_at:
          type: string
          format: date-time
          description: The date the transaction was last updated
        transaction_options:
          type: object
          properties:
            payment_options:
              type: object
              properties:
                ACH_type:
                  type: string
                  enum:
                    - SAME_DAY
                    - NEXT_DAY
                prefund:
                  type: string
                  description: If `FALSE`, prefunding has been disabled for this transaction. If `TRUE`, prefunding has been enabled for this transaction. If not returned, default program configuration applies.
        release_details:
          type: object
          description: Details related to early releases of funds. Only applicable for transactions that support this feature
          properties:
            releasable_amount:
              type: integer
              description: Total amount that can be released early for a transaction. Number includes existing releases and fees
            releases:
              type: array
              items:
                $ref: '#/components/schemas/release'
        metadata:
          type: object
          description: Allows for any number of custom metadata keys and values to be stored with a given transaction
    spend-budget-request:
      title: Spend budget
      type: object
      description: The balance allocated to be spent by merchant category code grouping
      required:
        - mcc_group
        - amount
      properties:
        mcc_group:
          type: string
          description: The specific grouping of merchant category codes to which this budget applies. Supported groupings values are program specific
        amount:
          type: integer
          description: The total amount that be loaded/adjustedfor this spend budget
    beneficiary-address:
      title: Beneficiary address
      type: object
      description: Details of a beneficiary address. For country specific requirements, please consult our guides
      properties:
        line_1:
          title: Address Line One
          description: Address line 1 (e.g., street, PO Box, or company name - NOTE that newline characters are not accepted)
          type: string
        line_2:
          title: Address Line Two
          description: Address line 2 (e.g., apartment, suite, unit, or building - NOTE that newline characters are not accepted)
          type: string
        postal_code:
          title: Postal Code
          description: ZIP or postal code
          type: string
        city:
          title: City
          description: City, district, suburb, town, or village
          type: string
        state:
          type: string
          title: State
          description: State, county, province, or region
        country:
          title: Country
          description: Three-letter country code (ISO 3166-1 alpha-3).
          type: string
          pattern: ^[A-Z]{3}$
          example: USA
    ach-details-response:
      title: ACH details Response
      type: object
      description: Structure representing bank account details required to transfer funds over the ACH payment network (USA only)
      x-internal: false
      required:
        - routing_number
        - account_number_last_4
        - type
      properties:
        routing_number:
          type: string
          description: The ACH Routing Number for this bank account
          example: '213423001'
        account_number_last_4:
          type: string
          description: The account number last 4 digits for this bank account
          example: '9012'
        type:
          enum:
            - CHECKING
            - SAVINGS
            - GENERAL_LEDGER
            - LOAN
          description: The bank account type
    eft-details-response:
      title: EFT details
      type: object
      description: Structure representing bank account details required to transfer funds over the EFT payment network (Canada only)
      properties:
        transit_number:
          type: string
          description: The transit number
          example: '4112349012'
        institution_code:
          type: string
          description: The unique institution code
          example: '2134340017'
        account_number_last_4:
          type: string
          description: The account number last 4 digits for this bank account
          example: '9012'
      required:
        - transit_number
        - institution_code
        - account_number_last_4
      x-internal: false
    swift-details-response:
      title: SWIFT details
      type: object
      description: Structure representing bank account details required to transfer funds over the SWIFT international payment network
      x-internal: false
      required:
        - account_number_last_4
      properties:
        bic:
          type: string
          description: The account SWIFT/BIC code for this bank account
          example: R233R2343XXX
        account_number_last_4:
          type: string
          description: The account number last 4 digits for this bank account
          example: '9012'
        bank_code:
          type: string
          description: Code assigned to the bank
        branch_code:
          type: string
          description: Unique identifier for each given bank branch
        type:
          enum:
            - CHECKING
            - SAVINGS
          description: Account type
        bank_name:
          type: string
          description: The name of the Bank
        bank_uuid:
          type: string
          description: The unique UUID of the Bank
    clabe-details-response:
      title: CLABE response
      description: Structure representing bank account details required to transfer funds over the CLABE payment network (Mexico only)
      type: object
      properties:
        bic_code:
          type: string
          description: The account SWIFT/BIC code for this bank account
          example: R233R2343XXX
        clabe_number_last_4:
          type: string
          description: The CLABE number last 4 digits for this bank account
          example: '9012'
      required:
        - bic_code
        - clabe_number_last_4
      x-internal: false
    iban-details-response:
      title: IBAN details
      description: Structure representing bank account details required to transfer funds over payment networks that support IBAN format bank accounts (e.g., SEPA)
      type: object
      x-internal: false
      required:
        - iban_number_last_4
      properties:
        bic:
          type: string
          description: The account SWIFT/BIC code for this bank account
        iban_number_last_4:
          type: string
          description: The IBAN number last 4 digits for this bank account
    bank-account-details-response:
      title: Bank account details
      description: The bank account details need to be one of the structures, either `ach` or `eft` or `iban` or `swift` or `clabe`.
      oneOf:
        - title: ACH
          properties:
            ach_details:
              $ref: '#/components/schemas/ach-details-response'
        - title: EFT
          properties:
            eft_details:
              $ref: '#/components/schemas/eft-details-response'
        - title: SWIFT
          properties:
            swift_details:
              $ref: '#/components/schemas/swift-details-response'
        - title: CLABE
          properties:
            clabe_details:
              $ref: '#/components/schemas/clabe-details-response'
        - title: IBAN
          properties:
            iban_details:
              $ref: '#/components/schemas/iban-details-response'
      x-internal: false
      type: object
    cash-details-response:
      title: Cash pickup location details
      type: object
      description: Structure representing cash pickup location
      x-internal: false
      properties:
        cash_pickup_location_uuid:
          type: string
          description: The id of the location
      required:
        - cash_pickup_location_uuid
    payout-method-address:
      title: Payout method address
      type: object
      description: Details of a Payout method custom Address
      properties:
        line_1:
          title: Address Line One
          description: Address line 1 (e.g., street, PO Box, or company name - NOTE that newline characters are not accepted)
          type: string
          pattern: ^.{2,128}$
          example: 101 Avenue of the Americas
        line_2:
          title: Address Line Two
          description: Address line 2 (e.g., apartment, suite, unit, or building - NOTE that newline characters are not accepted)
          type: string
          pattern: ^.{1,128}$
          example: Suite 936
        postal_code:
          title: Postal Code
          description: ZIP or postal code
          type: string
          pattern: ^.{5,9}$
          example: '10013'
        city:
          title: City
          description: City, district, suburb, town, or village
          type: string
          pattern: ^.{2,128}$
          example: New York
        state:
          type: string
          title: State
          description: State, county, province, or region
          pattern: ^[A-Z]{2,4}$
          example: NY
      required:
        - city
    payout-method-response:
      title: Payout method
      description: A Payout Method to disburse funds to a Beneficiary
      x-internal: false
      type: object
      properties:
        payout_method_uuid:
          type: string
          description: The unique identifier of the Payout Method
        external_id:
          type: string
          description: The ID of the Payout Method in your own system
        beneficiary_uuid:
          type: string
          description: 'The Beneficiary that owns this Payout Method '
        country:
          type: string
          description: The country of the Payout Method
        currency:
          type: string
          description: The currency of the Payout Method
        label:
          type: string
          description: A free-text label to identify the Payout Method
        status:
          description: The Payout Method status
          enum:
            - ACTIVE
            - DELETED
        primary:
          type: boolean
          description: Whether this is the primary Payout Method of the Beneficiary
        payout_method_details:
          oneOf:
            - title: Bank account
              properties:
                bank_account_details:
                  $ref: '#/components/schemas/bank-account-details-response'
            - title: Cash pickup location
              properties:
                cash_pickup_location:
                  $ref: '#/components/schemas/cash-details-response'
            - title: Electronic wallet
              properties:
                electronic_wallet:
                  type: object
                  description: An external electronic wallet
                  properties:
                    phone_number:
                      type: string
                      description: A phone number identifying the wallet, if applicable
                    email_address:
                      type: string
                      description: An email address identifying the wallet, if applicable
            - title: Card
              properties:
                card:
                  type: object
                  description: A credit/debit card
                  properties:
                    pan_last_4:
                      type: string
                      description: The card number (Primary Account Number)
                  required:
                    - pan_last_4
            - title: Address
              properties:
                address:
                  $ref: '#/components/schemas/payout-method-address'
          description: Details of the Payout Method
          type: object
        created_at:
          type: string
          description: The time the Payout Method was created
          format: date-time
        updated_at:
          type: string
          description: The time the Payout Method was last updated
          format: date-time
      required:
        - payout_method_uuid
        - external_id
        - beneficiary_uuid
        - country
        - currency
        - status
        - primary
        - payout_method_details
        - created_at
        - updated_at
    payout-method-request:
      title: Payout method
      description: A Payout Method to disburse funds to a Beneficiary
      x-internal: false
      type: object
      required:
        - external_id
        - primary
        - payout_method_details
      properties:
        external_id:
          type: string
          description: The ID of the Payout Method in your own system
        primary:
          type: boolean
          description: Whether this is the primary Payout Method of the Beneficiary
        country:
          type: string
          description: The country of the Payout Method. If not provided, the country of the Beneficiary will be used
        currency:
          type: string
          description: The currency of the Payout Method. If not provided, the currency of the Beneficiary will be used
        label:
          type: string
          description: A free-text label to identify the Payout Method
        payout_method_details:
          oneOf:
            - title: Bank account
              properties:
                bank_account_details:
                  $ref: '#/components/schemas/bank-account-details-request'
            - title: Cash pickup location
              properties:
                cash_pickup_location:
                  $ref: '#/components/schemas/cash-details-response'
            - title: Electronic wallet
              properties:
                electronic_wallet:
                  type: object
                  description: An external electronic wallet
                  properties:
                    phone_number:
                      type: string
                      description: A phone number identifying the wallet, if applicable
                    email_address:
                      type: string
                      description: An email address identifying the wallet, if applicable
            - title: Card
              properties:
                card:
                  type: object
                  description: A credit/debit card
                  required:
                    - pan
                  properties:
                    pan:
                      type: string
                      description: The card number (Primary Account Number)
            - title: Address
              properties:
                address:
                  $ref: '#/components/schemas/payout-method-address'
          description: Details of the Payout Method
          type: object
    billing-address:
      title: Billing address
      type: object
      description: Details of a billing address
      properties:
        line_1:
          title: Address Line One
          description: Address line 1 (e.g., street, PO Box, or company name - NOTE that newline characters are not accepted)
          type: string
          pattern: '^[ a-zA-Z0-9._-]{2,128}$ '
          example: 101 Avenue of the Americas
          minLength: 2
          maxLength: 128
        line_2:
          title: Address Line Two
          description: Address line 2 (e.g., apartment, suite, unit, or building - NOTE that newline characters are not accepted)
          type: string
          pattern: '^[ a-zA-Z0-9._-]{1,128}$ '
          example: Suite 936
          minLength: 1
          maxLength: 128
        postal_code:
          title: Postal Code
          description: ZIP or postal code
          type: string
          pattern: '^[ a-zA-Z0-9._-]{2,50}$ '
          example: '10013'
          maxLength: 50
          minLength: 2
        city:
          title: City
          description: City, district, suburb, town, or village
          type: string
          pattern: '^[ a-zA-Z0-9._-]{2,128}$ '
          example: New York
          minLength: 2
          maxLength: 128
        state:
          type: string
          title: State
          description: State, county, province, or region
          pattern: '^[ a-zA-Z0-9._-]{2,128}$ '
          example: NY
          minLength: 2
          maxLength: 128
        country:
          title: Country
          description: Three-letter country code (ISO 3166-1 alpha-3).
          type: string
          pattern: '^[A-Z]{3}$'
          example: USA
          minLength: 3
          maxLength: 3
      required:
        - postal_code
    card-pm-request:
      title: Card
      type: object
      description: A card that can be used as a payment method
      required:
        - external_id
        - pan
        - exp_month
        - exp_year
        - security_code
      properties:
        external_id:
          type: string
          description: The unique identifier of the card in your own system
        pan:
          type: string
          description: The Payment Card Number, a.k.a Primary Account Number (PAN)
          example: '4111111111111111'
          pattern: ^[0-9]{14,19}$
        exp_month:
          type: string
          description: Expiration month of the card
          pattern: ^(0?[1-9]|1[012])$
          example: '01'
        exp_year:
          type: string
          description: Expiration year of the card
          example: '29'
          pattern: ^[0-9]{2}$
        postal_code:
          type: string
          pattern: ^.{5,9}$
          deprecated: true
          description: The postal code associated with the billing address of the card (DEPRECATED, please use the `billing_address` object instead)
        billing_address:
          $ref: '#/components/schemas/billing-address'
        name_on_card:
          type: string
          example: John Doe
          description: The name of the cardholder as it shows on the face of the card
        security_code:
          type: string
          description: Card CVC or CVV code
          example: '123'
          pattern: ^[0-9]{3,4}$
        metadata:
          type: object
          description: |
            Allows for any number of custom metadata keys and values to be stored with a given entity
        3ds_options:
          type: object
          properties:
            3ds_preference:
              enum:
                - DISABLED
                - ENABLED
                - DOWNGRADE_ALLOWED
            3ds_challenge_indicator:
              enum:
                - NO_CHALLENGE_REQUESTED
                - CHALLENGE_REQUESTED
                - CHALLENGE_REQUESTED_MANDATE
                - NO_PREFERENCE
              description: Whether an indicator was sent to the provider about the 3DS challenge preference
    bank-account-pm-request:
      title: Bank account
      type: object
      description: A bank account that can be used as a payment method
      x-internal: false
      properties:
        external_id:
          type: string
          description: The unique identifier of the bank account in your own system
        country:
          type: string
          description: Three-letter country code (ISO 3166-1 alpha-3) of the bank account
          example: USA
          pattern: ^[A-Z]{3}$
        currency:
          type: string
          description: The bank's currency code in ISO-4217 format
        bank_account_details:
          $ref: '#/components/schemas/bank-account-details-request'
        metadata:
          type: object
          description: Allows for any number of custom metadata keys and values to be stored with a given entity
      required:
        - external_id
        - country
        - currency
        - bank_account_details
    card-instrument-request:
      title: Card instrument
      type: object
      description: Card used as a payment instrument
      
      properties:
        pan:
          type: string
          description: Card full PAN
        exp_month:
          type: string
          description: Expiration month
        exp_year:
          type: string
          description: Expiration year
        security_code:
          type: string
          description: Card security code
        name_on_card:
          type: string
        phone_number:
          type: string
        email_address:
          type: string
        billing_address:
          $ref: '#/components/schemas/billing-address'
      required:
        - pan
        - exp_month
        - exp_year
        - security_code
        - name_on_card
        - billing_address
    payment-instrument-request:
      title: Payment Instrument
      type: object
      description: Card used as a Payment Instrument
      properties:
        account_uuid:
          type: string
          description: The UUID of the Account that owns this Payment Instrument
        external_id:
          type: string
          description: This is your unique ID for this instrument. This field is used to guarantee idempotency.
        payment_instrument_type:
          enum:
            - CARD
          description: Type of Payment Instrument
        payment_instrument_details:
          oneOf:
            - properties:
                card:
                  $ref: '#/components/schemas/card-instrument-request'
                  description: Payment instrument of type card
          description: Details of the Payment Instrument
          type: object
        metadata:
          type: string
          description: Allows for any number of custom metadata keys and values to be stored with a given entity
      required:
        - account_uuid
        - payment_instrument_type
        - payment_instrument_details
    card-instrument-response:
      title: Card instrument
      type: object
      description: Card used as a payment instrument
      
      properties:
        pan_last_4:
          type: string
          description: Last 4 digits of the PAN
        expiration_month:
          type: string
          description: Expiration month
        expiration_year:
          type: string
          description: Expiration year
        brand:
          type: string
          description: Card network
        type:
          enum:
            - CREDIT
            - DEBIT
          description: Whether the card is debit, credit, prepaid, etc.
        name_on_card:
          type: string
        phone_number:
          type: string
        email_address:
          type: string
        billing_address:
          $ref: '#/components/schemas/billing-address'
        validations:
          type: object
          required:
            - avs_result
            - cvv_result
          description: Validations performed on the card
          properties:
            avs_result:
              type: string
              description: Result of AVS check
            cvv_result:
              type: string
              description: Result of CVV check
      required:
        - pan_last_4
        - expiration_month
        - expiration_year
        - brand
        - type
        - name_on_card
        - billing_address
        - validations
    payment-instrument-response:
      title: Payment Instrument
      type: object
      description: Card used as a Payment Instrument
      properties:
        payment_instrument_uuid:
          type: string
          description: The unique ID of a payment instrument
        external_id:
          type: string
          description: This is your unique ID for this instrument. This field is used to guarantee idempotency.
        account_uuid:
          type: string
          description: The unique ID of the Account that owns this Payment Instrument
        status:
          description: The status of the Payment Instrument
          enum:
            - ACTIVE
            - FAILED
            - DELETED
        status_reason:
          type: string
          description: The reason that the Payment Instrument is in a specific status
        payment_instrument_type:
          enum:
            - CARD
          description: Type of Payment Instrument
        payment_instrument_details:
          oneOf:
            - properties:
                card:
                  $ref: '#/components/schemas/card-instrument-response'
              required:
                - card
          description: Details of the Payment Instrument
          type: object
        metadata:
          type: string
        created_at:
          type: string
          description: The date the Payment Instrument was created
        updated_at:
          type: string
          description: The date the Payment Instrument was last updated
      required:
        - payment_instrument_uuid
        - external_id
        - account_uuid
        - payment_instrument_type
        - payment_instrument_details
        - created_at
        - updated_at
    card-token-response:
      title: Card token
      type: object
      description: A tokenized card
      x-internal: false
      properties:
        token:
          type: string
          format: uuid
          description: The unique token for this card. This is how you will identify this card in the future throughout the API
        external_id:
          type: string
          description: The unique identifier of the card in your own system
        brand:
          type: string
          enum:
            - VISA
            - MASTERCARD
            - AMEX
            - DINERS
            - DISCOVER
            - JCB
            - UNIONPAY
            - PULSE
            - STAR
            - NYCE
            - ACCEL
            - CU24
            - CCPAY
            - UNKNOWN
        type:
          type: string
          enum:
            - CREDIT
            - DEBIT
            - PREPAID
            - UNKNOWN
          description: The type of card
        country:
          type: string
          description: The 3-letter code of the country of issuance of the card
          example: USA
        last_4:
          type: string
          description: The last 4 digits of the card
          example: '0000'
          pattern: ^[0-9]{4}$
        status:
          type: string
          description: The status of the card
          enum:
            - CREATED
            - ACTIVE
            - FAILED
            - EXPIRED
            - REJECTED
            - DELETED
        flags:
          type: object
          description: Types of transactions supported by this card
          properties:
            load_supported:
              type: boolean
              description: If the card supports debit athorizations, enabling them to be used to load funds into an account wallet
              default: false
            withdraw_supported:
              type: boolean
              description: If the card supports the push-to-debit transaction types, enabling them to be used to withdraw funds from an account wallet
              default: false
          required:
            - load_supported
            - withdraw_supported
        created_at:
          type: string
          description: The date this card was created.
        updated_at:
          type: string
          description: The date this card was last updated.
      required:
        - token
        - external_id
        - brand
        - type
        - country
        - last_4
        - status
        - created_at
        - updated_at
    payment-instrument-request-adhoc:
      title: Payment instrument
      type: object
      description: Card or bank account used as a payment instrument
      properties:
        payment_instrument_type:
          enum:
            - CARD
          description: The type of Payment Instrument
        payment_instrument_details:
          oneOf:
            - properties:
                card:
                  $ref: '#/components/schemas/card-instrument-request'
                  description: Payment instrument of type card
              required:
                - card
          description: Details of a Payment Instrument
          type: object
      required:
        - payment_instrument_type
        - payment_instrument_details
    shipping-address:
      title: Shipping address
      type: object
      description: Shipping address details
      properties:
        line_1:
          type: string
          title: Address Line One
          description: Address line 1 (e.g., street, PO Box, or company name - NOTE that newline characters are not accepted)
          pattern: ^.{2,40}$
          example: 101 Avenue of the Americas
        line_2:
          type: string
          title: Address Line Two
          description: Address line 2 (e.g., apartment, suite, unit, or building - NOTE that newline characters are not accepted)
          pattern: ^.{1,30}$
          example: Suite 936
        postal_code:
          title: Postal Code
          description: ZIP or postal code
          type: string
          pattern: ^.{5,9}$
          example: '10013'
        city:
          title: City
          description: City, district, suburb, town, or village
          type: string
          pattern: ^.{2,128}$
          example: New York
        state:
          title: State
          description: State, county, province, or region
          type: string
          pattern: ^[A-Z]{2}$
          example: NY
        country:
          title: Country
          description: Three-letter country code (ISO 3166-1 alpha-3).
          type: string
          pattern: ^[A-Z]{3}$
          example: USA
      required:
        - line_1
        - postal_code
        - city
        - state
        - country
    issued-card-limit-request:
      title: Issued Card limit
      type: object
      description: Limit to facilitate the management and monitoring of card spending limits for specific categories and time frames.
      required:
        - amount
        - period
        - type
      properties:
        amount:
          type: integer
          description: The monetary value associated with a card transaction.
        period:
          type: integer
          description: ' The time span over which the card''s transaction history and limits are enforced in seconds.'
        type:
          enum:
            - ROLLING
            - DAILY
            - MONTHLY
            - ANNUAL
          description: Whether the limit is `ROLLING` or if it resets at the beginning of a day or month.
        merchant_information:
          oneOf:
            - title: MCC grouping
              required:
                - mcc_group
              properties:
                mcc_group:
                  type: string
                  description: The specific grouping of merchant category codes to which this limit applies. Supported groupings values are program specific
            - title: Merchant category codes
              required:
                - merchant_category_codes
              properties:
                merchant_category_codes:
                  type: array
                  description: Four-digit number listed in ISO 18245 for retail financial services. An MCC is used to classify a business by the types of goods or services it provides.
                  items:
                    type: string
            - title: Merchant ID
              required:
                - merchant_id
              properties:
                merchant_id:
                  type: string
                  description: Unique identifier of a merchant assigned by a network for payment processing purposes
          description: Information about the Merchant to which this limit will apply. If no merchant is provided, the limit will apply to all merchants
          type: object
    issued-card-limit-response:
      title: Issued Card limit
      type: object
      description: Limit to facilitate the management and monitoring of card spending limits for specific categories and time frames.
      required:
        - amount
        - period
        - type
      properties:
        amount:
          type: integer
          description: The limit amount to be applied
        remaining_amount:
          type: integer
          description: The remaining amount for the limit. Only returned for single card requests (no list cards)
        period:
          type: integer
          description: ' The time span over which the card''s transaction history and limits are enforced in seconds.'
        type:
          enum:
            - ROLLING
            - DAILY
            - MONTHLY
            - ANNUAL
          description: Whether the limit is `ROLLING` or if it resets at the beginning of a day or month.
        merchant_information:
          oneOf:
            - title: Merchant category codes
              required:
                - merchant_category_codes
              properties:
                merchant_category_codes:
                  type: array
                  description: Four-digit number listed in ISO 18245 for retail financial services. An MCC is used to classify a business by the types of goods or services it provides.
                  items:
                    type: string
            - title: Merchant IDs
              required:
                - merchant_ids
              properties:
                merchant_ids:
                  type: array
                  description: Unique identifier of a merchant assigned by a network for payment processing purposes
                  items:
                    type: string
          description: Information about the Merchant to which this limit will apply. If no merchant is provided, the limit will apply to all merchants
          type: object
    service-fee-issued-card-response:
      title: Service fee (issued card)
      type: object
      description: |-
        Structure used to apply service fees to issued card related events and transactions
        Issued card service fees are always of type `DEDUCT`
      properties:
        description:
          type: string
          description: |
            The description can be any descriptive text provided by the user to label the service fee transaction.
          minimum: 1
          maximum: 255
        category:
          oneOf:
            - title: Activation fee
              properties:
                activation_fee:
                  type: object
                  description: Service fee charged when the issued card becomes active
                  properties:
                    value:
                      oneOf:
                        - description: 'Use this service fee value type if you want a fixed amount service fee to be applied to the transaction, in cents (eg. `value: 1000`).'
                          properties:
                            amount:
                              type: integer
                              description: The amount is the value associated with the service fee, in cents.
                              minimum: 1
                              maximum: 99999999
                              example: 1000
                          required:
                            - amount
                      type: object
                  required:
                    - value
            - title: Creation fee
              properties:
                transaction_fee:
                  type: object
                  description: Service fee charged at Card creation
                  properties:
                    value:
                      oneOf:
                        - title: Amount
                          description: 'Use this service fee value type if you want a fixed amount service fee to be applied to the transaction, in cents (eg. `value: 1000`).'
                          properties:
                            amount:
                              type: integer
                              description: The amount is the value associated with the service fee, in cents.
                          required:
                            - amount
                      type: object
                  required:
                    - value
            - title: Replacement/reissuing fee
              properties:
                replacement_reissuing_fee:
                  type: object
                  description: Service fee charged when the card is replaced/reissued
                  properties:
                    value:
                      oneOf:
                        - description: 'Use this service fee value type if you want a fixed amount service fee to be applied to the transaction, in cents (eg. `value: 1000`).'
                          properties:
                            amount:
                              type: integer
                              description: The amount is the value associated with the service fee, in cents.
                              minimum: 1
                              maximum: 99999999
                              example: 1000
                          required:
                            - amount
          type: object
      required:
        - description
        - category
    service-fee-issued-card-request:
      title: Service fee (issued card)
      type: object
      description: |-
        Structure used to apply service fees to issued card related events and transactions
        Issued card service fees are always of type `DEDUCT`
      properties:
        description:
          type: string
          description: |
            The description can be any descriptive text provided by the user to label the service fee transaction.
          minimum: 1
          maximum: 255
        category:
          oneOf:
            - title: Activation fee
              properties:
                activation_fee:
                  type: object
                  description: Service fee charged when the issued card becomes active
                  properties:
                    value:
                      oneOf:
                        - description: 'Use this service fee value type if you want a fixed amount service fee to be applied to the transaction, in cents (eg. `value: 1000`).'
                          properties:
                            amount:
                              type: integer
                              description: The amount is the value associated with the service fee, in cents.
                              minimum: 1
                              maximum: 99999999
                              example: 1000
                          required:
                            - amount
                      type: object
                  required:
                    - value
          type: object
      required:
        - description
        - category
    incentive-rule-request:
      title: Incentive rule
      type: object
      description: Incentive rule model used for transactions
      x-internal: false
      properties:
        external_id:
          type: string
          description: This is your unique ID for this rule. This field is used to guarantee idempotency.
        incentive_type:
          type: string
          description: The type of incentive
          enum:
            - CASHBACK
            - BOOST
        transaction_type:
          type: string
          description: The transaction type to which this rule will apply
          default: CARD_ISSUED_DEBIT
          enum:
            - CARD_ISSUED_DEBIT
        description:
          type: string
          description: A description of the incentive rule
        scope:
          type: string
          description: To which entities this rule apply. If `GLOBAL` this will apply to all transactions in the system. If `ISSUED_CARD` this rule will only apply to the specific cards to which this rule is attached. On card creation this can only be `ISSUED_CARD`
          enum:
            - GLOBAL
            - ISSUED_CARD
        value:
          type: object
          oneOf:
            - type: object
              description: 'Use this service fee value type if you want a fixed amount incentive to be applied to the transaction, in cents (eg. value: 1000)'
              properties:
                amount:
                  type: integer
                  description: The amount is the value associated with incentive, in cents.
                  minimum: 0
                  exclusiveMinimum: true
              required:
                - amount
            - type: object
              description: |-
                Use this incentive value type if you want a percentage to be applied on the total amount of the transaction. For example, if the total amount is $100 and you want to give a 10% incentive, you should set the property to value: 10
                Provide the `cap` field if you want the value to be capped at a certain amount. For example, if the total amount is $1000 and you want to apply a 10% incentive capped to $50, you should set the value: 10 and cap: 5000
              properties:
                percent:
                  type: number
                  format: float
                  description: The percent value to apply to the incentive
                  minimum: 0
                  exclusiveMinimum: true
                  maximum: 100
                cap:
                  type: integer
                  description: |-
                    The amount to cap the incentive in cents, e.g. If you want to provide 1 USD the value must be value: 100
                    If null there's no cap for this incentive
                  example: 100
                  minimum: 1
                  maximum: 99999999
              required:
                - percent
        merchants:
          type: object
          description: Merchants to which the incentive rule apply. They can be either defined by Merchant ID or Merchant Name, and the rule will applied to the combination of both arrays. If not provided, the rule will apply to all merchants
          properties:
            merchant_ids:
              type: array
              description: The array of merchant ids to be accepted. By setting this array, the incentives will only be applied to the merchant ids that are defined here
              items:
                type: string
            merchant_names:
              type: array
              description: The array of merchant names to be accepted. By setting this array, the incentives will only be applied to transactions where the merchant name is included in the list
              items:
                type: string
        expiration_rules:
          type: object
          description: Rules to expire the rule
          properties:
            expiration_date:
              type: string
              description: The date/time on which the rule no longer applies
              example: '2021-06-17T11:02:08.143Z'
            expiration_times:
              type: integer
              description: The total amount of times a rule can be used per wallet before it expires
              minimum: 1
              maximum: 99999999
      required:
        - external_id
        - incentive_type
        - description
        - scope
        - value
    issued-card-request:
      title: Issued Card
      type: object
      description: Card used to spend funds from a wallet
      properties:
        owner:
          description: The account/wallet where the card should be created
          oneOf:
            - title: Account
              required:
                - account_uuid
              properties:
                account_uuid:
                  type: string
                  description: The unique ID of the Account under which the card should be created. If this is provided, the card will be created in the default wallet of the account. If such a wallet does not exist, a new one will be created.
            - title: Wallet
              required:
                - wallet_uuid
              properties:
                wallet_uuid:
                  type: string
                  description: The unique ID of the Wallet under which the card should be created
          type: object
        external_id:
          title: Your unique identification of the card in your system
          description: This is your unique ID for this card. This field is used to guarantee idempotency.
          type: string
        product_id:
          title: The product id corresponding to the card being created
          example: '885'
          description: |
            This product ID is assigned to you by the Alviere team when you setup your card issuance service.
          type: string
        initial_balance:
          title: The initial balance this card will have
          example: 30000
          description: |
            This is the initial balance that the card being issued will have, in cents (100 = 1$)

            **Notes:**
            - This field only applies for Gift Card product types.
            - This field is mandatory for Gift Card product types.
            - If passing this field for other than Gift Card, the system will return a 400 error code.
          type: integer
          minimum: 1
        shipping_address:
          $ref: '#/components/schemas/shipping-address'
        auth_rules:
          type: object
          title: The rules this card should use when authorizing a transaction.
          properties:
            allowed_merchants:
              type: object
              description: |
                Use this section to limit the use of this card to transactions from one or more merchants.
                If a transaction comes through that is not a part of these merchants, the transaction will be declined.
              properties:
                allowed_merchant_ids:
                  description: |
                    The array of merchant ids to be accepted.
                    By setting this array, only transactions where the merchant id is included in the list will be authorized.
                  type: array
                  title: Acceptable merchant ids
                  example:
                    - '8123434'
                    - '8123777'
                  items:
                    type: string
                    format: int64
                allowed_merchant_names:
                  description: |
                    The array of merchant names to be accepted.
                    By setting this array, only transactions where the merchant name is included in the list will be authorized.
                  type: array
                  title: Acceptable merchant names
                  example:
                    - Alviere
                    - Alviere, Inc.
                  items:
                    type: string
            limits:
              type: array
              items:
                $ref: '#/components/schemas/issued-card-limit-request'
        emboss_id:
          type: string
          description: ID to be used at the embossing process
        custom_fields:
          type: object
          title: Card custom fields
          description: Allows setting of specific card fields
          properties:
            shipping_method:
              type: string
              example: DEFAULT
              enum:
                - DEFAULT
                - EXPRESS_FEDEX
            name_on_card:
              type: string
              description: Name on card
              pattern: ^[a-zA-Z0-9- ]{2,26}$
              example: John Doe
            carrier_id:
              type: string
              description: ID of the carrier in which this card should be shipped
              maxLength: 30
            carrier_message:
              type: string
              description: Message to be printed in the carrier
              maxLength: 150
              minLength: 1
        auto_pin_generation:
          type: boolean
          description: |-
            If we need to automatically generate pin for 
            the card
          default: false
        metadata:
          type: object
          title: Card metadata fields
          description: Allows for any number of custom metadata keys and values to be stored with a given card
        service_fees:
          type: array
          items:
            $ref: '#/components/schemas/service-fee-issued-card-request'
        incentives:
          oneOf:
            - title: Incentive rule UUIDs
              description: Array of existing incentive rules that should apply to this card
              required:
                - rule_uuids
              properties:
                rule_uuids:
                  type: array
                  format: uuid
                  description: Array of incentive rule UUIDs
                  items:
                    type: string
            - title: Incentive rules
              required:
                - incentive_rules
              properties:
                incentive_rules:
                  type: array
                  items:
                    $ref: '#/components/schemas/incentive-rule-request'
          type: object
    service-fee-issued-card-replace-reissue:
      title: Service fee (issued card)
      type: object
      description: |-
        Structure used to apply service fees to issued card related events and transactions
        Issued card service fees are always of type `DEDUCT`
      properties:
        description:
          type: string
          description: |
            The description can be any descriptive text provided by the user to label the service fee transaction.
          minimum: 1
          maximum: 255
        category:
          oneOf:
            - title: Activation fee
              properties:
                activation_fee:
                  type: object
                  description: Service fee charged when the issued card becomes active
                  properties:
                    value:
                      oneOf:
                        - description: 'Use this service fee value type if you want a fixed amount service fee to be applied to the transaction, in cents (eg. `value: 1000`).'
                          properties:
                            amount:
                              type: integer
                              description: The amount is the value associated with the service fee, in cents.
                              minimum: 1
                              maximum: 99999999
                              example: 1000
                          required:
                            - amount
            - title: Replacement/reissuing fee
              properties:
                replacement_reissuing_fee:
                  type: object
                  description: Service fee charged when the card is replaced/reissued
                  properties:
                    value:
                      oneOf:
                        - description: 'Use this service fee value type if you want a fixed amount service fee to be applied to the transaction, in cents (eg. `value: 1000`).'
                          properties:
                            amount:
                              type: integer
                              description: The amount is the value associated with the service fee, in cents.
                              minimum: 1
                              maximum: 99999999
                              example: 1000
                          required:
                            - amount
                      type: object
                  required:
                    - value
          type: object
      required:
        - description
        - category
    apple-pay-request:
      title: Apple Pay
      type: object
      description: Parameters required to add card to Apple Pay
      properties:
        cert1:
          type: string
          description: The leaf certificate returned by the wallet provider that was signed using cert2. Should be the hexlified (case insensitive) binary data of the certificate.
        cert2:
          type: string
          description: The subordinate certificate returned by the wallet provider that was signed using the wallet provider’s Certificate Authority (CA) certificate. Should be the hexlified (case insensitive) binary data of the certificate.
        nonce:
          type: string
          description: The hexlified (case insensitive) nonce value returned by Apple Pay.
          example: 9c023092
          minLength: 8
          maxLength: 8
        nonce_signature:
          type: string
          description: The hexlified (case insensitive) nonce signature value returned by Apple Pay.
          example: 4082f883ae62...
      required:
        - cert1
        - cert2
        - nonce
        - nonce_signature
      x-internal: false
    google-pay-request:
      title: Google Pay
      type: object
      description: Parameters required to add card to Google Pay
      properties:
        client_wallet_account_id:
          type: string
          description: Value returned by Google Pay for use with Visa.
        client_device_id:
          type: string
          description: Value returned by Google Pay for use with Visa.
      x-internal: false
    samsung-pay-request:
      title: Samsung Pay
      type: object
      description: Parameters required to add card to Samsung Pay
      properties:
        client_wallet_account_id:
          type: string
          description: Value returned by Samsung Pay. Required only for Visa cards.
        client_device_id:
          type: string
          description: Value returned by Samsung Pay. Required only for Visa cards.
      x-internal: false
    apple-pay-response:
      title: Apple Pay provisioning data
      type: object
      description: Strings required to pass to Apple Pay in your provisioning request.
      properties:
        activation_data:
          type: string
          description: Data needed to activate the token.
        encrypted_pass_data:
          type: string
          description: Encrypted JSON file containing the sensitive information needed to add a card to a wallet.
        ephemeral_public_key:
          type: string
          description: Generated key that is combined with a private key.
      required:
        - activation_data
        - encrypted_pass_data
        - ephemeral_public_key
      x-internal: false
    google-pay-response:
      title: Google Pay provisioning data
      type: object
      description: String required to pass to Google Pay in your provisioning request.
      properties:
        opaque_payment_data:
          type: string
          description: Base64-encoded or Base64url-encoded opaque string to be passed to Google Pay
          format: base64
      required:
        - opaque_payment_data
      x-internal: false
    samsung-pay-response:
      title: Samsung Pay provisioning data
      type: object
      description: String required to pass to Samsung Pay in your provisioning request.
      properties:
        payload:
          type: string
          description: Base64-encoded or Base64url-encoded opaque string to be passed to Samsung Pay
          format: base64
      required:
        - payload
      x-internal: false
    beneficiary-request:
      oneOf:
        - title: Individual
          description: Beneficiary representing an individual account
          required:
            - external_id
            - type
            - first_name
            - last_name
            - country
            - currency
          properties:
            external_id:
              type: string
              description: |-
                The unique identifier of this beneficiary in your own system.

                Note: This is used for idempotency check
            type:
              type: string
              enum:
                - LOCAL
                - INTERNATIONAL
              description: Whether the beneficiary can be used for local or international transactions
            legal_type:
              type: string
              default: INDIVIDUAL
              enum:
                - INDIVIDUAL
              description: Whether the beneficiary is an individual or a business
            first_name:
              type: string
              description: ' The beneficiary''s first name'
              example: John
            middle_name:
              type: string
              description: ' The beneficiary''s middle name'
              example: Mark
            last_name:
              type: string
              description: The beneficiary's last name
              example: Doe
            second_last_name:
              type: string
              description: The beneficiary's second last name (if applicable)
              example: Jones
            date_of_birth:
              type: string
              description: The beneficiary's date of birth
              example: '1976-02-07'
            country:
              type: string
              description: Three-letter country code (ISO 3166-1 alpha-3)
              example: USA
              pattern: ^[A-Z]{3}$
            currency:
              type: string
              description: The bank's currency type in ISO-4217 format
            address:
              $ref: '#/components/schemas/beneficiary-address'
            phone_number:
              type: string
              pattern: ^\+[1-9]\d{1,14}$
              example: '+19176159179'
              description: The beneficiary's phone number in E.164 international standard
            tax_id:
              type: string
              description: Identifying number used for tax purposes
            id_information:
              type: object
              required:
                - id_number
                - id_type
                - country_of_issuance
              properties:
                id_number:
                  type: string
                  description: The unique number of the ID
                id_type:
                  enum:
                    - PASSPORT
                    - NATIONAL_ID
                    - FOREIGNER_ID
                    - DRIVERS_LICENSE
                  description: The type of ID
                country_of_issuance:
                  type: string
                  description: The country that issued the ID
                expiration_date:
                  type: string
                  description: The expiration date of the ID, if applicable
                  example: '2030-02-07'
                  format: date
            label:
              type: string
              description: A label to identify the beneficiary
        - title: Business
          description: Beneficiary representing an individual account
          required:
            - external_id
            - type
            - business_name
            - country
            - currency
          properties:
            external_id:
              type: string
              description: |-
                The unique identifier of this beneficiary in your own system.

                Note: This is used for idempotency check
            type:
              type: string
              enum:
                - LOCAL
                - INTERNATIONAL
              description: Whether the beneficiary can be used for local or international transactions
            legal_type:
              type: string
              enum:
                - BUSINESS
              description: Whether the beneficiary is an individual or a business
            business_name:
              type: string
              description: The business' name
            country:
              type: string
              description: Three-letter country code (ISO 3166-1 alpha-3)
              example: USA
              pattern: ^[A-Z]{3}$
            currency:
              type: string
              description: The bank's currency type in ISO-4217 format
            address:
              $ref: '#/components/schemas/beneficiary-address'
      title: Beneficiary
      description: Details of a Beneficiary
      type: object
    beneficiary-update:
      oneOf:
        - title: Individual
          description: Beneficiary representing an individual account
          properties:
            external_id:
              type: string
              description: |-
                The unique identifier of this beneficiary in your own system.

                Note: This is used for idempotency check
            first_name:
              type: string
              description: ' The beneficiary''s first name'
              example: John
            middle_name:
              type: string
              description: ' The beneficiary''s middle name'
              example: Mark
            last_name:
              type: string
              description: The beneficiary's last name
              example: Doe
            second_last_name:
              type: string
              description: The beneficiary's second last name (if applicable)
              example: Jones
            date_of_birth:
              type: string
              description: The beneficiary's date of birth
              example: '1976-02-07'
            phone_number:
              type: string
              pattern: ^\+[1-9]\d{1,14}$
              example: '+19176159179'
              description: The beneficiary's phone number in E.164 international standard
            id_information:
              type: object
              properties:
                id_number:
                  type: string
                  description: The unique number of the ID
                id_type:
                  enum:
                    - PASSPORT
                    - NATIONAL_ID
                    - FOREIGNER_ID
                    - DRIVERS_LICENSE
                  description: The type of ID
                country_of_issuance:
                  type: string
                  description: The country that issued the ID
                expiration_date:
                  type: string
                  description: The expiration date of the ID, if applicable
                  example: '2030-02-07'
                  format: date
            label:
              type: string
              description: A label to identify the beneficiary
            tax_id:
              type: string
              description: Identifying number used for tax purposes
            address:
              $ref: '#/components/schemas/beneficiary-address'
        - title: Business
          description: Beneficiary representing an individual account
          properties:
            external_id:
              type: string
              description: |-
                The unique identifier of this beneficiary in your own system.

                Note: This is used for idempotency check
            business_name:
              type: string
              description: The business' name
            address:
              $ref: '#/components/schemas/beneficiary-address'
      title: Beneficiary
      description: Details of a Beneficiary
      type: object
    cash-pickup-location:
      title: Cash pickup location
      type: object
      description: Location where a Beneficiary can retrieve cash
      properties:
        cash_pickup_location_uuid:
          type: string
          description: The unique UUID of the cash pickup location
        name:
          type: string
          description: The name of the cash pickup location
        address:
          type: string
          description: The address of the cash pickup location
        network:
          type: string
          description: The network to which this cash pickup location belongs
        type:
          type: string
          enum:
            - UNIVERSAL
            - DESIGNATED
          description: The type of location. For ``UNIVERSAL`` type locations, Beneficiaries can choose to collect their funds at any location that belongs to the selected network. For ``DESIGNATED`` type locations, the funds can only be collected at the designated address
      required:
        - cash_pickup_location_uuid
        - name
        - network
        - type
    cash-pickup-city:
      title: Cash pickup city
      type: object
      description: City where cash pickup locations are supported
      properties:
        city_uuid:
          type: string
          description: The unique ID of the city
        city:
          type: string
          description: The city where the cash pickup location is located
        state:
          type: string
          description: The state where the cash pickup location is located
        country:
          type: string
          description: The country where the cash pickup location is located
      required:
        - city_uuid
        - city
        - state
        - country
    service-fee-value:
      title: Service fee value
      type: object
      properties:
        external_id:
          type: string
          format: uuid
          description: The unique identifier of the service fee in your own system
        description:
          type: string
          description: The description can be any descriptive text provided by the user to label the service fee transaction
        value:
          type: integer
          description: Value associated with the service fee, in cents.
      required:
        - description
        - value
    barcode:
      title: Barcode
      type: object
      description: Barcode required to load cash
      required:
        - barcode_uuid
        - account_uuid
        - wallet_uuid
        - external_id
        - barcode_image
        - barcode_data
        - barcode_format
        - limits
      properties:
        barcode_uuid:
          type: string
          description: The unique identifier of this Barcode
          format: uuid
          example: 550e8400-e29b-41d4-a716-446655440000
        account_uuid:
          type: string
          description: The UUID of the Account owning the Barcode
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
        wallet_uuid:
          type: string
          description: The UUID of the Wallet where the funds will be deposited
          format: uuid
          example: 987fcdeb-51a2-43d1-9c45-123456789abc
        external_id:
          type: string
          description: The external ID of this barcode
          example: barcode_12345
        barcode_image:
          type: string
          description: Barcode image in base64
          example: iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNkYPhfDwAChwGA60e6kgAAAABJRU5ErkJggg==
        barcode_data:
          type: string
          description: Barcode string data
          example: "1234567890123"
        barcode_format:
          enum:
            - CODE-128
          description: The barcode data format
          example: CODE-128
        limits:
          description: Min-max limits for this Barcode
          oneOf:
            - title: Cash loading
              required:
                - min
                - max
              properties:
                min:
                  type: string
                  description: Minimum amount that can be loaded with this Barcode
                  example: "1000"
                max:
                  type: string
                  description: Maximum amount that can be loaded with this Barcode
                  example: "50000"
          type: object
        metadata:
          type: object
          description: Custom key:value pairs stored together with the Barcode
          example:
            store_id: "12345"
            location: "downtown"
        expires_at:
          type: string
          description: The date-time the Barcode expires
          format: date-time
          example: "2024-12-31T23:59:59Z"
        created_at:
          type: string
          description: The date-time the Barcode was created
          format: date-time
          example: "2024-01-15T10:30:00Z"
    store-address:
      title: Store address
      type: object
      description: Details of a store address
      properties:
        line_1:
          title: Address Line One
          description: Address line 1 (e.g., street, PO Box, or company name - NOTE that newline characters are not accepted)
          type: string
          pattern: ^[ a-zA-Z0-9._-]$
          example: 101 Avenue of the Americas
          minLength: 2
          maxLength: 128
        line_2:
          title: Address Line Two
          description: Address line 2 (e.g., apartment, suite, unit, or building - NOTE that newline characters are not accepted)
          type: string
          pattern: ^[ a-zA-Z0-9._-]$
          example: Suite 936
          minLength: 1
          maxLength: 128
        postal_code:
          title: Postal Code
          description: ZIP or postal code
          type: string
          pattern: ^[ a-zA-Z0-9._-]$
          example: '10013'
          maxLength: 20
          minLength: 2
        city:
          title: City
          description: City, district, suburb, town, or village
          type: string
          pattern: ^[ a-zA-Z0-9._-]$
          example: New York
          minLength: 2
          maxLength: 128
        state:
          type: string
          title: State
          description: State, county, province, or region
          pattern: ^[ a-zA-Z0-9._-]$
          example: NY
          minLength: 2
          maxLength: 128
        country:
          title: Country
          description: Three-letter country code (ISO 3166-1 alpha-3).
          type: string
          pattern: ^[A-Z]$
          example: USA
          minLength: 3
          maxLength: 3
    cash-loading-location:
      title: Cash loading location
      type: object
      description: Location where a Consumer can load cash
      required:
        - store_network_id
        - store_name
        - address
        - merchant_information
      properties:
        store_network_id:
          type: string
          description: Unique identifier of the store set by the network
          example: 999ca4cd668cb1734a3e38fe3d8d2921
        store_name:
          type: string
          description: |-
            Name under which the store is
            doing business
          example: CVS Pharmacy
        address:
          $ref: '#/components/schemas/store-address'
        phones:
          type: array
          description: Array of store phone numbers
          items:
            type: string
            example: '4041110000'
        distance:
          type: number
          description: 'Distance of the store to the provided '
          example: 0.15
        coordinates:
          type: object
          description: Store coordinates
          properties:
            latitude:
              type: string
              description: Store latitude
              example: '33.75751899999999'
            longitude:
              type: string
              description: Store longitude
              example: '-84.386868'
        merchant_information:
          type: object
          required:
            - merchant_network_id
            - merchant_name
            - max_amounts
          properties:
            merchant_network_id:
              type: string
              description: Unique merchant identifier assigned by the network
              example: f8ef4281f8b67331499c588d980d4563
            merchant_name:
              type: string
              description: The address of the cash pickup location
              example: CVS Pharmacy
            logo_url:
              type: string
              description: Absolute URL to Merchant's logo image
              example: https://media.cashtie.com/images/cvs_pharmacy.png
              format: uri
            icon_url:
              type: string
              description: Absolute URL to Merchant's icon image
              example: https://media.cashtie.com/images/cvs_pharmacy_icon.png
              format: uri
            max_amounts:
              type: object
              description: Maximum amounts customers can pay at a retailer using barcodes
              required:
                - all
              properties:
                all:
                  type: string
                  description: Maximum amount for all available barcodes
                  example: '500'
    service-fee-check-request:
      title: Service fee
      type: object
      description: Structure used to apply service fees to system events and transactions.
      required:
        - description
        - calc_type
        - category
      properties:
        external_id:
          type: string
          description: The unique identifier of the service fee transaction in your own system
        description:
          type: string
          description: |
            The description can be any descriptive text provided by the user to label the service fee transaction.
          minimum: 1
          maximum: 255
        calc_type:
          type: string
          description: |
            The calculation type in relation to the total transaction.

            * `UPCHARGE`: The service fee will be applied as an upcharge to the transaction. For example, if a customer is performing a cross-border transaction of $100 and there's a `PERCENT` service fee of 10%, the user account would be charged $110.
            * `DEDUCT`: The service fee will be applied as a deduction to the transaction amount. For example, if a customer is performing a withdraw transaction of $100 and there's a `PERCENT` service fee of 10%, the user would only receive $90 on their account.
          enum:
            - DEDUCT
        category:
          type: object
          required:
            - transaction_fee
          properties:
            transaction_fee:
              type: object
              required:
                - value
              properties:
                value:
                  type: object
                  oneOf:
                    - type: object
                      title: Amount
                      description: 'Use this service fee value type if you want a fixed amount service fee to be applied to the transaction, in cents (eg. `value: 1000`).'
                      required:
                        - amount
                      properties:
                        amount:
                          type: integer
                          description: The amount is the value associated with the service fee, in cents.
                    - type: object
                      title: Percent
                      description: |-
                        Use this service fee value type if you want a service fee percentage to be applied on the total amount of the transaction. For example, if the total amount is $100 and you want to apply a 10% fee, you should set the property to `value: 10`

                        Set the `cap` field if you want the percentage amount to be capped to a certain amount. For example, if the total amount is $1000 and you want to apply a 10% fee capped to $50, you should set the `value: 10` and `cap: 5000`
                      required:
                        - percent
                      properties:
                        percent:
                          type: number
                          description: The percent value to apply to the service fee transaction
                          maximum: 100
                          format: float
                          example: 14.5
                          minimum: 0
                          exclusiveMinimum: true
                        cap:
                          type: number
                          description: |-
                            The amount to cap the service fee in cents, e.g. If you want to debit 1 USD the value must be `value: 100` 

                            If `null` there's no cap for this service fee.
                          minimum: 1
                          maximum: 99999999
                          example: 100
    summary-data:
      title: Summary data
      type: object
      description: Account and transactions summary data
      properties:
        account_data:
          type: object
          description: Summary data related to the Account for all transaction types
          properties:
            count_completed:
              type: integer
              description: Global amount of completed transactions of `LOAD_FUNDS`, `BANK_PASSTHROUGH`, `CARD_PASSTHROUGH` and `CHECK_DEPOSIT`
            count_returned:
              type: integer
              description: Global amount of returned/chargebacked transactions of `LOAD_FUNDS`, `BANK_PASSTHROUGH`, `CARD_PASSTHROUGH` and `CHECK_DEPOSIT`
            count_chargeback:
              type: integer
              description: Global amount of chargebacked transactions
            count_failed:
              type: integer
              description: Global amount of failed transactions of `LOAD_FUNDS`, `BANK_PASSTHROUGH`, `CARD_PASSTHROUGH` and `CHECK_DEPOSIT`
            total_amount_returned:
              type: integer
              description: Total value returned in `LOAD_FUNDS`, `BANK_PASSTHROUGH`, `CARD_PASSTHROUGH` and `CHECK_DEPOSIT`
        transaction_type_data:
          type: array
          description: Summary data related to the Account per transaction type
          items:
            type: object
            properties:
              transaction_type:
                type: string
                description: Transaction type in scope of the provided data
              count_completed:
                type: integer
                description: Global amount of completed transactions of the specific type
              count_returned:
                type: integer
                description: Global amount of returned/chargebacked transactions of the specific type
              count_chargeback:
                type: integer
                description: Global amount of chargeback transactions of the specific type
              count_failed:
                type: integer
                description: Global amount of failed transactions of the specific type
              avg_amount_returned:
                type: integer
                description: Average value returned/chargebacked for transactions of the specific type
    bank-details:
      title: Bank details
      type: object
      description: Bank details
      required:
        - bank_uuid
        - bank_name
        - country
      properties:
        bank_uuid:
          type: string
          description: The unique UUID of the bank
        bank_name:
          type: string
          description: The name of the bank
        country:
          type: string
          description: The country of the Bank
  parameters:
    Version:
      name: Version
      in: header
      required: true
      example: '2021-11-18'
      schema:
        type: string
        example: '2021-11-18'
      description: The API version
    account_uuid:
      name: account_uuid
      in: path
      required: true
      schema:
        type: string
        format: uuid
      description: The unique ID of an Account
    address_uuid:
      name: address_uuid
      in: path
      required: true
      schema:
        type: string
        format: uuid
      description: The unique ID of an Address
    dossier_uuid:
      name: dossier_uuid
      in: path
      required: true
      schema:
        type: string
        format: uuid
      description: The unique ID of a dossier
    check_uuid:
      name: check_uuid
      in: path
      required: true
      schema:
        type: string
        format: uuid
      description: The unique ID of a Check
    wallet_uuid:
      name: wallet_uuid
      in: path
      required: true
      schema:
        type: string
        format: uuid
      description: The unique ID of a Wallet
    transaction_uuid:
      name: transaction_uuid
      in: path
      required: true
      schema:
        type: string
        format: uuid
      description: The unique ID of a transaction
    token:
      name: token
      in: path
      required: true
      schema:
        type: string
        format: uuid
      description: A tokenized payment object, such as a card or bank account
    payment_method_uuid:
      name: payment_method_uuid
      in: path
      required: true
      schema:
        type: string
      description: The unique ID of a payment method
    vault_uuid:
      name: vault_uuid
      in: path
      required: true
      schema:
        type: string
      description: The unique ID of a Treasury Vault
    cash_pickup_location_uuid:
      name: cash_pickup_location_uuid
      in: path
      required: true
      schema:
        type: string
      description: Cash pickup location unique ID
    city_uuid:
      name: city_uuid
      in: query
      required: false
      schema:
        type: string
      description: UUID of City where pickup location is located
    card_uuid:
      name: card_uuid
      in: path
      required: true
      schema:
        type: string
      description: The unique ID of a Card
    limit:
      name: limit
      in: query
      required: false
      schema:
        type: integer
        minLength: 1
        default: 10
        maxLength: 1000
        minimum: 1
        maximum: 1000
      description: The number of items per page
    offset:
      name: offset
      in: query
      required: false
      schema:
        type: integer
        minLength: 0
        default: 0
        minimum: 0
      description: Start after offset amount of items
    
    bank_uuid:
      name: bank_uuid
      in: path
      required: true
      schema:
        type: string
        format: uuid
      description: The unique ID of a Bank
    Authorization:
      name: Authorization
      in: header
      required: true
      schema:
        type: string
        example: Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUI...
      description: The access token
    transaction-type:
      name: type
      in: query
      required: false
      schema:
        type: string
        enum:
          - ACH_PRENOTE
          - ADJUSTMENT
          - BANK_CREDIT
          - BANK_DEBIT
          - BANK_PASSTHROUGH
          - BOOST
          - CARD_ISSUED_ADJUSTMENT
          - CARD_ISSUED_ATM_DEBIT
          - CARD_ISSUED_CREDIT
          - CARD_ISSUED_DEBIT
          - CARD_ISSUED_DISPUTE_CREDIT
          - CARD_ISSUED_DISPUTE_DEBIT
          - CARD_ISSUED_FEE
          - CARD_ISSUED_INITIAL
          - CARD_ISSUED_OTC_DEBIT
          - CARD_ISSUED_REISSUE
          - CARD_ISSUED_RESET
          - CARD_ISSUED_TERMINAL_CREDIT
          - CARD_PASSTHROUGH
          - CASH_LOADING
          - CASHBACK
          - CHARGEBACK
          - CHECK_DEPOSIT
          - CHECK_DEPOSIT_RETURN
          - CHECK_DISBURSEMENT
          - EXTERNAL_CREDIT
          - EXTERNAL_DEBIT
          - INTERNATIONAL_TRANSFER
          - INTERNAL_CREDIT
          - LOAD_FUNDS
          - LOAD_PULLBACK
          - NEGATIVE_LOSS
          - PAYMENT
          - PREFUND
          - RECOVERY
          - REFUND
          - REFUND_PASSTHROUGH
          - RETURN
          - REVERSAL
          - SERVICE_FEE
          - SERVICE_FEE_REVERSAL
          - TRANSIT_TRANSFER
          - TRANSFER
          - WALLET_TRANSFER
          - WITHDRAW_FUNDS
      description: String needs to be a valid transaction type, or multiple valid types separated by a `,`
    transaction-status:
      name: status
      in: query
      schema:
        type: string
        enum:
          - CREATED
          - PROCESSING
          - PROCESSING_PAYMENT
          - COMPLETED
          - FAILED
          - ERROR
          - VOIDED
          - PENDING
          - MANUAL_REVIEW
          - REJECTED
          - WAITING
          - CANCELED_USER
          - CANCELED_SYSTEM
      description: String needs to be a valid transaction status, or multiple valid statuses separated by a `,`
    start_date:
      name: start_date
      in: query
      required: false
      schema:
        type: string
        format: date-time
        example: '2019-10-12T07:20:50.52Z'
      description: Start date for list entity - default is first created entity date time
    end_date:
      name: end_date
      in: query
      required: false
      schema:
        type: string
        format: date-time
        example: '2019-10-12T07:20:50.52Z'
      description: End date for list entity
    wallet_transaction_type:
      name: type
      in: query
      required: false
      schema:
        type: string
        enum:
          - ADJUSTMENT
          - BANK_CREDIT
          - BANK_DEBIT
          - BOOST
          - CASH_LOADING
          - CARD_ISSUED_ADJUSTMENT
          - CARD_ISSUED_ATM_DEBIT
          - CARD_ISSUED_CREDIT
          - CARD_ISSUED_DEBIT
          - CARD_ISSUED_DISPUTE_CREDIT
          - CARD_ISSUED_DISPUTE_DEBIT
          - CARD_ISSUED_FEE
          - CARD_ISSUED_INITIAL
          - CARD_ISSUED_OTC_DEBIT
          - CARD_ISSUED_REISSUE
          - CARD_ISSUED_RESET
          - CARD_ISSUED_TERMINAL_CREDIT
          - CASHBACK
          - CHARGEBACK
          - CHECK_DEPOSIT
          - CHECK_DEPOSIT_RETURN
          - CHECK_DISBURSEMENT
          - INTERNATIONAL_TRANSFER
          - LOAD_FUNDS
          - LOAD_PULLBACK
          - NEGATIVE_LOSS
          - PAYMENT
          - RECOVERY
          - REFUND
          - RETURN
          - REVERSAL
          - SERVICE_FEE
          - SERVICE_FEE_REVERSAL
          - TRANSFER
          - WALLET_TRANSFER
          - WITHDRAW_FUNDS
      description: String needs to be a valid walet transaction type, or multiple valid types separated by a `,`
    wallet_child_transaction_type:
      name: wallet_child_transaction_type
      in: query
      required: false
      schema:
        type: string
        enum:
          - ACH_PRENOTE
          - ADJUSTMENT
          - BANK_CREDIT
          - BANK_DEBIT
          - BANK_PASSTHROUGH
          - BOOST
          - CASH_LOADING
          - CARD_ISSUED_ADJUSTMENT
          - CARD_ISSUED_ATM_DEBIT
          - CARD_ISSUED_CREDIT
          - CARD_ISSUED_DEBIT
          - CARD_ISSUED_DISPUTE_CREDIT
          - CARD_ISSUED_DISPUTE_DEBIT
          - CARD_ISSUED_FEE
          - CARD_ISSUED_INITIAL
          - CARD_ISSUED_OTC_DEBIT
          - CARD_ISSUED_REISSUE
          - CARD_ISSUED_RESET
          - CARD_ISSUED_TERMINAL_CREDIT
          - CARD_PASSTHROUGH
          - CASHBACK
          - CHARGEBACK
          - CHECK_DEPOSIT
          - CHECK_DEPOSIT_RETURN
          - CHECK_DISBURSEMENT
          - EXTERNAL_CREDIT
          - EXTERNAL_DEBIT
          - INTERNATIONAL_TRANSFER
          - INTERNAL_CREDIT
          - LOAD_FUNDS
          - LOAD_PULLBACK
          - NEGATIVE_LOSS
          - PAYMENT
          - PREFUND
          - RECOVERY
          - REFUND
          - REFUND_PASSTHROUGH
          - RETURN
          - REVERSAL
          - SERVICE_FEE
          - SERVICE_FEE_REVERSAL
          - TRANSIT_TRANSFER
          - TRANSFER
          - WALLET_TRANSFER
          - WITHDRAW_FUNDS
      description: String needs to be a valid wallet child transaction type, or multiple valid types separated by a `,`
    beneficiary_uuid:
      name: beneficiary_uuid
      in: path
      required: true
      schema:
        type: string
      description: The unique ID of a Beneficiary
    payout_method_uuid:
      name: payout_method_uuid
      in: path
      required: true
      schema:
        type: string
      description: The unique ID of a payout method
    payment_instrument_uuid:
      name: payment_instrument_uuid
      in: path
      required: true
      schema:
        type: string
      description: The unique ID of a payment instrument
    rule_uuid:
      name: rule_uuid
      in: path
      required: true
      schema:
        type: string
        format: uuid
      description: The unique ID of a rule
    account_uuid_query:
      name: account_uuid
      in: query
      required: false
      schema:
        type: string
      description: The unique ID of an Account
    wallet_uuid_query:
      name: wallet_uuid
      in: query
      required: false
      schema:
        type: string
      description: The unique ID of a Wallet
    card-statuses:
      name: status
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
          enum:
            - CREATED
            - PENDING
            - PROCESSING
            - ACTIVE
            - FROZEN
            - SET_TO_EMBOSS
            - READY_TO_ACTIVATE
            - RETURNED_MAIL
            - LOST_STOLEN
            - CANCELED
            - EXPIRED
            - FAILED
      description: The status of the card
  responses:
    400-Error:
      description: 'Bad Request '
      headers:
        Alv-Request-Id:
          description: |
            Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
            spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
            and serves solely for the purpose of technical debugging and troubleshooting.
          example: 8944355f-342d-42df-9ec9-5b12e619d504
          schema:
            type: string
      content:
        application/json:
          schema:
            type: object
            properties:
              error_code:
                title: The unique error code
                description: This error mainly occurs because there is a missing or invalid property in the request payload
                type: string
                example: '50001'
              error_description:
                title: A description of the error that occurred
                description: Description of the error in plain english
                type: string
                example: Missing required property in payload
    401-Error:
      description: Unauthorized
      headers:
        Alv-Request-Id:
          description: |
            Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
            spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
            and serves solely for the purpose of technical debugging and troubleshooting.
          example: 8944355f-342d-42df-9ec9-5b12e619d504
          schema:
            type: string
      content:
        application/json:
          schema:
            type: object
            properties:
              error_code:
                title: The unique error code
                description: This error most likely occurred because the JWT is invalid or has expired
                type: string
                example: '50002'
              error_description:
                title: A description of the error that occurred
                description: Description of the error in plain english
                type: string
                example: Invalid JWT access token
    403-Error:
      description: Forbidden
      headers:
        Alv-Request-Id:
          description: |
            Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
            spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
            and serves solely for the purpose of technical debugging and troubleshooting.
          example: 8944355f-342d-42df-9ec9-5b12e619d504
          schema:
            type: string
      content:
        application/json:
          schema:
            type: object
            properties:
              error_code:
                title: The unique error code
                description: This error most likely occurred because you are trying to access a resource that is not authorized for your access credentials
                type: string
                example: '50003'
              error_description:
                title: A description of the error that occurred
                description: Description of the error in plain english
                type: string
                example: Access not granted to this resource
    404-Error:
      description: Not Found
      headers:
        Alv-Request-Id:
          description: |
            Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
            spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
            and serves solely for the purpose of technical debugging and troubleshooting.
          example: 8944355f-342d-42df-9ec9-5b12e619d504
          schema:
            type: string
      content:
        application/json:
          schema:
            type: object
            properties:
              error_code:
                title: The unique error code
                description: This error occurs when the object you are trying to access was not found. Please review the object uuid you are sending in this transaction
                type: string
                example: '50004'
              error_description:
                title: A description of the error that occurred
                description: Description of the error in plain english
                type: string
                example: Resource not found
    ledger-transaction-response-success:
      description: The transaction was created.
      headers:
        Alv-Request-Id:
          description: |
            Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
            spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
            and serves solely for the purpose of technical debugging and troubleshooting.
          example: 8944355f-342d-42df-9ec9-5b12e619d504
          schema:
            type: string
      content:
        application/json:
          schema:
            type: object
            properties:
              transaction:
                $ref: '#/components/schemas/transaction'
              validation:
                type: object
                description: Errors associated with the response. If there are no errors, fields will be empty.
                required:
                  - result
                properties:
                  result:
                    title: Result of the operation
                    type: string
                    enum:
                      - ACCEPTED
                      - DENIED
                  error_code:
                    type: string
                    example: '500012'
                    description: The error code that identifies the error
                  error_description:
                    type: string
                    example: Payment method is invalid
                    description: The description of the error that occurred
            required:
              - transaction
              - validation
    wallet-transaction-response-success:
      description: The transaction was created
      headers:
        Alv-Request-Id:
          description: |
            Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
            spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
            and serves solely for the purpose of technical debugging and troubleshooting.
          example: 8944355f-342d-42df-9ec9-5b12e619d504
          schema:
            type: string
      content:
        application/json:
          schema:
            type: object
            properties:
              transaction:
                $ref: '#/components/schemas/wallet-transaction'
              validation:
                type: object
                description: Errors associated with the response. If there are no errors, fields will be empty.
                required:
                  - result
                properties:
                  result:
                    title: Result of the operation
                    type: string
                    enum:
                      - ACCEPTED
                      - DENIED
                  error_code:
                    type: string
                    example: '500012'
                    description: The error code that identifies the error
                  error_description:
                    type: string
                    example: Payment method is invalid
                    description: The description of the error that occurred
            required:
              - transaction
              - validation
          examples:
            Load funds:
              value:
                transaction:
                  transaction_uuid: 70bf7636-892d-40c5-a01e-c0d3090dacf9
                  wallet_uuid: 15100419-77df-4478-a84e-f14ca3f4f3dc
                  account_uuid: ddb3d090-c124-4bc8-80d0-1e5a53aecc3f
                  external_id: deb8f56c-a979-49d0-a852-6810532902e5
                  transaction_type: LOAD_FUNDS
                  status: CREATED
                  description: ''
                  amount: 23000
                  currency: USD
                  funds_source:
                    payment_method_uuid: 5415e4b8-369c-4439-a66a-6e9d59e94804
                  refunded: false
                  disputed: false
                  created_at: '2025-03-17T15:07:34.107753Z'
                  updated_at: '2025-03-17T15:07:34.116814Z'
                validation:
                  result: ACCEPTED
            Withdraw funds:
              value:
                transaction:
                  transaction_uuid: a9699e10-a417-445e-b964-98b8b0e7117d
                  wallet_uuid: 25ee1eea-cc84-4f8b-a3ac-6b5f00c90557
                  account_uuid: 25ee1eea-cc84-4f8b-a3ac-6b5f00c90557
                  external_id: df3ccd32-773a-4535-b55c-3d7926ce7a37
                  transaction_type: WITHDRAW_FUNDS
                  status: CREATED
                  description: ''
                  amount: -59285
                  currency: USD
                  funds_source: {}
                  refunded: false
                  disputed: false
                  created_at: '2025-03-18T11:54:40.990725Z'
                  updated_at: '2025-03-18T11:54:40.998051Z'
                validation:
                  result: ACCEPTED
    ledger-transaction-response-idempotency:
      description: Idempotency detected - conflict with `external_id` field.
      headers:
        Alv-Request-Id:
          description: |
            Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
            spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
            and serves solely for the purpose of technical debugging and troubleshooting.
          example: 8944355f-342d-42df-9ec9-5b12e619d504
          schema:
            type: string
      content:
        application/json:
          schema:
            type: object
            properties:
              transaction:
                $ref: '#/components/schemas/transaction'
              validation:
                type: object
                description: Errors associated with the response. If there are no errors, fields will be empty.
                required:
                  - result
                properties:
                  result:
                    title: Result of the operation
                    type: string
                    enum:
                      - ACCEPTED
                      - DENIED
                  error_code:
                    type: string
                    example: '500012'
                    description: The error code that identifies the error
                  error_description:
                    type: string
                    example: Payment method is invalid
                    description: The description of the error that occurred
            required:
              - transaction
              - validation
    wallet-transaction-response-idempotency:
      description: Idempotency detected - conflict with `external_id` field.
      headers:
        Alv-Request-Id:
          description: |
            Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
            spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
            and serves solely for the purpose of technical debugging and troubleshooting.
          example: 8944355f-342d-42df-9ec9-5b12e619d504
          schema:
            type: string
      content:
        application/json:
          schema:
            type: object
            properties:
              transaction:
                $ref: '#/components/schemas/wallet-transaction'
              validation:
                type: object
                description: Errors associated with the response. If there are no errors, fields will be empty.
                required:
                  - result
                properties:
                  result:
                    title: Result of the operation
                    type: string
                    enum:
                      - ACCEPTED
                      - DENIED
                  error_code:
                    type: string
                    example: '500012'
                    description: The error code that identifies the error
                  error_description:
                    type: string
                    example: Payment method is invalid
                    description: The description of the error that occurred
            required:
              - transaction
              - validation
    account-response-success:
      description: |
        The account was successfully created in the system and the KYC and Identity Management processes have been kicked off.
      headers:
        Alv-Request-Id:
          description: |
            Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
            spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
            and serves solely for the purpose of technical debugging and troubleshooting.
          example: 8944355f-342d-42df-9ec9-5b12e619d504
          schema:
            type: string
      content:
        application/json:
          schema:
            type: object
            properties:
              account:
                $ref: '#/components/schemas/account-response'
    account-response-idempotency:
      description: Idempotency detected - conflict with `external_id` property.
      headers:
        Alv-Request-Id:
          description: |
            Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
            spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
            and serves solely for the purpose of technical debugging and troubleshooting.
          example: 8944355f-342d-42df-9ec9-5b12e619d504
          schema:
            type: string
      content:
        application/json:
          schema:
            type: object
            description: |
              The user account details containing all the information of the user.
            properties:
              account:
                type: array
                items:
                  $ref: '#/components/schemas/account-response'
    check-response-success:
      description: |
        The details of the check
      headers:
        Alv-Request-Id:
          description: |
            Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
            spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
            and serves solely for the purpose of technical debugging and troubleshooting.
          example: 8944355f-342d-42df-9ec9-5b12e619d504
          schema:
            type: string
      content:
        application/json:
          schema:
            type: object
            description: |
              The check details
            properties:
              check:
                $ref: '#/components/schemas/check'
            required:
              - check
    check-response-idempotency:
      description: |
        Idempotency detected - conflict with `external_id`field.
      headers:
        Alv-Request-Id:
          description: |
            Alviere's internal unique identifier for the request. This ID is automatically generated by our API service and
            spans across our entire infrastructure allowing tech ops to trace a request. This id has no business use case
            and serves solely for the purpose of technical debugging and troubleshooting.
          example: 8944355f-342d-42df-9ec9-5b12e619d504
          schema:
            type: string
      content:
        application/json:
          schema:
            type: object
            description: The check details
            properties:
              check:
                $ref: '#/components/schemas/check'
            required:
              - check
